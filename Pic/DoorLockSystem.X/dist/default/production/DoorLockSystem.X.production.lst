

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue May 09 22:17:55 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	dabs	1,0x7E,2
    46     0000                     
    47                           ; Version 2.40
    48                           ; Generated 17/11/2021 GMT
    49                           ; 
    50                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F877A Definitions
    80                           ; 
    81                           ; SFR Addresses
    82     0000                     	;# 
    83     0001                     	;# 
    84     0002                     	;# 
    85     0003                     	;# 
    86     0004                     	;# 
    87     0005                     	;# 
    88     0006                     	;# 
    89     0007                     	;# 
    90     0008                     	;# 
    91     0009                     	;# 
    92     000A                     	;# 
    93     000B                     	;# 
    94     000C                     	;# 
    95     000D                     	;# 
    96     000E                     	;# 
    97     000E                     	;# 
    98     000F                     	;# 
    99     0010                     	;# 
   100     0011                     	;# 
   101     0012                     	;# 
   102     0013                     	;# 
   103     0014                     	;# 
   104     0015                     	;# 
   105     0015                     	;# 
   106     0016                     	;# 
   107     0017                     	;# 
   108     0018                     	;# 
   109     0019                     	;# 
   110     001A                     	;# 
   111     001B                     	;# 
   112     001B                     	;# 
   113     001C                     	;# 
   114     001D                     	;# 
   115     001E                     	;# 
   116     001F                     	;# 
   117     0081                     	;# 
   118     0085                     	;# 
   119     0086                     	;# 
   120     0087                     	;# 
   121     0088                     	;# 
   122     0089                     	;# 
   123     008C                     	;# 
   124     008D                     	;# 
   125     008E                     	;# 
   126     0091                     	;# 
   127     0092                     	;# 
   128     0093                     	;# 
   129     0094                     	;# 
   130     0098                     	;# 
   131     0099                     	;# 
   132     009C                     	;# 
   133     009D                     	;# 
   134     009E                     	;# 
   135     009F                     	;# 
   136     010C                     	;# 
   137     010D                     	;# 
   138     010E                     	;# 
   139     010F                     	;# 
   140     018C                     	;# 
   141     018D                     	;# 
   142     0000                     	;# 
   143     0001                     	;# 
   144     0002                     	;# 
   145     0003                     	;# 
   146     0004                     	;# 
   147     0005                     	;# 
   148     0006                     	;# 
   149     0007                     	;# 
   150     0008                     	;# 
   151     0009                     	;# 
   152     000A                     	;# 
   153     000B                     	;# 
   154     000C                     	;# 
   155     000D                     	;# 
   156     000E                     	;# 
   157     000E                     	;# 
   158     000F                     	;# 
   159     0010                     	;# 
   160     0011                     	;# 
   161     0012                     	;# 
   162     0013                     	;# 
   163     0014                     	;# 
   164     0015                     	;# 
   165     0015                     	;# 
   166     0016                     	;# 
   167     0017                     	;# 
   168     0018                     	;# 
   169     0019                     	;# 
   170     001A                     	;# 
   171     001B                     	;# 
   172     001B                     	;# 
   173     001C                     	;# 
   174     001D                     	;# 
   175     001E                     	;# 
   176     001F                     	;# 
   177     0081                     	;# 
   178     0085                     	;# 
   179     0086                     	;# 
   180     0087                     	;# 
   181     0088                     	;# 
   182     0089                     	;# 
   183     008C                     	;# 
   184     008D                     	;# 
   185     008E                     	;# 
   186     0091                     	;# 
   187     0092                     	;# 
   188     0093                     	;# 
   189     0094                     	;# 
   190     0098                     	;# 
   191     0099                     	;# 
   192     009C                     	;# 
   193     009D                     	;# 
   194     009E                     	;# 
   195     009F                     	;# 
   196     010C                     	;# 
   197     010D                     	;# 
   198     010E                     	;# 
   199     010F                     	;# 
   200     018C                     	;# 
   201     018D                     	;# 
   202     0000                     	;# 
   203     0001                     	;# 
   204     0002                     	;# 
   205     0003                     	;# 
   206     0004                     	;# 
   207     0005                     	;# 
   208     0006                     	;# 
   209     0007                     	;# 
   210     0008                     	;# 
   211     0009                     	;# 
   212     000A                     	;# 
   213     000B                     	;# 
   214     000C                     	;# 
   215     000D                     	;# 
   216     000E                     	;# 
   217     000E                     	;# 
   218     000F                     	;# 
   219     0010                     	;# 
   220     0011                     	;# 
   221     0012                     	;# 
   222     0013                     	;# 
   223     0014                     	;# 
   224     0015                     	;# 
   225     0015                     	;# 
   226     0016                     	;# 
   227     0017                     	;# 
   228     0018                     	;# 
   229     0019                     	;# 
   230     001A                     	;# 
   231     001B                     	;# 
   232     001B                     	;# 
   233     001C                     	;# 
   234     001D                     	;# 
   235     001E                     	;# 
   236     001F                     	;# 
   237     0081                     	;# 
   238     0085                     	;# 
   239     0086                     	;# 
   240     0087                     	;# 
   241     0088                     	;# 
   242     0089                     	;# 
   243     008C                     	;# 
   244     008D                     	;# 
   245     008E                     	;# 
   246     0091                     	;# 
   247     0092                     	;# 
   248     0093                     	;# 
   249     0094                     	;# 
   250     0098                     	;# 
   251     0099                     	;# 
   252     009C                     	;# 
   253     009D                     	;# 
   254     009E                     	;# 
   255     009F                     	;# 
   256     010C                     	;# 
   257     010D                     	;# 
   258     010E                     	;# 
   259     010F                     	;# 
   260     018C                     	;# 
   261     018D                     	;# 
   262     0000                     	;# 
   263     0001                     	;# 
   264     0002                     	;# 
   265     0003                     	;# 
   266     0004                     	;# 
   267     0005                     	;# 
   268     0006                     	;# 
   269     0007                     	;# 
   270     0008                     	;# 
   271     0009                     	;# 
   272     000A                     	;# 
   273     000B                     	;# 
   274     000C                     	;# 
   275     000D                     	;# 
   276     000E                     	;# 
   277     000E                     	;# 
   278     000F                     	;# 
   279     0010                     	;# 
   280     0011                     	;# 
   281     0012                     	;# 
   282     0013                     	;# 
   283     0014                     	;# 
   284     0015                     	;# 
   285     0015                     	;# 
   286     0016                     	;# 
   287     0017                     	;# 
   288     0018                     	;# 
   289     0019                     	;# 
   290     001A                     	;# 
   291     001B                     	;# 
   292     001B                     	;# 
   293     001C                     	;# 
   294     001D                     	;# 
   295     001E                     	;# 
   296     001F                     	;# 
   297     0081                     	;# 
   298     0085                     	;# 
   299     0086                     	;# 
   300     0087                     	;# 
   301     0088                     	;# 
   302     0089                     	;# 
   303     008C                     	;# 
   304     008D                     	;# 
   305     008E                     	;# 
   306     0091                     	;# 
   307     0092                     	;# 
   308     0093                     	;# 
   309     0094                     	;# 
   310     0098                     	;# 
   311     0099                     	;# 
   312     009C                     	;# 
   313     009D                     	;# 
   314     009E                     	;# 
   315     009F                     	;# 
   316     010C                     	;# 
   317     010D                     	;# 
   318     010E                     	;# 
   319     010F                     	;# 
   320     018C                     	;# 
   321     018D                     	;# 
   322     0000                     	;# 
   323     0001                     	;# 
   324     0002                     	;# 
   325     0003                     	;# 
   326     0004                     	;# 
   327     0005                     	;# 
   328     0006                     	;# 
   329     0007                     	;# 
   330     0008                     	;# 
   331     0009                     	;# 
   332     000A                     	;# 
   333     000B                     	;# 
   334     000C                     	;# 
   335     000D                     	;# 
   336     000E                     	;# 
   337     000E                     	;# 
   338     000F                     	;# 
   339     0010                     	;# 
   340     0011                     	;# 
   341     0012                     	;# 
   342     0013                     	;# 
   343     0014                     	;# 
   344     0015                     	;# 
   345     0015                     	;# 
   346     0016                     	;# 
   347     0017                     	;# 
   348     0018                     	;# 
   349     0019                     	;# 
   350     001A                     	;# 
   351     001B                     	;# 
   352     001B                     	;# 
   353     001C                     	;# 
   354     001D                     	;# 
   355     001E                     	;# 
   356     001F                     	;# 
   357     0081                     	;# 
   358     0085                     	;# 
   359     0086                     	;# 
   360     0087                     	;# 
   361     0088                     	;# 
   362     0089                     	;# 
   363     008C                     	;# 
   364     008D                     	;# 
   365     008E                     	;# 
   366     0091                     	;# 
   367     0092                     	;# 
   368     0093                     	;# 
   369     0094                     	;# 
   370     0098                     	;# 
   371     0099                     	;# 
   372     009C                     	;# 
   373     009D                     	;# 
   374     009E                     	;# 
   375     009F                     	;# 
   376     010C                     	;# 
   377     010D                     	;# 
   378     010E                     	;# 
   379     010F                     	;# 
   380     018C                     	;# 
   381     018D                     	;# 
   382                           
   383                           	psect	strings
   384     06B7                     __pstrings:
   385     06B7                     stringtab:
   386     06B7                     __stringtab:
   387                           
   388                           ;	String table - string pointers are 1 byte each
   389     06B7  1BFF               	btfsc	btemp+1,7
   390     06B8  2EC1               	ljmp	stringcode
   391     06B9  1383               	bcf	3,7
   392     06BA  187F               	btfsc	btemp+1,0
   393     06BB  1783               	bsf	3,7
   394     06BC  0800               	movf	0,w
   395     06BD  0A84               	incf	4,f
   396     06BE  1903               	skipnz
   397     06BF  0AFF               	incf	btemp+1,f
   398     06C0  0008               	return
   399     06C1                     stringcode:
   400     06C1                     stringdir:
   401     06C1  3006               	movlw	high stringdir
   402     06C2  008A               	movwf	10
   403     06C3  0804               	movf	4,w
   404     06C4  0A84               	incf	4,f
   405     06C5  0782               	addwf	2,f
   406     06C6                     __stringbase:
   407     06C6  3400               	retlw	0
   408     06C7                     __end_of__stringtab:
   409     06C7                     _keypad:
   410     06C7  342A               	retlw	42
   411     06C8  3407               	retlw	7
   412     06C9  3404               	retlw	4
   413     06CA  3401               	retlw	1
   414     06CB  3400               	retlw	0
   415     06CC  3408               	retlw	8
   416     06CD  3405               	retlw	5
   417     06CE  3402               	retlw	2
   418     06CF  3423               	retlw	35
   419     06D0  3409               	retlw	9
   420     06D1  3406               	retlw	6
   421     06D2  3403               	retlw	3
   422     06D3                     __end_of_keypad:
   423     0009                     _PORTEbits	set	9
   424     0008                     _PORTDbits	set	8
   425     0019                     _TXREG	set	25
   426     000C                     _PIR1	set	12
   427     001A                     _RCREG	set	26
   428     000B                     _INTCON	set	11
   429     0018                     _RCSTA	set	24
   430     0008                     _PORTD	set	8
   431     0006                     _PORTB	set	6
   432     0065                     _RCIF	set	101
   433     0089                     _TRISE	set	137
   434     0087                     _TRISC	set	135
   435     008C                     _PIE1	set	140
   436     0099                     _SPBRG	set	153
   437     0098                     _TXSTA	set	152
   438     0086                     _TRISB	set	134
   439     0088                     _TRISD	set	136
   440     06D3                     STR_5:
   441     06D3  3472               	retlw	114	;'r'
   442     06D4  3461               	retlw	97	;'a'
   443     06D5  3473               	retlw	115	;'s'
   444     06D6  3470               	retlw	112	;'p'
   445     06D7  3469               	retlw	105	;'i'
   446     06D8  3400               	retlw	0
   447     06D9                     STR_1:
   448     06D9  3431               	retlw	49	;'1'
   449     06DA  3432               	retlw	50	;'2'
   450     06DB  3433               	retlw	51	;'3'
   451     06DC  3441               	retlw	65	;'A'
   452     06DD  3400               	retlw	0
   453     06DE                     STR_4:
   454     06DE  3461               	retlw	97	;'a'
   455     06DF  3462               	retlw	98	;'b'
   456     06E0  3420               	retlw	32	;' '
   457     06E1  3400               	retlw	0
   458     06D9                     
   459                           	psect	cinit
   460     0015                     start_initialization:	
   461                           ; #config settings
   462                           
   463     0015                     __initialization:
   464                           
   465                           ; Clear objects allocated to COMMON
   466     0015  01FB               	clrf	__pbssCOMMON& (0+127)
   467     0016  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   468                           
   469                           ; Clear objects allocated to BANK0
   470     0017  1383               	bcf	3,7	;select IRP bank0
   471     0018  3046               	movlw	low __pbssBANK0
   472     0019  0084               	movwf	4
   473     001A  3058               	movlw	low (__pbssBANK0+18)
   474     001B  120A  158A  27EE  120A  118A  	fcall	clear_ram0
   475                           
   476                           ; Clear objects allocated to BANK3
   477     0020  1783               	bsf	3,7	;select IRP bank2
   478     0021  3090               	movlw	low __pbssBANK3
   479     0022  0084               	movwf	4
   480     0023  30BA               	movlw	low (__pbssBANK3+42)
   481     0024  120A  158A  27EE  120A  118A  	fcall	clear_ram0
   482     0029                     end_of_initialization:	
   483                           ;End of C runtime variable initialization code
   484                           
   485     0029                     __end_of__initialization:
   486     0029  0183               	clrf	3
   487     002A  120A  118A  2A0C   	ljmp	_main	;jump to C main() function
   488                           
   489                           	psect	bssCOMMON
   490     007B                     __pbssCOMMON:
   491     007B                     _is_line_busy:
   492     007B                     	ds	1
   493     007C                     Numpad_Read@oldKeyVal:
   494     007C                     	ds	1
   495                           
   496                           	psect	bssBANK0
   497     0046                     __pbssBANK0:
   498     0046                     UART_data_received@index:
   499     0046                     	ds	2
   500     0048                     _receive_queue_elements:
   501     0048                     	ds	1
   502     0049                     UART_data_received@buffer:
   503     0049                     	ds	15
   504                           
   505                           	psect	bssBANK3
   506     0190                     __pbssBANK3:
   507     0190                     _receive_queue:
   508     0190                     	ds	42
   509                           
   510                           	psect	clrtext
   511     0FEE                     clear_ram0:	
   512                           ;	Called with FSR containing the base address, and
   513                           ;	W with the last address+1
   514                           
   515     0FEE  0064               	clrwdt	;clear the watchdog before getting into this loop
   516     0FEF                     clrloop0:
   517     0FEF  0180               	clrf	0	;clear RAM location pointed to by FSR
   518     0FF0  0A84               	incf	4,f	;increment pointer
   519     0FF1  0604               	xorwf	4,w	;XOR with final address
   520     0FF2  1903               	btfsc	3,2	;have we reached the end yet?
   521     0FF3  3400               	retlw	0	;all done for this memory range, return
   522     0FF4  0604               	xorwf	4,w	;XOR again to restore value
   523     0FF5  2FEF               	goto	clrloop0	;do the next byte
   524                           
   525                           	psect	cstackBANK3
   526     01BA                     __pcstackBANK3:
   527     01BA                     main@packet:
   528                           
   529                           ; 14 bytes @ 0x0
   530     01BA                     	ds	14
   531     01C8                     main@send_packet:
   532                           
   533                           ; 14 bytes @ 0xE
   534     01C8                     	ds	14
   535                           
   536                           	psect	cstackBANK1
   537     00A0                     __pcstackBANK1:
   538     00A0                     ??_Lcd_Write_Int:
   539     00A0                     ___aldiv@counter:	
   540                           ; 1 bytes @ 0x0
   541                           
   542     00A0                     memcpy@tmp:	
   543                           ; 1 bytes @ 0x0
   544                           
   545                           
   546                           ; 1 bytes @ 0x0
   547     00A0                     	ds	1
   548     00A1                     ___aldiv@sign:
   549     00A1                     memcpy@d:	
   550                           ; 1 bytes @ 0x1
   551                           
   552                           
   553                           ; 2 bytes @ 0x1
   554     00A1                     	ds	1
   555     00A2                     ___aldiv@quotient:
   556                           
   557                           ; 4 bytes @ 0x2
   558     00A2                     	ds	1
   559     00A3                     memcpy@s:
   560     00A3                     Lcd_Write_Int@buffer:	
   561                           ; 2 bytes @ 0x3
   562                           
   563                           
   564                           ; 50 bytes @ 0x3
   565     00A3                     	ds	2
   566     00A5                     UART_send_packet@buffer:
   567                           
   568                           ; 15 bytes @ 0x5
   569     00A5                     	ds	1
   570     00A6                     ??_communication_init:
   571                           
   572                           ; 1 bytes @ 0x6
   573     00A6                     	ds	14
   574     00B4                     UART_send_packet@packet_to_send:
   575                           
   576                           ; 1 bytes @ 0x14
   577     00B4                     	ds	1
   578     00B5                     UART_send_packet@i:
   579                           
   580                           ; 2 bytes @ 0x15
   581     00B5                     	ds	32
   582     00D5                     Lcd_Write_Int@isNeg:
   583                           
   584                           ; 1 bytes @ 0x35
   585     00D5                     	ds	1
   586     00D6                     Lcd_Write_Int@n1:
   587                           
   588                           ; 2 bytes @ 0x36
   589     00D6                     	ds	2
   590     00D8                     Lcd_Write_Int@n:
   591                           
   592                           ; 2 bytes @ 0x38
   593     00D8                     	ds	2
   594     00DA                     Lcd_Write_Int@t:
   595                           
   596                           ; 2 bytes @ 0x3A
   597     00DA                     	ds	2
   598     00DC                     Lcd_Write_Int@i:
   599                           
   600                           ; 2 bytes @ 0x3C
   601     00DC                     	ds	2
   602     00DE                     ??_main:
   603                           
   604                           ; 1 bytes @ 0x3E
   605     00DE                     	ds	3
   606                           
   607                           	psect	cstackCOMMON
   608     0070                     __pcstackCOMMON:
   609     0070                     ?_UART_TxByte:
   610     0070                     ?_UART_send_packet:	
   611                           ; 1 bytes @ 0x0
   612                           
   613     0070                     ?_communication_task:	
   614                           ; 1 bytes @ 0x0
   615                           
   616     0070                     ?_UART_data_received:	
   617                           ; 1 bytes @ 0x0
   618                           
   619     0070                     ?_received_queue_thereispending:	
   620                           ; 1 bytes @ 0x0
   621                           
   622     0070                     ?_received_queue_get_packet:	
   623                           ; 1 bytes @ 0x0
   624                           
   625     0070                     ?_Lcd_Port:	
   626                           ; 1 bytes @ 0x0
   627                           
   628     0070                     ?_Lcd_Cmd:	
   629                           ; 1 bytes @ 0x0
   630                           
   631     0070                     ?_Lcd_Init:	
   632                           ; 1 bytes @ 0x0
   633                           
   634     0070                     ?_Lcd_Clear:	
   635                           ; 1 bytes @ 0x0
   636                           
   637     0070                     ?_Lcd_Write_Char:	
   638                           ; 1 bytes @ 0x0
   639                           
   640     0070                     ?_main:	
   641                           ; 1 bytes @ 0x0
   642                           
   643     0070                     ?_ISR:	
   644                           ; 1 bytes @ 0x0
   645                           
   646     0070                     ?i1_memset:	
   647                           ; 1 bytes @ 0x0
   648                           
   649     0070                     ?i1___bmul:	
   650                           ; 1 bytes @ 0x0
   651                           
   652     0070                     ?_strcmp:	
   653                           ; 1 bytes @ 0x0
   654                           
   655     0070                     strcmp@s2:	
   656                           ; 2 bytes @ 0x0
   657                           
   658     0070                     i1___bmul@multiplicand:	
   659                           ; 1 bytes @ 0x0
   660                           
   661     0070                     i1memset@p1:	
   662                           ; 1 bytes @ 0x0
   663                           
   664                           
   665                           ; 2 bytes @ 0x0
   666     0070                     	ds	1
   667     0071                     ??i1___bmul:
   668                           
   669                           ; 1 bytes @ 0x1
   670     0071                     	ds	1
   671     0072                     ??_strcmp:
   672     0072                     i1___bmul@product:	
   673                           ; 1 bytes @ 0x2
   674                           
   675     0072                     i1memset@c:	
   676                           ; 1 bytes @ 0x2
   677                           
   678                           
   679                           ; 2 bytes @ 0x2
   680     0072                     	ds	1
   681     0073                     i1___bmul@multiplier:
   682                           
   683                           ; 1 bytes @ 0x3
   684     0073                     	ds	1
   685     0074                     ?i1_memcpy:
   686     0074                     strcmp@r:	
   687                           ; 1 bytes @ 0x4
   688                           
   689     0074                     i1memcpy@d1:	
   690                           ; 1 bytes @ 0x4
   691                           
   692     0074                     i1memset@n:	
   693                           ; 2 bytes @ 0x4
   694                           
   695                           
   696                           ; 2 bytes @ 0x4
   697     0074                     	ds	1
   698     0075                     strcmp@s1:
   699                           
   700                           ; 1 bytes @ 0x5
   701     0075                     	ds	1
   702     0076                     ??i1_memset:
   703     0076                     i1memcpy@s1:	
   704                           ; 1 bytes @ 0x6
   705                           
   706     0076                     i1memset@p:	
   707                           ; 2 bytes @ 0x6
   708                           
   709                           
   710                           ; 2 bytes @ 0x6
   711     0076                     	ds	2
   712     0078                     i1memcpy@n:
   713                           
   714                           ; 2 bytes @ 0x8
   715     0078                     	ds	2
   716     007A                     ??_UART_data_received:
   717     007A                     ??i1_memcpy:	
   718                           ; 1 bytes @ 0xA
   719                           
   720                           
   721                           ; 1 bytes @ 0xA
   722     007A                     	ds	1
   723                           
   724                           	psect	cstackBANK0
   725     0020                     __pcstackBANK0:
   726     0020                     i1memcpy@d:
   727                           
   728                           ; 2 bytes @ 0x0
   729     0020                     	ds	2
   730     0022                     i1memcpy@s:
   731                           
   732                           ; 2 bytes @ 0x2
   733     0022                     	ds	2
   734     0024                     i1memcpy@tmp:
   735                           
   736                           ; 1 bytes @ 0x4
   737     0024                     	ds	1
   738     0025                     UART_data_received@data:
   739                           
   740                           ; 1 bytes @ 0x5
   741     0025                     	ds	1
   742     0026                     UART_data_received@received_packet:
   743                           
   744                           ; 14 bytes @ 0x6
   745     0026                     	ds	14
   746     0034                     ??_ISR:
   747                           
   748                           ; 1 bytes @ 0x14
   749     0034                     	ds	4
   750     0038                     ?_strncpy:
   751     0038                     ??_UART_TxByte:	
   752                           ; 1 bytes @ 0x18
   753                           
   754     0038                     ??_communication_task:	
   755                           ; 1 bytes @ 0x18
   756                           
   757     0038                     ??_received_queue_thereispending:	
   758                           ; 1 bytes @ 0x18
   759                           
   760     0038                     ??_Lcd_Port:	
   761                           ; 1 bytes @ 0x18
   762                           
   763     0038                     ?___bmul:	
   764                           ; 1 bytes @ 0x18
   765                           
   766     0038                     ?_memset:	
   767                           ; 1 bytes @ 0x18
   768                           
   769     0038                     ?___awdiv:	
   770                           ; 2 bytes @ 0x18
   771                           
   772     0038                     ?___lwdiv:	
   773                           ; 2 bytes @ 0x18
   774                           
   775     0038                     ?___lwmod:	
   776                           ; 2 bytes @ 0x18
   777                           
   778     0038                     ?___aldiv:	
   779                           ; 2 bytes @ 0x18
   780                           
   781     0038                     Lcd_Port@a:	
   782                           ; 4 bytes @ 0x18
   783                           
   784     0038                     ___bmul@multiplicand:	
   785                           ; 1 bytes @ 0x18
   786                           
   787     0038                     strncpy@from:	
   788                           ; 1 bytes @ 0x18
   789                           
   790     0038                     ___awdiv@divisor:	
   791                           ; 1 bytes @ 0x18
   792                           
   793     0038                     ___lwdiv@divisor:	
   794                           ; 2 bytes @ 0x18
   795                           
   796     0038                     ___lwmod@divisor:	
   797                           ; 2 bytes @ 0x18
   798                           
   799     0038                     memset@p1:	
   800                           ; 2 bytes @ 0x18
   801                           
   802     0038                     ___aldiv@divisor:	
   803                           ; 2 bytes @ 0x18
   804                           
   805                           
   806                           ; 4 bytes @ 0x18
   807     0038                     	ds	1
   808     0039                     ??_Lcd_Cmd:
   809     0039                     ??_Lcd_Write_Char:	
   810                           ; 1 bytes @ 0x19
   811                           
   812     0039                     ??___bmul:	
   813                           ; 1 bytes @ 0x19
   814                           
   815     0039                     UART_TxByte@byte:	
   816                           ; 1 bytes @ 0x19
   817                           
   818     0039                     strncpy@size:	
   819                           ; 1 bytes @ 0x19
   820                           
   821                           
   822                           ; 2 bytes @ 0x19
   823     0039                     	ds	1
   824     003A                     Lcd_Write_Char@temp:
   825     003A                     ___bmul@product:	
   826                           ; 1 bytes @ 0x1A
   827                           
   828     003A                     ___awdiv@dividend:	
   829                           ; 1 bytes @ 0x1A
   830                           
   831     003A                     ___lwdiv@dividend:	
   832                           ; 2 bytes @ 0x1A
   833                           
   834     003A                     ___lwmod@dividend:	
   835                           ; 2 bytes @ 0x1A
   836                           
   837     003A                     memset@c:	
   838                           ; 2 bytes @ 0x1A
   839                           
   840                           
   841                           ; 2 bytes @ 0x1A
   842     003A                     	ds	1
   843     003B                     ??_strncpy:
   844     003B                     Lcd_Cmd@a:	
   845                           ; 1 bytes @ 0x1B
   846                           
   847     003B                     Lcd_Write_Char@y:	
   848                           ; 1 bytes @ 0x1B
   849                           
   850     003B                     ___bmul@multiplier:	
   851                           ; 1 bytes @ 0x1B
   852                           
   853                           
   854                           ; 1 bytes @ 0x1B
   855     003B                     	ds	1
   856     003C                     ??_Lcd_Init:
   857     003C                     ??_Lcd_Clear:	
   858                           ; 1 bytes @ 0x1C
   859                           
   860     003C                     ??___awdiv:	
   861                           ; 1 bytes @ 0x1C
   862                           
   863     003C                     ??___lwdiv:	
   864                           ; 1 bytes @ 0x1C
   865                           
   866     003C                     ??___lwmod:	
   867                           ; 1 bytes @ 0x1C
   868                           
   869     003C                     ?_memcpy:	
   870                           ; 1 bytes @ 0x1C
   871                           
   872     003C                     Lcd_Write_Char@a:	
   873                           ; 2 bytes @ 0x1C
   874                           
   875     003C                     strncpy@to:	
   876                           ; 1 bytes @ 0x1C
   877                           
   878     003C                     memcpy@d1:	
   879                           ; 1 bytes @ 0x1C
   880                           
   881     003C                     memset@n:	
   882                           ; 2 bytes @ 0x1C
   883                           
   884     003C                     ___aldiv@dividend:	
   885                           ; 2 bytes @ 0x1C
   886                           
   887                           
   888                           ; 4 bytes @ 0x1C
   889     003C                     	ds	1
   890     003D                     ?_Lcd_Write_String:
   891     003D                     ___awdiv@counter:	
   892                           ; 1 bytes @ 0x1D
   893                           
   894     003D                     ___lwmod@counter:	
   895                           ; 1 bytes @ 0x1D
   896                           
   897     003D                     strncpy@cp:	
   898                           ; 1 bytes @ 0x1D
   899                           
   900     003D                     Lcd_Write_String@a:	
   901                           ; 1 bytes @ 0x1D
   902                           
   903     003D                     ___lwdiv@quotient:	
   904                           ; 2 bytes @ 0x1D
   905                           
   906                           
   907                           ; 2 bytes @ 0x1D
   908     003D                     	ds	1
   909     003E                     ??_memset:
   910     003E                     ___awdiv@sign:	
   911                           ; 1 bytes @ 0x1E
   912                           
   913     003E                     memcpy@s1:	
   914                           ; 1 bytes @ 0x1E
   915                           
   916     003E                     memset@p:	
   917                           ; 2 bytes @ 0x1E
   918                           
   919                           
   920                           ; 2 bytes @ 0x1E
   921     003E                     	ds	1
   922     003F                     ??_Lcd_Write_String:
   923     003F                     ___lwdiv@counter:	
   924                           ; 1 bytes @ 0x1F
   925                           
   926     003F                     ___awdiv@quotient:	
   927                           ; 1 bytes @ 0x1F
   928                           
   929                           
   930                           ; 2 bytes @ 0x1F
   931     003F                     	ds	1
   932     0040                     ??___aldiv:
   933     0040                     memcpy@n:	
   934                           ; 1 bytes @ 0x20
   935                           
   936                           
   937                           ; 2 bytes @ 0x20
   938     0040                     	ds	1
   939     0041                     ?_communication_init:
   940     0041                     communication_init@baudrate:	
   941                           ; 1 bytes @ 0x21
   942                           
   943                           
   944                           ; 4 bytes @ 0x21
   945     0041                     	ds	1
   946     0042                     ??_memcpy:
   947     0042                     ??_UART_send_packet:	
   948                           ; 1 bytes @ 0x22
   949                           
   950     0042                     ??_received_queue_get_packet:	
   951                           ; 1 bytes @ 0x22
   952                           
   953     0042                     received_queue_get_packet@packet:	
   954                           ; 1 bytes @ 0x22
   955                           
   956     0042                     Lcd_Write_String@i:	
   957                           ; 1 bytes @ 0x22
   958                           
   959                           
   960                           ; 2 bytes @ 0x22
   961     0042                     	ds	2
   962     0044                     ?_Lcd_Write_Int:
   963     0044                     Lcd_Write_Int@val:	
   964                           ; 2 bytes @ 0x24
   965                           
   966                           
   967                           ; 2 bytes @ 0x24
   968     0044                     	ds	2
   969                           
   970                           	psect	maintext
   971     020C                     __pmaintext:	
   972 ;;
   973 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   974 ;;
   975 ;; *************** function _main *****************
   976 ;; Defined at:
   977 ;;		line 20 in file "main.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;		None
   980 ;; Auto vars:     Size  Location     Type
   981 ;;  packet         14    0[BANK3 ] struct .
   982 ;;  send_packet    14   14[BANK3 ] struct .
   983 ;;  received_cou    2    0        unsigned int 
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      void 
   986 ;; Registers used:
   987 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   988 ;; Tracked objects:
   989 ;;		On entry : B00/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   993 ;;      Params:         0       0       0       0       0
   994 ;;      Locals:         0       0       0      28       0
   995 ;;      Temps:          0       0       3       0       0
   996 ;;      Totals:         0       0       3      28       0
   997 ;;Total ram usage:       31 bytes
   998 ;; Hardware stack levels required when called: 8
   999 ;; This function calls:
  1000 ;;		_Lcd_Clear
  1001 ;;		_Lcd_Init
  1002 ;;		_Lcd_Write_Char
  1003 ;;		_Lcd_Write_Int
  1004 ;;		_Lcd_Write_String
  1005 ;;		_UART_send_packet
  1006 ;;		_communication_init
  1007 ;;		_communication_task
  1008 ;;		_memset
  1009 ;;		_received_queue_get_packet
  1010 ;;		_received_queue_thereispending
  1011 ;;		_strncpy
  1012 ;; This function is called by:
  1013 ;;		Startup code after reset
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017     020C                     _main:	
  1018                           ;psect for function _main
  1019                           
  1020     020C                     l1995:	
  1021                           ;incstack = 0
  1022                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1023                           
  1024                           
  1025                           ;main.c: 21:     Lcd_Init();
  1026     020C  120A  118A  234D  120A  118A  	fcall	_Lcd_Init
  1027                           
  1028                           ;main.c: 22:     communication_init(115200);
  1029     0211  3000               	movlw	0
  1030     0212  1283               	bcf	3,5	;RP0=0, select bank0
  1031     0213  1303               	bcf	3,6	;RP1=0, select bank0
  1032     0214  00C4               	movwf	communication_init@baudrate+3
  1033     0215  3001               	movlw	1
  1034     0216  00C3               	movwf	communication_init@baudrate+2
  1035     0217  30C2               	movlw	194
  1036     0218  00C2               	movwf	communication_init@baudrate+1
  1037     0219  3000               	movlw	0
  1038     021A  00C1               	movwf	communication_init@baudrate
  1039     021B  120A  118A  2424  120A  118A  	fcall	_communication_init
  1040     0220                     l1997:
  1041                           
  1042                           ;main.c: 23:     Lcd_Write_String("ab ");
  1043     0220  3018               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1044     0221  1283               	bcf	3,5	;RP0=0, select bank0
  1045     0222  1303               	bcf	3,6	;RP1=0, select bank0
  1046     0223  00BD               	movwf	Lcd_Write_String@a
  1047     0224  3080               	movlw	128
  1048     0225  00BE               	movwf	Lcd_Write_String@a+1
  1049     0226  120A  118A  255A  120A  118A  	fcall	_Lcd_Write_String
  1050     022B                     l1999:
  1051                           
  1052                           ;main.c: 24:     TRISD = 0x00;
  1053     022B  1683               	bsf	3,5	;RP0=1, select bank1
  1054     022C  1303               	bcf	3,6	;RP1=0, select bank1
  1055     022D  0188               	clrf	8	;volatile
  1056     022E                     l2001:
  1057                           
  1058                           ;main.c: 25:     PORTD = 0x00;
  1059     022E  1283               	bcf	3,5	;RP0=0, select bank0
  1060     022F  1303               	bcf	3,6	;RP1=0, select bank0
  1061     0230  0188               	clrf	8	;volatile
  1062     0231                     l2003:
  1063                           
  1064                           ;main.c: 32:         communication_task();
  1065     0231  120A  118A  27FB  120A  118A  	fcall	_communication_task
  1066     0236                     l2005:
  1067                           
  1068                           ;main.c: 33:         TRISB |= 0x02;
  1069     0236  1683               	bsf	3,5	;RP0=1, select bank1
  1070     0237  1303               	bcf	3,6	;RP1=0, select bank1
  1071     0238  1486               	bsf	6,1	;volatile
  1072     0239                     l2007:
  1073                           
  1074                           ;main.c: 34:         if(!(PORTB & 0x02))
  1075     0239  1283               	bcf	3,5	;RP0=0, select bank0
  1076     023A  1303               	bcf	3,6	;RP1=0, select bank0
  1077     023B  1886               	btfsc	6,1	;volatile
  1078     023C  2A3E               	goto	u1851
  1079     023D  2A3F               	goto	u1850
  1080     023E                     u1851:
  1081     023E  2A79               	goto	l2019
  1082     023F                     u1850:
  1083     023F                     l2009:
  1084                           
  1085                           ;main.c: 35:         {;main.c: 36:         shared_packet_t send_packet;;main.c: 37:     
      +                              memset(&send_packet,0x00,sizeof(shared_packet_t));
  1086     023F  30C8               	movlw	(low (main@send_packet| (0+256)))& (0+255)
  1087     0240  00B8               	movwf	memset@p1
  1088     0241  3001               	movlw	1
  1089     0242  00B9               	movwf	memset@p1+1
  1090     0243  3000               	movlw	0
  1091     0244  00BA               	movwf	memset@c
  1092     0245  00BB               	movwf	memset@c+1
  1093     0246  300E               	movlw	14
  1094     0247  00BC               	movwf	memset@n
  1095     0248  3000               	movlw	0
  1096     0249  00BD               	movwf	memset@n+1
  1097     024A  120A  118A  2731  120A  118A  	fcall	_memset
  1098     024F                     l2011:
  1099                           
  1100                           ;main.c: 38:         send_packet.packet_type = PACKET_GENERATE;
  1101     024F  3002               	movlw	2
  1102     0250  1683               	bsf	3,5	;RP0=1, select bank3
  1103     0251  1703               	bsf	3,6	;RP1=1, select bank3
  1104     0252  00D4               	movwf	(main@send_packet^(0+384)+12)
  1105     0253                     l2013:
  1106                           
  1107                           ;main.c: 40:         strncpy(send_packet.target_device, "raspi", 5);
  1108     0253  300D               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1109     0254  1283               	bcf	3,5	;RP0=0, select bank0
  1110     0255  1303               	bcf	3,6	;RP1=0, select bank0
  1111     0256  00B8               	movwf	strncpy@from
  1112     0257  3005               	movlw	5
  1113     0258  00B9               	movwf	strncpy@size
  1114     0259  3000               	movlw	0
  1115     025A  00BA               	movwf	strncpy@size+1
  1116     025B  30CF               	movlw	(low ((main@send_packet| (0+256)+7)))& (0+255)
  1117     025C  120A  118A  25A0  120A  118A  	fcall	_strncpy
  1118                           
  1119                           ;main.c: 41:         send_packet.generate_command.code = 12;
  1120     0261  300C               	movlw	12
  1121     0262  1683               	bsf	3,5	;RP0=1, select bank3
  1122     0263  1703               	bsf	3,6	;RP1=1, select bank3
  1123     0264  00D5               	movwf	(main@send_packet^(0+384)+13)
  1124     0265                     l2015:
  1125                           
  1126                           ;main.c: 42:         UART_send_packet(&send_packet);
  1127     0265  30C8               	movlw	(low (main@send_packet| (0+256)))& (0+255)
  1128     0266  120A  118A  247B  120A  118A  	fcall	_UART_send_packet
  1129     026B                     l2017:
  1130                           
  1131                           ;main.c: 43:         _delay((unsigned long)((200)*(20000000/4000.0)));
  1132     026B  3006               	movlw	6
  1133     026C  1683               	bsf	3,5	;RP0=1, select bank1
  1134     026D  1303               	bcf	3,6	;RP1=0, select bank1
  1135     026E  00E0               	movwf	(??_main^(0+128)+2)
  1136     026F  3013               	movlw	19
  1137     0270  00DF               	movwf	(??_main^(0+128)+1)
  1138     0271  30AD               	movlw	173
  1139     0272  00DE               	movwf	??_main^(0+128)
  1140     0273                     u1877:
  1141     0273  0BDE               	decfsz	??_main^(0+128),f
  1142     0274  2A73               	goto	u1877
  1143     0275  0BDF               	decfsz	(??_main^(0+128)+1),f
  1144     0276  2A73               	goto	u1877
  1145     0277  0BE0               	decfsz	(??_main^(0+128)+2),f
  1146     0278  2A73               	goto	u1877
  1147     0279                     l2019:
  1148                           
  1149                           ;main.c: 46:         if(received_queue_thereispending())
  1150     0279  120A  158A  27F6  120A  118A  	fcall	_received_queue_thereispending
  1151     027E  3A00               	xorlw	0
  1152     027F  1903               	skipnz
  1153     0280  2A82               	goto	u1861
  1154     0281  2A83               	goto	u1860
  1155     0282                     u1861:
  1156     0282  2A31               	goto	l2003
  1157     0283                     u1860:
  1158     0283                     l2021:
  1159                           
  1160                           ;main.c: 47:         {;main.c: 48:             shared_packet_t packet;;main.c: 49:      
      +                                 received_queue_get_packet(&packet);
  1161     0283  30BA               	movlw	(low (main@packet| (0+256)))& (0+255)
  1162     0284  120A  118A  270B  120A  118A  	fcall	_received_queue_get_packet
  1163     0289                     l2023:
  1164                           
  1165                           ;main.c: 50:             Lcd_Clear();
  1166     0289  120A  118A  27EE  120A  118A  	fcall	_Lcd_Clear
  1167     028E                     l2025:
  1168                           
  1169                           ;main.c: 51:             Lcd_Write_Int(packet.length);
  1170     028E  1683               	bsf	3,5	;RP0=1, select bank3
  1171     028F  1703               	bsf	3,6	;RP1=1, select bank3
  1172     0290  083B               	movf	(main@packet+1)^(0+384),w
  1173     0291  1283               	bcf	3,5	;RP0=0, select bank0
  1174     0292  1303               	bcf	3,6	;RP1=0, select bank0
  1175     0293  00C5               	movwf	Lcd_Write_Int@val+1
  1176     0294  1683               	bsf	3,5	;RP0=1, select bank3
  1177     0295  1703               	bsf	3,6	;RP1=1, select bank3
  1178     0296  083A               	movf	main@packet^(0+384),w
  1179     0297  1283               	bcf	3,5	;RP0=0, select bank0
  1180     0298  1303               	bcf	3,6	;RP1=0, select bank0
  1181     0299  00C4               	movwf	Lcd_Write_Int@val
  1182     029A  120A  118A  202D  120A  118A  	fcall	_Lcd_Write_Int
  1183     029F                     l2027:
  1184                           
  1185                           ;main.c: 52:             Lcd_Write_Char(' ');
  1186     029F  3020               	movlw	32
  1187     02A0  120A  118A  261E  120A  118A  	fcall	_Lcd_Write_Char
  1188     02A5                     l2029:
  1189                           
  1190                           ;main.c: 53:             Lcd_Write_Int(packet.generate_command.code);
  1191     02A5  1683               	bsf	3,5	;RP0=1, select bank3
  1192     02A6  1703               	bsf	3,6	;RP1=1, select bank3
  1193     02A7  0847               	movf	(main@packet^(0+384)+13),w
  1194     02A8  1683               	bsf	3,5	;RP0=1, select bank1
  1195     02A9  1303               	bcf	3,6	;RP1=0, select bank1
  1196     02AA  00DE               	movwf	??_main^(0+128)
  1197     02AB  01DF               	clrf	(??_main^(0+128)+1)
  1198     02AC  085E               	movf	??_main^(0+128),w
  1199     02AD  1283               	bcf	3,5	;RP0=0, select bank0
  1200     02AE  1303               	bcf	3,6	;RP1=0, select bank0
  1201     02AF  00C4               	movwf	Lcd_Write_Int@val
  1202     02B0  1683               	bsf	3,5	;RP0=1, select bank1
  1203     02B1  1303               	bcf	3,6	;RP1=0, select bank1
  1204     02B2  085F               	movf	(??_main+1)^(0+128),w
  1205     02B3  1283               	bcf	3,5	;RP0=0, select bank0
  1206     02B4  1303               	bcf	3,6	;RP1=0, select bank0
  1207     02B5  00C5               	movwf	Lcd_Write_Int@val+1
  1208     02B6  120A  118A  202D  120A  118A  	fcall	_Lcd_Write_Int
  1209     02BB                     l2031:
  1210                           
  1211                           ;main.c: 54:             Lcd_Write_Char(' ');
  1212     02BB  3020               	movlw	32
  1213     02BC  120A  118A  261E  120A  118A  	fcall	_Lcd_Write_Char
  1214     02C1                     l2033:
  1215                           
  1216                           ;main.c: 55:             Lcd_Write_String(packet.source_device);
  1217     02C1  30BC               	movlw	(low ((main@packet| (0+256)+2)))& (0+255)
  1218     02C2  1283               	bcf	3,5	;RP0=0, select bank0
  1219     02C3  1303               	bcf	3,6	;RP1=0, select bank0
  1220     02C4  00BD               	movwf	Lcd_Write_String@a
  1221     02C5  3001               	movlw	1
  1222     02C6  00BE               	movwf	Lcd_Write_String@a+1
  1223     02C7  120A  118A  255A  120A  118A  	fcall	_Lcd_Write_String
  1224     02CC  2A31               	goto	l2003
  1225     02CD  120A  118A  2812   	ljmp	start
  1226     02D0                     __end_of_main:
  1227                           
  1228                           	psect	text1
  1229     0FF6                     __ptext1:	
  1230 ;; *************** function _received_queue_thereispending *****************
  1231 ;; Defined at:
  1232 ;;		line 75 in file "communication/communication.c"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;		None
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;		None
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  1    wreg      unsigned char 
  1239 ;; Registers used:
  1240 ;;		wreg, status,2, status,0
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1246 ;;      Params:         0       0       0       0       0
  1247 ;;      Locals:         0       0       0       0       0
  1248 ;;      Temps:          0       0       0       0       0
  1249 ;;      Totals:         0       0       0       0       0
  1250 ;;Total ram usage:        0 bytes
  1251 ;; Hardware stack levels used: 1
  1252 ;; Hardware stack levels required when called: 4
  1253 ;; This function calls:
  1254 ;;		Nothing
  1255 ;; This function is called by:
  1256 ;;		_main
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260     0FF6                     _received_queue_thereispending:	
  1261                           ;psect for function _received_queue_thereispending
  1262                           
  1263     0FF6                     l1711:	
  1264                           ;incstack = 0
  1265                           ; Regs used in _received_queue_thereispending: [wreg+status,2+status,0]
  1266                           
  1267                           
  1268                           ;communication/communication.c: 77:     return receive_queue_elements > 0;
  1269     0FF6  1283               	bcf	3,5	;RP0=0, select bank0
  1270     0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  1271     0FF8  0848               	movf	_receive_queue_elements,w
  1272     0FF9  1D03               	btfss	3,2
  1273     0FFA  2FFC               	goto	u1471
  1274     0FFB  2FFE               	goto	u1470
  1275     0FFC                     u1471:
  1276     0FFC  3001               	movlw	1
  1277     0FFD  2FFF               	goto	u1480
  1278     0FFE                     u1470:
  1279     0FFE  3000               	movlw	0
  1280     0FFF                     u1480:
  1281     0FFF                     l85:
  1282     0FFF  0008               	return
  1283     1000                     __end_of_received_queue_thereispending:
  1284                           
  1285                           	psect	text2
  1286     070B                     __ptext2:	
  1287 ;; *************** function _received_queue_get_packet *****************
  1288 ;; Defined at:
  1289 ;;		line 80 in file "communication/communication.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;  packet          1    wreg     PTR struct .
  1292 ;;		 -> main@packet(14), 
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;  packet          1   34[BANK0 ] PTR struct .
  1295 ;;		 -> main@packet(14), 
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  1    wreg      void 
  1298 ;; Registers used:
  1299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1305 ;;      Params:         0       0       0       0       0
  1306 ;;      Locals:         0       1       0       0       0
  1307 ;;      Temps:          0       0       0       0       0
  1308 ;;      Totals:         0       1       0       0       0
  1309 ;;Total ram usage:        1 bytes
  1310 ;; Hardware stack levels used: 1
  1311 ;; Hardware stack levels required when called: 5
  1312 ;; This function calls:
  1313 ;;		___bmul
  1314 ;;		_memcpy
  1315 ;; This function is called by:
  1316 ;;		_main
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320     070B                     _received_queue_get_packet:	
  1321                           ;psect for function _received_queue_get_packet
  1322                           
  1323                           
  1324                           ;incstack = 0
  1325                           ; Regs used in _received_queue_get_packet: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1326                           ;received_queue_get_packet@packet stored from wreg
  1327     070B  1283               	bcf	3,5	;RP0=0, select bank0
  1328     070C  1303               	bcf	3,6	;RP1=0, select bank0
  1329     070D  00C2               	movwf	received_queue_get_packet@packet
  1330     070E                     l1947:
  1331                           
  1332                           ;communication/communication.c: 80: void received_queue_get_packet(shared_packet_t* pack
      +                          et);communication/communication.c: 81: {;communication/communication.c: 82:     if(recei
      +                          ve_queue_elements > 0)
  1333     070E  0848               	movf	_receive_queue_elements,w
  1334     070F  1903               	btfsc	3,2
  1335     0710  2F12               	goto	u1771
  1336     0711  2F13               	goto	u1770
  1337     0712                     u1771:
  1338     0712  2F30               	goto	l89
  1339     0713                     u1770:
  1340     0713                     l1949:
  1341                           
  1342                           ;communication/communication.c: 83:         memcpy(packet, &receive_queue[--receive_queu
      +                          e_elements], sizeof(shared_packet_t));
  1343     0713  0842               	movf	received_queue_get_packet@packet,w
  1344     0714  00BC               	movwf	memcpy@d1
  1345     0715  3001               	movlw	1
  1346     0716  00BD               	movwf	memcpy@d1+1
  1347     0717  300E               	movlw	14
  1348     0718  00B8               	movwf	___bmul@multiplicand
  1349     0719  3001               	movlw	1
  1350     071A  02C8               	subwf	_receive_queue_elements,f
  1351     071B  0848               	movf	_receive_queue_elements,w
  1352     071C  120A  118A  2795  120A  118A  	fcall	___bmul
  1353     0721  3E90               	addlw	(low (_receive_queue| (0+256)))& (0+255)
  1354     0722  1283               	bcf	3,5	;RP0=0, select bank0
  1355     0723  1303               	bcf	3,6	;RP1=0, select bank0
  1356     0724  00BE               	movwf	memcpy@s1
  1357     0725  3001               	movlw	1
  1358     0726  00BF               	movwf	memcpy@s1+1
  1359     0727  300E               	movlw	14
  1360     0728  00C0               	movwf	memcpy@n
  1361     0729  3000               	movlw	0
  1362     072A  00C1               	movwf	memcpy@n+1
  1363     072B  120A  118A  24CE  120A  118A  	fcall	_memcpy
  1364     0730                     l89:
  1365     0730  0008               	return
  1366     0731                     __end_of_received_queue_get_packet:
  1367                           
  1368                           	psect	text3
  1369     0795                     __ptext3:	
  1370 ;; *************** function ___bmul *****************
  1371 ;; Defined at:
  1372 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;  multiplier      1    wreg     unsigned char 
  1375 ;;  multiplicand    1   24[BANK0 ] unsigned char 
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  multiplier      1   27[BANK0 ] unsigned char 
  1378 ;;  product         1   26[BANK0 ] unsigned char 
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  1    wreg      unsigned char 
  1381 ;; Registers used:
  1382 ;;		wreg, status,2, status,0
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1388 ;;      Params:         0       1       0       0       0
  1389 ;;      Locals:         0       2       0       0       0
  1390 ;;      Temps:          0       1       0       0       0
  1391 ;;      Totals:         0       4       0       0       0
  1392 ;;Total ram usage:        4 bytes
  1393 ;; Hardware stack levels used: 1
  1394 ;; Hardware stack levels required when called: 4
  1395 ;; This function calls:
  1396 ;;		Nothing
  1397 ;; This function is called by:
  1398 ;;		_UART_data_received
  1399 ;;		_received_queue_get_packet
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403     0795                     ___bmul:	
  1404                           ;psect for function ___bmul
  1405                           
  1406                           
  1407                           ;incstack = 0
  1408                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1409                           ;___bmul@multiplier stored from wreg
  1410     0795  1283               	bcf	3,5	;RP0=0, select bank0
  1411     0796  1303               	bcf	3,6	;RP1=0, select bank0
  1412     0797  00BB               	movwf	___bmul@multiplier
  1413     0798                     l1475:
  1414     0798  01BA               	clrf	___bmul@product
  1415     0799                     l1477:
  1416     0799  1C3B               	btfss	___bmul@multiplier,0
  1417     079A  2F9C               	goto	u1011
  1418     079B  2F9D               	goto	u1010
  1419     079C                     u1011:
  1420     079C  2FA1               	goto	l1481
  1421     079D                     u1010:
  1422     079D                     l1479:
  1423     079D  0838               	movf	___bmul@multiplicand,w
  1424     079E  00B9               	movwf	??___bmul
  1425     079F  0839               	movf	??___bmul,w
  1426     07A0  07BA               	addwf	___bmul@product,f
  1427     07A1                     l1481:
  1428     07A1  1003               	clrc
  1429     07A2  0DB8               	rlf	___bmul@multiplicand,f
  1430     07A3                     l1483:
  1431     07A3  1003               	clrc
  1432     07A4  0CBB               	rrf	___bmul@multiplier,f
  1433     07A5  083B               	movf	___bmul@multiplier,w
  1434     07A6  1D03               	btfss	3,2
  1435     07A7  2FA9               	goto	u1021
  1436     07A8  2FAA               	goto	u1020
  1437     07A9                     u1021:
  1438     07A9  2F99               	goto	l1477
  1439     07AA                     u1020:
  1440     07AA                     l1485:
  1441     07AA  083A               	movf	___bmul@product,w
  1442     07AB                     l327:
  1443     07AB  0008               	return
  1444     07AC                     __end_of___bmul:
  1445                           
  1446                           	psect	text4
  1447     0731                     __ptext4:	
  1448 ;; *************** function _memset *****************
  1449 ;; Defined at:
  1450 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\memset.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  p1              2   24[BANK0 ] PTR void 
  1453 ;;		 -> main@send_packet(14), UART_data_received@buffer(15), 
  1454 ;;  c               2   26[BANK0 ] int 
  1455 ;;  n               2   28[BANK0 ] unsigned int 
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;  p               2   30[BANK0 ] PTR unsigned char 
  1458 ;;		 -> main@send_packet(14), UART_data_received@buffer(15), 
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  2   24[BANK0 ] PTR void 
  1461 ;; Registers used:
  1462 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1468 ;;      Params:         0       6       0       0       0
  1469 ;;      Locals:         0       2       0       0       0
  1470 ;;      Temps:          0       0       0       0       0
  1471 ;;      Totals:         0       8       0       0       0
  1472 ;;Total ram usage:        8 bytes
  1473 ;; Hardware stack levels used: 1
  1474 ;; Hardware stack levels required when called: 4
  1475 ;; This function calls:
  1476 ;;		Nothing
  1477 ;; This function is called by:
  1478 ;;		_main
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482     0731                     _memset:	
  1483                           ;psect for function _memset
  1484                           
  1485     0731                     l1703:	
  1486                           ;incstack = 0
  1487                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  1488                           
  1489     0731  1283               	bcf	3,5	;RP0=0, select bank0
  1490     0732  1303               	bcf	3,6	;RP1=0, select bank0
  1491     0733  0838               	movf	memset@p1,w
  1492     0734  00BE               	movwf	memset@p
  1493     0735  0839               	movf	memset@p1+1,w
  1494     0736  00BF               	movwf	memset@p+1
  1495     0737  2F45               	goto	l1709
  1496     0738                     l1705:
  1497     0738  083E               	movf	memset@p,w
  1498     0739  0084               	movwf	4
  1499     073A  1783               	bsf	3,7
  1500     073B  1C3F               	btfss	memset@p+1,0
  1501     073C  1383               	bcf	3,7
  1502     073D  083A               	movf	memset@c,w
  1503     073E  0080               	movwf	0
  1504     073F                     l1707:
  1505     073F  3001               	movlw	1
  1506     0740  07BE               	addwf	memset@p,f
  1507     0741  1803               	skipnc
  1508     0742  0ABF               	incf	memset@p+1,f
  1509     0743  3000               	movlw	0
  1510     0744  07BF               	addwf	memset@p+1,f
  1511     0745                     l1709:
  1512     0745  3001               	movlw	1
  1513     0746  02BC               	subwf	memset@n,f
  1514     0747  3000               	movlw	0
  1515     0748  1C03               	skipc
  1516     0749  03BD               	decf	memset@n+1,f
  1517     074A  02BD               	subwf	memset@n+1,f
  1518     074B  0A3C               	incf	memset@n,w
  1519     074C  1D03               	skipz
  1520     074D  2F52               	goto	u1461
  1521     074E  0A3D               	incf	memset@n+1,w
  1522     074F  1D03               	btfss	3,2
  1523     0750  2F52               	goto	u1461
  1524     0751  2F53               	goto	u1460
  1525     0752                     u1461:
  1526     0752  2F38               	goto	l1705
  1527     0753                     u1460:
  1528     0753                     l761:
  1529     0753  0008               	return
  1530     0754                     __end_of_memset:
  1531                           
  1532                           	psect	text5
  1533     07FB                     __ptext5:	
  1534 ;; *************** function _communication_task *****************
  1535 ;; Defined at:
  1536 ;;		line 43 in file "communication/communication.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;		None
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;		None
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		None
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1550 ;;      Params:         0       0       0       0       0
  1551 ;;      Locals:         0       0       0       0       0
  1552 ;;      Temps:          0       0       0       0       0
  1553 ;;      Totals:         0       0       0       0       0
  1554 ;;Total ram usage:        0 bytes
  1555 ;; Hardware stack levels used: 1
  1556 ;; Hardware stack levels required when called: 4
  1557 ;; This function calls:
  1558 ;;		Nothing
  1559 ;; This function is called by:
  1560 ;;		_main
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564     07FB                     _communication_task:	
  1565                           ;psect for function _communication_task
  1566                           
  1567     07FB                     l70:	
  1568                           ;incstack = 0
  1569                           ; Regs used in _communication_task: []
  1570                           
  1571     07FB  0008               	return
  1572     07FC                     __end_of_communication_task:
  1573                           
  1574                           	psect	text6
  1575     0424                     __ptext6:	
  1576 ;; *************** function _communication_init *****************
  1577 ;; Defined at:
  1578 ;;		line 32 in file "communication/communication.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;  baudrate        4   33[BANK0 ] long 
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;		None
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      void 
  1585 ;; Registers used:
  1586 ;;		wreg, status,2, status,0, pclath, cstack
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1592 ;;      Params:         0       4       0       0       0
  1593 ;;      Locals:         0       0       0       0       0
  1594 ;;      Temps:          0       0       4       0       0
  1595 ;;      Totals:         0       4       4       0       0
  1596 ;;Total ram usage:        8 bytes
  1597 ;; Hardware stack levels used: 1
  1598 ;; Hardware stack levels required when called: 5
  1599 ;; This function calls:
  1600 ;;		___aldiv
  1601 ;; This function is called by:
  1602 ;;		_main
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606     0424                     _communication_init:	
  1607                           ;psect for function _communication_init
  1608                           
  1609     0424                     l1935:	
  1610                           ;incstack = 0
  1611                           ; Regs used in _communication_init: [wreg+status,2+status,0+pclath+cstack]
  1612                           
  1613                           
  1614                           ;communication/communication.c: 32: void communication_init(long int baudrate);communica
      +                          tion/communication.c: 33: {;communication/communication.c: 35:     TXSTA |= 0x24;
  1615     0424  3024               	movlw	36
  1616     0425  1683               	bsf	3,5	;RP0=1, select bank1
  1617     0426  1303               	bcf	3,6	;RP1=0, select bank1
  1618     0427  00A6               	movwf	??_communication_init^(0+128)
  1619     0428  0826               	movf	??_communication_init^(0+128),w
  1620     0429  0498               	iorwf	24,f	;volatile
  1621     042A                     l1937:
  1622                           
  1623                           ;communication/communication.c: 36:     RCSTA = 0x90;
  1624     042A  3090               	movlw	144
  1625     042B  1283               	bcf	3,5	;RP0=0, select bank0
  1626     042C  1303               	bcf	3,6	;RP1=0, select bank0
  1627     042D  0098               	movwf	24	;volatile
  1628     042E                     l1939:
  1629                           
  1630                           ;communication/communication.c: 37:     SPBRG = (char) (20000000 / (long) (64UL * baudra
      +                          te)) - 1;
  1631     042E  0841               	movf	communication_init@baudrate,w
  1632     042F  1683               	bsf	3,5	;RP0=1, select bank1
  1633     0430  1303               	bcf	3,6	;RP1=0, select bank1
  1634     0431  00A6               	movwf	??_communication_init^(0+128)
  1635     0432  1283               	bcf	3,5	;RP0=0, select bank0
  1636     0433  1303               	bcf	3,6	;RP1=0, select bank0
  1637     0434  0842               	movf	communication_init@baudrate+1,w
  1638     0435  1683               	bsf	3,5	;RP0=1, select bank1
  1639     0436  1303               	bcf	3,6	;RP1=0, select bank1
  1640     0437  00A7               	movwf	(??_communication_init^(0+128)+1)
  1641     0438  1283               	bcf	3,5	;RP0=0, select bank0
  1642     0439  1303               	bcf	3,6	;RP1=0, select bank0
  1643     043A  0843               	movf	communication_init@baudrate+2,w
  1644     043B  1683               	bsf	3,5	;RP0=1, select bank1
  1645     043C  1303               	bcf	3,6	;RP1=0, select bank1
  1646     043D  00A8               	movwf	(??_communication_init^(0+128)+2)
  1647     043E  1283               	bcf	3,5	;RP0=0, select bank0
  1648     043F  1303               	bcf	3,6	;RP1=0, select bank0
  1649     0440  0844               	movf	communication_init@baudrate+3,w
  1650     0441  1683               	bsf	3,5	;RP0=1, select bank1
  1651     0442  1303               	bcf	3,6	;RP1=0, select bank1
  1652     0443  00A9               	movwf	(??_communication_init^(0+128)+3)
  1653     0444  3006               	movlw	6
  1654     0445                     u1765:
  1655     0445  1003               	clrc
  1656     0446  0DA6               	rlf	??_communication_init^(0+128),f
  1657     0447  0DA7               	rlf	(??_communication_init^(0+128)+1),f
  1658     0448  0DA8               	rlf	(??_communication_init^(0+128)+2),f
  1659     0449  0DA9               	rlf	(??_communication_init^(0+128)+3),f
  1660     044A                     u1760:
  1661     044A  3EFF               	addlw	-1
  1662     044B  1D03               	skipz
  1663     044C  2C45               	goto	u1765
  1664     044D  0829               	movf	(??_communication_init+3)^(0+128),w
  1665     044E  1283               	bcf	3,5	;RP0=0, select bank0
  1666     044F  1303               	bcf	3,6	;RP1=0, select bank0
  1667     0450  00BB               	movwf	___aldiv@divisor+3
  1668     0451  1683               	bsf	3,5	;RP0=1, select bank1
  1669     0452  1303               	bcf	3,6	;RP1=0, select bank1
  1670     0453  0828               	movf	(??_communication_init+2)^(0+128),w
  1671     0454  1283               	bcf	3,5	;RP0=0, select bank0
  1672     0455  1303               	bcf	3,6	;RP1=0, select bank0
  1673     0456  00BA               	movwf	___aldiv@divisor+2
  1674     0457  1683               	bsf	3,5	;RP0=1, select bank1
  1675     0458  1303               	bcf	3,6	;RP1=0, select bank1
  1676     0459  0827               	movf	(??_communication_init+1)^(0+128),w
  1677     045A  1283               	bcf	3,5	;RP0=0, select bank0
  1678     045B  1303               	bcf	3,6	;RP1=0, select bank0
  1679     045C  00B9               	movwf	___aldiv@divisor+1
  1680     045D  1683               	bsf	3,5	;RP0=1, select bank1
  1681     045E  1303               	bcf	3,6	;RP1=0, select bank1
  1682     045F  0826               	movf	??_communication_init^(0+128),w
  1683     0460  1283               	bcf	3,5	;RP0=0, select bank0
  1684     0461  1303               	bcf	3,6	;RP1=0, select bank0
  1685     0462  00B8               	movwf	___aldiv@divisor
  1686     0463  3001               	movlw	1
  1687     0464  00BF               	movwf	___aldiv@dividend+3
  1688     0465  3031               	movlw	49
  1689     0466  00BE               	movwf	___aldiv@dividend+2
  1690     0467  302D               	movlw	45
  1691     0468  00BD               	movwf	___aldiv@dividend+1
  1692     0469  3000               	movlw	0
  1693     046A  00BC               	movwf	___aldiv@dividend
  1694     046B  120A  118A  2144  120A  118A  	fcall	___aldiv
  1695     0470  1283               	bcf	3,5	;RP0=0, select bank0
  1696     0471  1303               	bcf	3,6	;RP1=0, select bank0
  1697     0472  0838               	movf	?___aldiv,w
  1698     0473  3EFF               	addlw	255
  1699     0474  1683               	bsf	3,5	;RP0=1, select bank1
  1700     0475  1303               	bcf	3,6	;RP1=0, select bank1
  1701     0476  0099               	movwf	25	;volatile
  1702     0477                     l1941:
  1703                           
  1704                           ;communication/communication.c: 38:     INTCON |= 0x80;
  1705     0477  178B               	bsf	11,7	;volatile
  1706     0478                     l1943:
  1707                           
  1708                           ;communication/communication.c: 39:     INTCON |= 0x40;
  1709     0478  170B               	bsf	11,6	;volatile
  1710     0479                     l1945:
  1711                           
  1712                           ;communication/communication.c: 40:     PIE1 |= 0x20;
  1713     0479  168C               	bsf	12,5	;volatile
  1714     047A                     l67:
  1715     047A  0008               	return
  1716     047B                     __end_of_communication_init:
  1717                           
  1718                           	psect	text7
  1719     0144                     __ptext7:	
  1720 ;; *************** function ___aldiv *****************
  1721 ;; Defined at:
  1722 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  divisor         4   24[BANK0 ] long 
  1725 ;;  dividend        4   28[BANK0 ] long 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  quotient        4    2[BANK1 ] long 
  1728 ;;  sign            1    1[BANK1 ] unsigned char 
  1729 ;;  counter         1    0[BANK1 ] unsigned char 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  4   24[BANK0 ] long 
  1732 ;; Registers used:
  1733 ;;		wreg, status,2, status,0
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1739 ;;      Params:         0       8       0       0       0
  1740 ;;      Locals:         0       0       6       0       0
  1741 ;;      Temps:          0       1       0       0       0
  1742 ;;      Totals:         0       9       6       0       0
  1743 ;;Total ram usage:       15 bytes
  1744 ;; Hardware stack levels used: 1
  1745 ;; Hardware stack levels required when called: 4
  1746 ;; This function calls:
  1747 ;;		Nothing
  1748 ;; This function is called by:
  1749 ;;		_communication_init
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753     0144                     ___aldiv:	
  1754                           ;psect for function ___aldiv
  1755                           
  1756     0144                     l1877:	
  1757                           ;incstack = 0
  1758                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1759                           
  1760     0144  1683               	bsf	3,5	;RP0=1, select bank1
  1761     0145  1303               	bcf	3,6	;RP1=0, select bank1
  1762     0146  01A1               	clrf	___aldiv@sign^(0+128)
  1763     0147                     l1879:
  1764     0147  1283               	bcf	3,5	;RP0=0, select bank0
  1765     0148  1303               	bcf	3,6	;RP1=0, select bank0
  1766     0149  1FBB               	btfss	___aldiv@divisor+3,7
  1767     014A  294C               	goto	u1651
  1768     014B  294D               	goto	u1650
  1769     014C                     u1651:
  1770     014C  295C               	goto	l366
  1771     014D                     u1650:
  1772     014D                     l1881:
  1773     014D  09B8               	comf	___aldiv@divisor,f
  1774     014E  09B9               	comf	___aldiv@divisor+1,f
  1775     014F  09BA               	comf	___aldiv@divisor+2,f
  1776     0150  09BB               	comf	___aldiv@divisor+3,f
  1777     0151  0AB8               	incf	___aldiv@divisor,f
  1778     0152  1903               	skipnz
  1779     0153  0AB9               	incf	___aldiv@divisor+1,f
  1780     0154  1903               	skipnz
  1781     0155  0ABA               	incf	___aldiv@divisor+2,f
  1782     0156  1903               	skipnz
  1783     0157  0ABB               	incf	___aldiv@divisor+3,f
  1784     0158  1683               	bsf	3,5	;RP0=1, select bank1
  1785     0159  1303               	bcf	3,6	;RP1=0, select bank1
  1786     015A  01A1               	clrf	___aldiv@sign^(0+128)
  1787     015B  0AA1               	incf	___aldiv@sign^(0+128),f
  1788     015C                     l366:
  1789     015C  1283               	bcf	3,5	;RP0=0, select bank0
  1790     015D  1FBF               	btfss	___aldiv@dividend+3,7
  1791     015E  2960               	goto	u1661
  1792     015F  2961               	goto	u1660
  1793     0160                     u1661:
  1794     0160  2972               	goto	l1887
  1795     0161                     u1660:
  1796     0161                     l1883:
  1797     0161  09BC               	comf	___aldiv@dividend,f
  1798     0162  09BD               	comf	___aldiv@dividend+1,f
  1799     0163  09BE               	comf	___aldiv@dividend+2,f
  1800     0164  09BF               	comf	___aldiv@dividend+3,f
  1801     0165  0ABC               	incf	___aldiv@dividend,f
  1802     0166  1903               	skipnz
  1803     0167  0ABD               	incf	___aldiv@dividend+1,f
  1804     0168  1903               	skipnz
  1805     0169  0ABE               	incf	___aldiv@dividend+2,f
  1806     016A  1903               	skipnz
  1807     016B  0ABF               	incf	___aldiv@dividend+3,f
  1808     016C                     l1885:
  1809     016C  3001               	movlw	1
  1810     016D  00C0               	movwf	??___aldiv
  1811     016E  0840               	movf	??___aldiv,w
  1812     016F  1683               	bsf	3,5	;RP0=1, select bank1
  1813     0170  1303               	bcf	3,6	;RP1=0, select bank1
  1814     0171  06A1               	xorwf	___aldiv@sign^(0+128),f
  1815     0172                     l1887:
  1816     0172  3000               	movlw	0
  1817     0173  1683               	bsf	3,5	;RP0=1, select bank1
  1818     0174  1303               	bcf	3,6	;RP1=0, select bank1
  1819     0175  00A5               	movwf	(___aldiv@quotient+3)^(0+128)
  1820     0176  3000               	movlw	0
  1821     0177  00A4               	movwf	(___aldiv@quotient+2)^(0+128)
  1822     0178  3000               	movlw	0
  1823     0179  00A3               	movwf	(___aldiv@quotient+1)^(0+128)
  1824     017A  3000               	movlw	0
  1825     017B  00A2               	movwf	___aldiv@quotient^(0+128)
  1826     017C                     l1889:
  1827     017C  1283               	bcf	3,5	;RP0=0, select bank0
  1828     017D  1303               	bcf	3,6	;RP1=0, select bank0
  1829     017E  083B               	movf	___aldiv@divisor+3,w
  1830     017F  043A               	iorwf	___aldiv@divisor+2,w
  1831     0180  0439               	iorwf	___aldiv@divisor+1,w
  1832     0181  0438               	iorwf	___aldiv@divisor,w
  1833     0182  1903               	skipnz
  1834     0183  2985               	goto	u1671
  1835     0184  2986               	goto	u1670
  1836     0185                     u1671:
  1837     0185  29E3               	goto	l1909
  1838     0186                     u1670:
  1839     0186                     l1891:
  1840     0186  1683               	bsf	3,5	;RP0=1, select bank1
  1841     0187  1303               	bcf	3,6	;RP1=0, select bank1
  1842     0188  01A0               	clrf	___aldiv@counter^(0+128)
  1843     0189  0AA0               	incf	___aldiv@counter^(0+128),f
  1844     018A  299A               	goto	l1895
  1845     018B                     l1893:
  1846     018B  3001               	movlw	1
  1847     018C  00C0               	movwf	??___aldiv
  1848     018D                     u1685:
  1849     018D  1003               	clrc
  1850     018E  0DB8               	rlf	___aldiv@divisor,f
  1851     018F  0DB9               	rlf	___aldiv@divisor+1,f
  1852     0190  0DBA               	rlf	___aldiv@divisor+2,f
  1853     0191  0DBB               	rlf	___aldiv@divisor+3,f
  1854     0192  0BC0               	decfsz	??___aldiv,f
  1855     0193  298D               	goto	u1685
  1856     0194  3001               	movlw	1
  1857     0195  00C0               	movwf	??___aldiv
  1858     0196  0840               	movf	??___aldiv,w
  1859     0197  1683               	bsf	3,5	;RP0=1, select bank1
  1860     0198  1303               	bcf	3,6	;RP1=0, select bank1
  1861     0199  07A0               	addwf	___aldiv@counter^(0+128),f
  1862     019A                     l1895:
  1863     019A  1283               	bcf	3,5	;RP0=0, select bank0
  1864     019B  1303               	bcf	3,6	;RP1=0, select bank0
  1865     019C  1FBB               	btfss	___aldiv@divisor+3,7
  1866     019D  299F               	goto	u1691
  1867     019E  29A0               	goto	u1690
  1868     019F                     u1691:
  1869     019F  298B               	goto	l1893
  1870     01A0                     u1690:
  1871     01A0                     l1897:
  1872     01A0  3001               	movlw	1
  1873     01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1874     01A2  00C0               	movwf	??___aldiv
  1875     01A3                     u1705:
  1876     01A3  1003               	clrc
  1877     01A4  1683               	bsf	3,5	;RP0=1, select bank1
  1878     01A5  1303               	bcf	3,6	;RP1=0, select bank1
  1879     01A6  0DA2               	rlf	___aldiv@quotient^(0+128),f
  1880     01A7  0DA3               	rlf	(___aldiv@quotient+1)^(0+128),f
  1881     01A8  0DA4               	rlf	(___aldiv@quotient+2)^(0+128),f
  1882     01A9  0DA5               	rlf	(___aldiv@quotient+3)^(0+128),f
  1883     01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1884     01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1885     01AC  0BC0               	decfsz	??___aldiv,f
  1886     01AD  29A3               	goto	u1705
  1887     01AE                     l1899:
  1888     01AE  083B               	movf	___aldiv@divisor+3,w
  1889     01AF  023F               	subwf	___aldiv@dividend+3,w
  1890     01B0  1D03               	skipz
  1891     01B1  29BC               	goto	u1715
  1892     01B2  083A               	movf	___aldiv@divisor+2,w
  1893     01B3  023E               	subwf	___aldiv@dividend+2,w
  1894     01B4  1D03               	skipz
  1895     01B5  29BC               	goto	u1715
  1896     01B6  0839               	movf	___aldiv@divisor+1,w
  1897     01B7  023D               	subwf	___aldiv@dividend+1,w
  1898     01B8  1D03               	skipz
  1899     01B9  29BC               	goto	u1715
  1900     01BA  0838               	movf	___aldiv@divisor,w
  1901     01BB  023C               	subwf	___aldiv@dividend,w
  1902     01BC                     u1715:
  1903     01BC  1C03               	skipc
  1904     01BD  29BF               	goto	u1711
  1905     01BE  29C0               	goto	u1710
  1906     01BF                     u1711:
  1907     01BF  29D1               	goto	l1905
  1908     01C0                     u1710:
  1909     01C0                     l1901:
  1910     01C0  0838               	movf	___aldiv@divisor,w
  1911     01C1  02BC               	subwf	___aldiv@dividend,f
  1912     01C2  0839               	movf	___aldiv@divisor+1,w
  1913     01C3  1C03               	skipc
  1914     01C4  0F39               	incfsz	___aldiv@divisor+1,w
  1915     01C5  02BD               	subwf	___aldiv@dividend+1,f
  1916     01C6  083A               	movf	___aldiv@divisor+2,w
  1917     01C7  1C03               	skipc
  1918     01C8  0F3A               	incfsz	___aldiv@divisor+2,w
  1919     01C9  02BE               	subwf	___aldiv@dividend+2,f
  1920     01CA  083B               	movf	___aldiv@divisor+3,w
  1921     01CB  1C03               	skipc
  1922     01CC  0F3B               	incfsz	___aldiv@divisor+3,w
  1923     01CD  02BF               	subwf	___aldiv@dividend+3,f
  1924     01CE                     l1903:
  1925     01CE  1683               	bsf	3,5	;RP0=1, select bank1
  1926     01CF  1303               	bcf	3,6	;RP1=0, select bank1
  1927     01D0  1422               	bsf	___aldiv@quotient^(0+128),0
  1928     01D1                     l1905:
  1929     01D1  3001               	movlw	1
  1930     01D2                     u1725:
  1931     01D2  1003               	clrc
  1932     01D3  1283               	bcf	3,5	;RP0=0, select bank0
  1933     01D4  0CBB               	rrf	___aldiv@divisor+3,f
  1934     01D5  0CBA               	rrf	___aldiv@divisor+2,f
  1935     01D6  0CB9               	rrf	___aldiv@divisor+1,f
  1936     01D7  0CB8               	rrf	___aldiv@divisor,f
  1937     01D8  3EFF               	addlw	-1
  1938     01D9  1D03               	skipz
  1939     01DA  29D2               	goto	u1725
  1940     01DB                     l1907:
  1941     01DB  3001               	movlw	1
  1942     01DC  1683               	bsf	3,5	;RP0=1, select bank1
  1943     01DD  1303               	bcf	3,6	;RP1=0, select bank1
  1944     01DE  02A0               	subwf	___aldiv@counter^(0+128),f
  1945     01DF  1D03               	btfss	3,2
  1946     01E0  29E2               	goto	u1731
  1947     01E1  29E3               	goto	u1730
  1948     01E2                     u1731:
  1949     01E2  29A0               	goto	l1897
  1950     01E3                     u1730:
  1951     01E3                     l1909:
  1952     01E3  1683               	bsf	3,5	;RP0=1, select bank1
  1953     01E4  1303               	bcf	3,6	;RP1=0, select bank1
  1954     01E5  0821               	movf	___aldiv@sign^(0+128),w
  1955     01E6  1903               	btfsc	3,2
  1956     01E7  29E9               	goto	u1741
  1957     01E8  29EA               	goto	u1740
  1958     01E9                     u1741:
  1959     01E9  29F5               	goto	l1913
  1960     01EA                     u1740:
  1961     01EA                     l1911:
  1962     01EA  09A2               	comf	___aldiv@quotient^(0+128),f
  1963     01EB  09A3               	comf	(___aldiv@quotient+1)^(0+128),f
  1964     01EC  09A4               	comf	(___aldiv@quotient+2)^(0+128),f
  1965     01ED  09A5               	comf	(___aldiv@quotient+3)^(0+128),f
  1966     01EE  0AA2               	incf	___aldiv@quotient^(0+128),f
  1967     01EF  1903               	skipnz
  1968     01F0  0AA3               	incf	(___aldiv@quotient+1)^(0+128),f
  1969     01F1  1903               	skipnz
  1970     01F2  0AA4               	incf	(___aldiv@quotient+2)^(0+128),f
  1971     01F3  1903               	skipnz
  1972     01F4  0AA5               	incf	(___aldiv@quotient+3)^(0+128),f
  1973     01F5                     l1913:
  1974     01F5  0825               	movf	(___aldiv@quotient+3)^(0+128),w
  1975     01F6  1283               	bcf	3,5	;RP0=0, select bank0
  1976     01F7  1303               	bcf	3,6	;RP1=0, select bank0
  1977     01F8  00BB               	movwf	?___aldiv+3
  1978     01F9  1683               	bsf	3,5	;RP0=1, select bank1
  1979     01FA  1303               	bcf	3,6	;RP1=0, select bank1
  1980     01FB  0824               	movf	(___aldiv@quotient+2)^(0+128),w
  1981     01FC  1283               	bcf	3,5	;RP0=0, select bank0
  1982     01FD  1303               	bcf	3,6	;RP1=0, select bank0
  1983     01FE  00BA               	movwf	?___aldiv+2
  1984     01FF  1683               	bsf	3,5	;RP0=1, select bank1
  1985     0200  1303               	bcf	3,6	;RP1=0, select bank1
  1986     0201  0823               	movf	(___aldiv@quotient+1)^(0+128),w
  1987     0202  1283               	bcf	3,5	;RP0=0, select bank0
  1988     0203  1303               	bcf	3,6	;RP1=0, select bank0
  1989     0204  00B9               	movwf	?___aldiv+1
  1990     0205  1683               	bsf	3,5	;RP0=1, select bank1
  1991     0206  1303               	bcf	3,6	;RP1=0, select bank1
  1992     0207  0822               	movf	___aldiv@quotient^(0+128),w
  1993     0208  1283               	bcf	3,5	;RP0=0, select bank0
  1994     0209  1303               	bcf	3,6	;RP1=0, select bank0
  1995     020A  00B8               	movwf	?___aldiv
  1996     020B                     l376:
  1997     020B  0008               	return
  1998     020C                     __end_of___aldiv:
  1999                           
  2000                           	psect	text8
  2001     047B                     __ptext8:	
  2002 ;; *************** function _UART_send_packet *****************
  2003 ;; Defined at:
  2004 ;;		line 17 in file "communication/communication.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;  packet_to_se    1    wreg     PTR struct .
  2007 ;;		 -> main@send_packet(14), 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  packet_to_se    1   20[BANK1 ] PTR struct .
  2010 ;;		 -> main@send_packet(14), 
  2011 ;;  i               2   21[BANK1 ] int 
  2012 ;;  buffer         15    5[BANK1 ] unsigned char [15]
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      void 
  2015 ;; Registers used:
  2016 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2022 ;;      Params:         0       0       0       0       0
  2023 ;;      Locals:         0       0      18       0       0
  2024 ;;      Temps:          0       0       0       0       0
  2025 ;;      Totals:         0       0      18       0       0
  2026 ;;Total ram usage:       18 bytes
  2027 ;; Hardware stack levels used: 1
  2028 ;; Hardware stack levels required when called: 5
  2029 ;; This function calls:
  2030 ;;		_UART_TxByte
  2031 ;;		_memcpy
  2032 ;;		_strncpy
  2033 ;; This function is called by:
  2034 ;;		_main
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038     047B                     _UART_send_packet:	
  2039                           ;psect for function _UART_send_packet
  2040                           
  2041                           
  2042                           ;incstack = 0
  2043                           ; Regs used in _UART_send_packet: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2044                           ;UART_send_packet@packet_to_send stored from wreg
  2045     047B  1683               	bsf	3,5	;RP0=1, select bank1
  2046     047C  1303               	bcf	3,6	;RP1=0, select bank1
  2047     047D  00B4               	movwf	UART_send_packet@packet_to_send^(0+128)
  2048     047E                     l1917:
  2049                           
  2050                           ;communication/communication.c: 17: void UART_send_packet(shared_packet_t* packet_to_sen
      +                          d);communication/communication.c: 18: {;communication/communication.c: 19:     packet_to
      +                          _send->length = sizeof(shared_packet_t);
  2051     047E  0834               	movf	UART_send_packet@packet_to_send^(0+128),w
  2052     047F  0084               	movwf	4
  2053     0480  300E               	movlw	14
  2054     0481  1783               	bsf	3,7	;select IRP bank2
  2055     0482  0080               	movwf	0
  2056     0483  0A84               	incf	4,f
  2057     0484  3000               	movlw	0
  2058     0485  0080               	movwf	0
  2059     0486                     l1919:
  2060                           
  2061                           ;communication/communication.c: 20:     strncpy(packet_to_send->source_device, "123A", 5
      +                          );
  2062     0486  3013               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2063     0487  1283               	bcf	3,5	;RP0=0, select bank0
  2064     0488  1303               	bcf	3,6	;RP1=0, select bank0
  2065     0489  00B8               	movwf	strncpy@from
  2066     048A  3005               	movlw	5
  2067     048B  00B9               	movwf	strncpy@size
  2068     048C  3000               	movlw	0
  2069     048D  00BA               	movwf	strncpy@size+1
  2070     048E  1683               	bsf	3,5	;RP0=1, select bank1
  2071     048F  1303               	bcf	3,6	;RP1=0, select bank1
  2072     0490  0834               	movf	UART_send_packet@packet_to_send^(0+128),w
  2073     0491  3E02               	addlw	2
  2074     0492  120A  118A  25A0  120A  118A  	fcall	_strncpy
  2075     0497                     l1921:
  2076                           
  2077                           ;communication/communication.c: 22:     unsigned char buffer[sizeof(shared_packet_t)];;c
      +                          ommunication/communication.c: 24:     memcpy(buffer, packet_to_send, sizeof(shared_packe
      +                          t_t));
  2078     0497  30A5               	movlw	(low (UART_send_packet@buffer| 0))& (0+255)
  2079     0498  1283               	bcf	3,5	;RP0=0, select bank0
  2080     0499  1303               	bcf	3,6	;RP1=0, select bank0
  2081     049A  00BC               	movwf	memcpy@d1
  2082     049B  3000               	movlw	0
  2083     049C  00BD               	movwf	memcpy@d1+1
  2084     049D  1683               	bsf	3,5	;RP0=1, select bank1
  2085     049E  1303               	bcf	3,6	;RP1=0, select bank1
  2086     049F  0834               	movf	UART_send_packet@packet_to_send^(0+128),w
  2087     04A0  1283               	bcf	3,5	;RP0=0, select bank0
  2088     04A1  1303               	bcf	3,6	;RP1=0, select bank0
  2089     04A2  00BE               	movwf	memcpy@s1
  2090     04A3  3001               	movlw	1
  2091     04A4  00BF               	movwf	memcpy@s1+1
  2092     04A5  300E               	movlw	14
  2093     04A6  00C0               	movwf	memcpy@n
  2094     04A7  3000               	movlw	0
  2095     04A8  00C1               	movwf	memcpy@n+1
  2096     04A9  120A  118A  24CE  120A  118A  	fcall	_memcpy
  2097     04AE                     l1923:
  2098                           
  2099                           ;communication/communication.c: 25:     for (int i = 0; i < sizeof(shared_packet_t); i++
      +                          ) {
  2100     04AE  1683               	bsf	3,5	;RP0=1, select bank1
  2101     04AF  1303               	bcf	3,6	;RP1=0, select bank1
  2102     04B0  01B5               	clrf	UART_send_packet@i^(0+128)
  2103     04B1  01B6               	clrf	(UART_send_packet@i+1)^(0+128)
  2104     04B2                     l1929:
  2105                           
  2106                           ;communication/communication.c: 27:         UART_TxByte(buffer[i]);
  2107     04B2  0835               	movf	UART_send_packet@i^(0+128),w
  2108     04B3  3EA5               	addlw	(low (UART_send_packet@buffer| 0))& (0+255)
  2109     04B4  0084               	movwf	4
  2110     04B5  1383               	bcf	3,7	;select IRP bank1
  2111     04B6  0800               	movf	0,w
  2112     04B7  120A  118A  27C3  120A  118A  	fcall	_UART_TxByte
  2113     04BC                     l1931:
  2114                           
  2115                           ;communication/communication.c: 28:     }
  2116     04BC  3001               	movlw	1
  2117     04BD  1683               	bsf	3,5	;RP0=1, select bank1
  2118     04BE  1303               	bcf	3,6	;RP1=0, select bank1
  2119     04BF  07B5               	addwf	UART_send_packet@i^(0+128),f
  2120     04C0  1803               	skipnc
  2121     04C1  0AB6               	incf	(UART_send_packet@i+1)^(0+128),f
  2122     04C2  3000               	movlw	0
  2123     04C3  07B6               	addwf	(UART_send_packet@i+1)^(0+128),f
  2124     04C4                     l1933:
  2125     04C4  3000               	movlw	0
  2126     04C5  0236               	subwf	(UART_send_packet@i+1)^(0+128),w
  2127     04C6  300E               	movlw	14
  2128     04C7  1903               	skipnz
  2129     04C8  0235               	subwf	UART_send_packet@i^(0+128),w
  2130     04C9  1C03               	skipc
  2131     04CA  2CCC               	goto	u1751
  2132     04CB  2CCD               	goto	u1750
  2133     04CC                     u1751:
  2134     04CC  2CB2               	goto	l1929
  2135     04CD                     u1750:
  2136     04CD                     l64:
  2137     04CD  0008               	return
  2138     04CE                     __end_of_UART_send_packet:
  2139                           
  2140                           	psect	text9
  2141     05A0                     __ptext9:	
  2142 ;; *************** function _strncpy *****************
  2143 ;; Defined at:
  2144 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strncpy.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;  to              1    wreg     PTR unsigned char 
  2147 ;;		 -> main@send_packet(14), 
  2148 ;;  from            1   24[BANK0 ] PTR const unsigned char 
  2149 ;;		 -> STR_5(6), STR_1(5), 
  2150 ;;  size            2   25[BANK0 ] unsigned int 
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;  to              1   28[BANK0 ] PTR unsigned char 
  2153 ;;		 -> main@send_packet(14), 
  2154 ;;  cp              1   29[BANK0 ] PTR unsigned char 
  2155 ;;		 -> main@send_packet(14), 
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      PTR unsigned char 
  2158 ;; Registers used:
  2159 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2165 ;;      Params:         0       3       0       0       0
  2166 ;;      Locals:         0       2       0       0       0
  2167 ;;      Temps:          0       1       0       0       0
  2168 ;;      Totals:         0       6       0       0       0
  2169 ;;Total ram usage:        6 bytes
  2170 ;; Hardware stack levels used: 1
  2171 ;; Hardware stack levels required when called: 4
  2172 ;; This function calls:
  2173 ;;		Nothing
  2174 ;; This function is called by:
  2175 ;;		_UART_send_packet
  2176 ;;		_main
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180     05A0                     _strncpy:	
  2181                           ;psect for function _strncpy
  2182                           
  2183                           
  2184                           ;incstack = 0
  2185                           ; Regs used in _strncpy: [wreg-fsr0h+status,2+status,0+pclath]
  2186                           ;strncpy@to stored from wreg
  2187     05A0  1283               	bcf	3,5	;RP0=0, select bank0
  2188     05A1  1303               	bcf	3,6	;RP1=0, select bank0
  2189     05A2  00BC               	movwf	strncpy@to
  2190     05A3                     l1405:
  2191     05A3  083C               	movf	strncpy@to,w
  2192     05A4  00BD               	movwf	strncpy@cp
  2193     05A5  2DC4               	goto	l1413
  2194     05A6                     l1407:
  2195     05A6  3001               	movlw	1
  2196     05A7  02B9               	subwf	strncpy@size,f
  2197     05A8  3000               	movlw	0
  2198     05A9  1C03               	skipc
  2199     05AA  03BA               	decf	strncpy@size+1,f
  2200     05AB  02BA               	subwf	strncpy@size+1,f
  2201     05AC                     l1409:
  2202     05AC  3001               	movlw	1
  2203     05AD  07B8               	addwf	strncpy@from,f
  2204     05AE  30FF               	movlw	-1
  2205     05AF  0738               	addwf	strncpy@from,w
  2206     05B0  0084               	movwf	4
  2207     05B1  120A  118A  26C1  120A  118A  	fcall	stringdir
  2208     05B6  00BB               	movwf	??_strncpy
  2209     05B7  083D               	movf	strncpy@cp,w
  2210     05B8  0084               	movwf	4
  2211     05B9  3001               	movlw	1
  2212     05BA  07BD               	addwf	strncpy@cp,f
  2213     05BB  083B               	movf	??_strncpy,w
  2214     05BC  1783               	bsf	3,7	;select IRP bank2
  2215     05BD  0080               	movwf	0
  2216     05BE  0800               	movf	0,w
  2217     05BF  1D03               	btfss	3,2
  2218     05C0  2DC2               	goto	u911
  2219     05C1  2DC3               	goto	u910
  2220     05C2                     u911:
  2221     05C2  2DC4               	goto	l1413
  2222     05C3                     u910:
  2223     05C3  2DD3               	goto	l1419
  2224     05C4                     l1413:
  2225     05C4  0839               	movf	strncpy@size,w
  2226     05C5  043A               	iorwf	strncpy@size+1,w
  2227     05C6  1D03               	btfss	3,2
  2228     05C7  2DC9               	goto	u921
  2229     05C8  2DCA               	goto	u920
  2230     05C9                     u921:
  2231     05C9  2DA6               	goto	l1407
  2232     05CA                     u920:
  2233     05CA  2DD3               	goto	l1419
  2234     05CB                     l1415:
  2235     05CB  083D               	movf	strncpy@cp,w
  2236     05CC  0084               	movwf	4
  2237     05CD  1783               	bsf	3,7	;select IRP bank2
  2238     05CE  0180               	clrf	0
  2239     05CF                     l1417:
  2240     05CF  3001               	movlw	1
  2241     05D0  00BB               	movwf	??_strncpy
  2242     05D1  083B               	movf	??_strncpy,w
  2243     05D2  07BD               	addwf	strncpy@cp,f
  2244     05D3                     l1419:
  2245     05D3  3001               	movlw	1
  2246     05D4  02B9               	subwf	strncpy@size,f
  2247     05D5  3000               	movlw	0
  2248     05D6  1C03               	skipc
  2249     05D7  03BA               	decf	strncpy@size+1,f
  2250     05D8  02BA               	subwf	strncpy@size+1,f
  2251     05D9  0A39               	incf	strncpy@size,w
  2252     05DA  1D03               	skipz
  2253     05DB  2DE0               	goto	u931
  2254     05DC  0A3A               	incf	strncpy@size+1,w
  2255     05DD  1D03               	btfss	3,2
  2256     05DE  2DE0               	goto	u931
  2257     05DF  2DE1               	goto	u930
  2258     05E0                     u931:
  2259     05E0  2DCB               	goto	l1415
  2260     05E1                     u930:
  2261     05E1                     l779:
  2262     05E1  0008               	return
  2263     05E2                     __end_of_strncpy:
  2264                           
  2265                           	psect	text10
  2266     04CE                     __ptext10:	
  2267 ;; *************** function _memcpy *****************
  2268 ;; Defined at:
  2269 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\memcpy.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;  d1              2   28[BANK0 ] PTR void 
  2272 ;;		 -> main@packet(14), receive_queue(42), UART_data_received@received_packet(14), UART_send_packet@buffer(15), 
  2273 ;;  s1              2   30[BANK0 ] PTR const void 
  2274 ;;		 -> main@send_packet(14), receive_queue(42), UART_data_received@buffer(15), 
  2275 ;;  n               2   32[BANK0 ] unsigned int 
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;  s               2    3[BANK1 ] PTR const unsigned char 
  2278 ;;		 -> main@send_packet(14), receive_queue(42), UART_data_received@buffer(15), 
  2279 ;;  d               2    1[BANK1 ] PTR unsigned char 
  2280 ;;		 -> main@packet(14), receive_queue(42), UART_data_received@received_packet(14), UART_send_packet@buffer(15), 
  2281 ;;  tmp             1    0[BANK1 ] unsigned char 
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  2   28[BANK0 ] PTR void 
  2284 ;; Registers used:
  2285 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2291 ;;      Params:         0       6       0       0       0
  2292 ;;      Locals:         0       0       5       0       0
  2293 ;;      Temps:          0       0       0       0       0
  2294 ;;      Totals:         0       6       5       0       0
  2295 ;;Total ram usage:       11 bytes
  2296 ;; Hardware stack levels used: 1
  2297 ;; Hardware stack levels required when called: 4
  2298 ;; This function calls:
  2299 ;;		Nothing
  2300 ;; This function is called by:
  2301 ;;		_UART_send_packet
  2302 ;;		_received_queue_get_packet
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306     04CE                     _memcpy:	
  2307                           ;psect for function _memcpy
  2308                           
  2309     04CE                     l1867:	
  2310                           ;incstack = 0
  2311                           ; Regs used in _memcpy: [wreg-fsr0h+status,2+status,0]
  2312                           
  2313     04CE  1283               	bcf	3,5	;RP0=0, select bank0
  2314     04CF  1303               	bcf	3,6	;RP1=0, select bank0
  2315     04D0  083E               	movf	memcpy@s1,w
  2316     04D1  1683               	bsf	3,5	;RP0=1, select bank1
  2317     04D2  1303               	bcf	3,6	;RP1=0, select bank1
  2318     04D3  00A3               	movwf	memcpy@s^(0+128)
  2319     04D4  1283               	bcf	3,5	;RP0=0, select bank0
  2320     04D5  1303               	bcf	3,6	;RP1=0, select bank0
  2321     04D6  083F               	movf	memcpy@s1+1,w
  2322     04D7  1683               	bsf	3,5	;RP0=1, select bank1
  2323     04D8  1303               	bcf	3,6	;RP1=0, select bank1
  2324     04D9  00A4               	movwf	(memcpy@s+1)^(0+128)
  2325     04DA  1283               	bcf	3,5	;RP0=0, select bank0
  2326     04DB  1303               	bcf	3,6	;RP1=0, select bank0
  2327     04DC  083C               	movf	memcpy@d1,w
  2328     04DD  1683               	bsf	3,5	;RP0=1, select bank1
  2329     04DE  1303               	bcf	3,6	;RP1=0, select bank1
  2330     04DF  00A1               	movwf	memcpy@d^(0+128)
  2331     04E0  1283               	bcf	3,5	;RP0=0, select bank0
  2332     04E1  1303               	bcf	3,6	;RP1=0, select bank0
  2333     04E2  083D               	movf	memcpy@d1+1,w
  2334     04E3  1683               	bsf	3,5	;RP0=1, select bank1
  2335     04E4  1303               	bcf	3,6	;RP1=0, select bank1
  2336     04E5  00A2               	movwf	(memcpy@d+1)^(0+128)
  2337     04E6  2D03               	goto	l1875
  2338     04E7                     l1869:
  2339     04E7  1683               	bsf	3,5	;RP0=1, select bank1
  2340     04E8  1303               	bcf	3,6	;RP1=0, select bank1
  2341     04E9  0823               	movf	memcpy@s^(0+128),w
  2342     04EA  0084               	movwf	4
  2343     04EB  1783               	bsf	3,7
  2344     04EC  1C24               	btfss	(memcpy@s+1)^(0+128),0
  2345     04ED  1383               	bcf	3,7
  2346     04EE  0800               	movf	0,w
  2347     04EF  00A0               	movwf	memcpy@tmp^(0+128)
  2348     04F0                     l1871:
  2349     04F0  3001               	movlw	1
  2350     04F1  07A3               	addwf	memcpy@s^(0+128),f
  2351     04F2  1803               	skipnc
  2352     04F3  0AA4               	incf	(memcpy@s+1)^(0+128),f
  2353     04F4  3000               	movlw	0
  2354     04F5  07A4               	addwf	(memcpy@s+1)^(0+128),f
  2355     04F6                     l1873:
  2356     04F6  0821               	movf	memcpy@d^(0+128),w
  2357     04F7  0084               	movwf	4
  2358     04F8  1783               	bsf	3,7
  2359     04F9  1C22               	btfss	(memcpy@d+1)^(0+128),0
  2360     04FA  1383               	bcf	3,7
  2361     04FB  0820               	movf	memcpy@tmp^(0+128),w
  2362     04FC  0080               	movwf	0
  2363     04FD  3001               	movlw	1
  2364     04FE  07A1               	addwf	memcpy@d^(0+128),f
  2365     04FF  1803               	skipnc
  2366     0500  0AA2               	incf	(memcpy@d+1)^(0+128),f
  2367     0501  3000               	movlw	0
  2368     0502  07A2               	addwf	(memcpy@d+1)^(0+128),f
  2369     0503                     l1875:
  2370     0503  3001               	movlw	1
  2371     0504  1283               	bcf	3,5	;RP0=0, select bank0
  2372     0505  1303               	bcf	3,6	;RP1=0, select bank0
  2373     0506  02C0               	subwf	memcpy@n,f
  2374     0507  3000               	movlw	0
  2375     0508  1C03               	skipc
  2376     0509  03C1               	decf	memcpy@n+1,f
  2377     050A  02C1               	subwf	memcpy@n+1,f
  2378     050B  0A40               	incf	memcpy@n,w
  2379     050C  1D03               	skipz
  2380     050D  2D12               	goto	u1641
  2381     050E  0A41               	incf	memcpy@n+1,w
  2382     050F  1D03               	btfss	3,2
  2383     0510  2D12               	goto	u1641
  2384     0511  2D13               	goto	u1640
  2385     0512                     u1641:
  2386     0512  2CE7               	goto	l1869
  2387     0513                     u1640:
  2388     0513                     l755:
  2389     0513  0008               	return
  2390     0514                     __end_of_memcpy:
  2391                           
  2392                           	psect	text11
  2393     07C3                     __ptext11:	
  2394 ;; *************** function _UART_TxByte *****************
  2395 ;; Defined at:
  2396 ;;		line 87 in file "communication/communication.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;  byte            1    wreg     unsigned char 
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;  byte            1   25[BANK0 ] unsigned char 
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      void 
  2403 ;; Registers used:
  2404 ;;		wreg, status,2, status,0
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2410 ;;      Params:         0       0       0       0       0
  2411 ;;      Locals:         0       1       0       0       0
  2412 ;;      Temps:          0       1       0       0       0
  2413 ;;      Totals:         0       2       0       0       0
  2414 ;;Total ram usage:        2 bytes
  2415 ;; Hardware stack levels used: 1
  2416 ;; Hardware stack levels required when called: 4
  2417 ;; This function calls:
  2418 ;;		Nothing
  2419 ;; This function is called by:
  2420 ;;		_UART_send_packet
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424     07C3                     _UART_TxByte:	
  2425                           ;psect for function _UART_TxByte
  2426                           
  2427                           
  2428                           ;incstack = 0
  2429                           ; Regs used in _UART_TxByte: [wreg+status,2+status,0]
  2430                           ;UART_TxByte@byte stored from wreg
  2431     07C3  1283               	bcf	3,5	;RP0=0, select bank0
  2432     07C4  1303               	bcf	3,6	;RP1=0, select bank0
  2433     07C5  00B9               	movwf	UART_TxByte@byte
  2434     07C6                     l1431:
  2435                           
  2436                           ;communication/communication.c: 88:     TRISC &= ~0x40;
  2437     07C6  30BF               	movlw	191
  2438     07C7  00B8               	movwf	??_UART_TxByte
  2439     07C8  0838               	movf	??_UART_TxByte,w
  2440     07C9  1683               	bsf	3,5	;RP0=1, select bank1
  2441     07CA  1303               	bcf	3,6	;RP1=0, select bank1
  2442     07CB  0587               	andwf	7,f	;volatile
  2443     07CC                     l1433:
  2444                           
  2445                           ;communication/communication.c: 89:     TRISC |= 0x80;
  2446     07CC  1787               	bsf	7,7	;volatile
  2447     07CD                     l92:	
  2448                           ;communication/communication.c: 90:     while (!(PIR1 & 0x10));
  2449                           
  2450     07CD  1283               	bcf	3,5	;RP0=0, select bank0
  2451     07CE  1E0C               	btfss	12,4	;volatile
  2452     07CF  2FD1               	goto	u951
  2453     07D0  2FD2               	goto	u950
  2454     07D1                     u951:
  2455     07D1  2FCD               	goto	l92
  2456     07D2                     u950:
  2457     07D2                     l1435:
  2458                           
  2459                           ;communication/communication.c: 91:     PIR1 &= ~0x10;
  2460     07D2  30EF               	movlw	239
  2461     07D3  00B8               	movwf	??_UART_TxByte
  2462     07D4  0838               	movf	??_UART_TxByte,w
  2463     07D5  058C               	andwf	12,f	;volatile
  2464     07D6                     l1437:
  2465                           
  2466                           ;communication/communication.c: 92:     TXREG = byte;
  2467     07D6  0839               	movf	UART_TxByte@byte,w
  2468     07D7  0099               	movwf	25	;volatile
  2469     07D8                     l95:
  2470     07D8  0008               	return
  2471     07D9                     __end_of_UART_TxByte:
  2472                           
  2473                           	psect	text12
  2474     002D                     __ptext12:	
  2475 ;; *************** function _Lcd_Write_Int *****************
  2476 ;; Defined at:
  2477 ;;		line 121 in file "peripherals/lcd.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;  val             2   36[BANK0 ] int 
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;  t               2   58[BANK1 ] int 
  2482 ;;  buffer         50    3[BANK1 ] unsigned char [50]
  2483 ;;  i               2   60[BANK1 ] int 
  2484 ;;  n               2   56[BANK1 ] int 
  2485 ;;  n1              2   54[BANK1 ] unsigned int 
  2486 ;;  isNeg           1   53[BANK1 ] unsigned char 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  2   36[BANK0 ] PTR unsigned char 
  2489 ;; Registers used:
  2490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2496 ;;      Params:         0       2       0       0       0
  2497 ;;      Locals:         0       0      59       0       0
  2498 ;;      Temps:          0       0       3       0       0
  2499 ;;      Totals:         0       2      62       0       0
  2500 ;;Total ram usage:       64 bytes
  2501 ;; Hardware stack levels used: 1
  2502 ;; Hardware stack levels required when called: 7
  2503 ;; This function calls:
  2504 ;;		_Lcd_Write_String
  2505 ;;		___awdiv
  2506 ;;		___lwdiv
  2507 ;;		___lwmod
  2508 ;; This function is called by:
  2509 ;;		_main
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513     002D                     _Lcd_Write_Int:	
  2514                           ;psect for function _Lcd_Write_Int
  2515                           
  2516     002D                     l1951:	
  2517                           ;incstack = 0
  2518                           ; Regs used in _Lcd_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2519                           
  2520                           
  2521                           ;peripherals/lcd.c: 123:     int n = val;
  2522     002D  1283               	bcf	3,5	;RP0=0, select bank0
  2523     002E  1303               	bcf	3,6	;RP1=0, select bank0
  2524     002F  0845               	movf	Lcd_Write_Int@val+1,w
  2525     0030  1683               	bsf	3,5	;RP0=1, select bank1
  2526     0031  1303               	bcf	3,6	;RP1=0, select bank1
  2527     0032  00D9               	movwf	(Lcd_Write_Int@n+1)^(0+128)
  2528     0033  1283               	bcf	3,5	;RP0=0, select bank0
  2529     0034  1303               	bcf	3,6	;RP1=0, select bank0
  2530     0035  0844               	movf	Lcd_Write_Int@val,w
  2531     0036  1683               	bsf	3,5	;RP0=1, select bank1
  2532     0037  1303               	bcf	3,6	;RP1=0, select bank1
  2533     0038  00D8               	movwf	Lcd_Write_Int@n^(0+128)
  2534     0039                     l1953:
  2535                           
  2536                           ;peripherals/lcd.c: 124:     char buffer[50];;peripherals/lcd.c: 125:     int i = 0;
  2537     0039  01DC               	clrf	Lcd_Write_Int@i^(0+128)
  2538     003A  01DD               	clrf	(Lcd_Write_Int@i+1)^(0+128)
  2539     003B                     l1955:
  2540                           
  2541                           ;peripherals/lcd.c: 126:     char isNeg = n < 0;
  2542     003B  1BD9               	btfsc	(Lcd_Write_Int@n+1)^(0+128),7
  2543     003C  283E               	goto	u1781
  2544     003D  2840               	goto	u1780
  2545     003E                     u1781:
  2546     003E  3001               	movlw	1
  2547     003F  2841               	goto	u1790
  2548     0040                     u1780:
  2549     0040  3000               	movlw	0
  2550     0041                     u1790:
  2551     0041  00D5               	movwf	Lcd_Write_Int@isNeg^(0+128)
  2552     0042                     l1957:
  2553                           
  2554                           ;peripherals/lcd.c: 128:     unsigned int n1 = isNeg ? -n : n;
  2555     0042  0855               	movf	Lcd_Write_Int@isNeg^(0+128),w
  2556     0043  1D03               	btfss	3,2
  2557     0044  2846               	goto	u1801
  2558     0045  2847               	goto	u1800
  2559     0046                     u1801:
  2560     0046  284C               	goto	l1961
  2561     0047                     u1800:
  2562     0047                     l1959:
  2563     0047  0859               	movf	(Lcd_Write_Int@n+1)^(0+128),w
  2564     0048  00D7               	movwf	(Lcd_Write_Int@n1+1)^(0+128)
  2565     0049  0858               	movf	Lcd_Write_Int@n^(0+128),w
  2566     004A  00D6               	movwf	Lcd_Write_Int@n1^(0+128)
  2567     004B  28A3               	goto	l1969
  2568     004C                     l1961:
  2569     004C  0958               	comf	Lcd_Write_Int@n^(0+128),w
  2570     004D  00A0               	movwf	??_Lcd_Write_Int^(0+128)
  2571     004E  0959               	comf	(Lcd_Write_Int@n+1)^(0+128),w
  2572     004F  00A1               	movwf	(??_Lcd_Write_Int^(0+128)+1)
  2573     0050  0AA0               	incf	??_Lcd_Write_Int^(0+128),f
  2574     0051  1903               	skipnz
  2575     0052  0AA1               	incf	(??_Lcd_Write_Int^(0+128)+1),f
  2576     0053  0820               	movf	??_Lcd_Write_Int^(0+128),w
  2577     0054  00D6               	movwf	Lcd_Write_Int@n1^(0+128)
  2578     0055  0821               	movf	(??_Lcd_Write_Int+1)^(0+128),w
  2579     0056  00D7               	movwf	(Lcd_Write_Int@n1+1)^(0+128)
  2580     0057  28A3               	goto	l1969
  2581     0058                     l1963:
  2582                           
  2583                           ;peripherals/lcd.c: 131:         buffer[i++] = n1 % 10 + '0';
  2584     0058  085C               	movf	Lcd_Write_Int@i^(0+128),w
  2585     0059  3EA3               	addlw	(low (Lcd_Write_Int@buffer| 0))& (0+255)
  2586     005A  0084               	movwf	4
  2587     005B  300A               	movlw	10
  2588     005C  1283               	bcf	3,5	;RP0=0, select bank0
  2589     005D  1303               	bcf	3,6	;RP1=0, select bank0
  2590     005E  00B8               	movwf	___lwmod@divisor
  2591     005F  3000               	movlw	0
  2592     0060  00B9               	movwf	___lwmod@divisor+1
  2593     0061  1683               	bsf	3,5	;RP0=1, select bank1
  2594     0062  1303               	bcf	3,6	;RP1=0, select bank1
  2595     0063  0857               	movf	(Lcd_Write_Int@n1+1)^(0+128),w
  2596     0064  1283               	bcf	3,5	;RP0=0, select bank0
  2597     0065  1303               	bcf	3,6	;RP1=0, select bank0
  2598     0066  00BB               	movwf	___lwmod@dividend+1
  2599     0067  1683               	bsf	3,5	;RP0=1, select bank1
  2600     0068  1303               	bcf	3,6	;RP1=0, select bank1
  2601     0069  0856               	movf	Lcd_Write_Int@n1^(0+128),w
  2602     006A  1283               	bcf	3,5	;RP0=0, select bank0
  2603     006B  1303               	bcf	3,6	;RP1=0, select bank0
  2604     006C  00BA               	movwf	___lwmod@dividend
  2605     006D  120A  118A  25E2  120A  118A  	fcall	___lwmod
  2606     0072  1283               	bcf	3,5	;RP0=0, select bank0
  2607     0073  1303               	bcf	3,6	;RP1=0, select bank0
  2608     0074  0838               	movf	?___lwmod,w
  2609     0075  3E30               	addlw	48
  2610     0076  1383               	bcf	3,7	;select IRP bank1
  2611     0077  0080               	movwf	0
  2612     0078                     l1965:
  2613     0078  3001               	movlw	1
  2614     0079  1683               	bsf	3,5	;RP0=1, select bank1
  2615     007A  1303               	bcf	3,6	;RP1=0, select bank1
  2616     007B  07DC               	addwf	Lcd_Write_Int@i^(0+128),f
  2617     007C  1803               	skipnc
  2618     007D  0ADD               	incf	(Lcd_Write_Int@i+1)^(0+128),f
  2619     007E  3000               	movlw	0
  2620     007F  07DD               	addwf	(Lcd_Write_Int@i+1)^(0+128),f
  2621     0080                     l1967:
  2622                           
  2623                           ;peripherals/lcd.c: 132:         n1 = n1 / 10;
  2624     0080  300A               	movlw	10
  2625     0081  1283               	bcf	3,5	;RP0=0, select bank0
  2626     0082  1303               	bcf	3,6	;RP1=0, select bank0
  2627     0083  00B8               	movwf	___lwdiv@divisor
  2628     0084  3000               	movlw	0
  2629     0085  00B9               	movwf	___lwdiv@divisor+1
  2630     0086  1683               	bsf	3,5	;RP0=1, select bank1
  2631     0087  1303               	bcf	3,6	;RP1=0, select bank1
  2632     0088  0857               	movf	(Lcd_Write_Int@n1+1)^(0+128),w
  2633     0089  1283               	bcf	3,5	;RP0=0, select bank0
  2634     008A  1303               	bcf	3,6	;RP1=0, select bank0
  2635     008B  00BB               	movwf	___lwdiv@dividend+1
  2636     008C  1683               	bsf	3,5	;RP0=1, select bank1
  2637     008D  1303               	bcf	3,6	;RP1=0, select bank1
  2638     008E  0856               	movf	Lcd_Write_Int@n1^(0+128),w
  2639     008F  1283               	bcf	3,5	;RP0=0, select bank0
  2640     0090  1303               	bcf	3,6	;RP1=0, select bank0
  2641     0091  00BA               	movwf	___lwdiv@dividend
  2642     0092  120A  118A  2514  120A  118A  	fcall	___lwdiv
  2643     0097  1283               	bcf	3,5	;RP0=0, select bank0
  2644     0098  1303               	bcf	3,6	;RP1=0, select bank0
  2645     0099  0839               	movf	?___lwdiv+1,w
  2646     009A  1683               	bsf	3,5	;RP0=1, select bank1
  2647     009B  1303               	bcf	3,6	;RP1=0, select bank1
  2648     009C  00D7               	movwf	(Lcd_Write_Int@n1+1)^(0+128)
  2649     009D  1283               	bcf	3,5	;RP0=0, select bank0
  2650     009E  1303               	bcf	3,6	;RP1=0, select bank0
  2651     009F  0838               	movf	?___lwdiv,w
  2652     00A0  1683               	bsf	3,5	;RP0=1, select bank1
  2653     00A1  1303               	bcf	3,6	;RP1=0, select bank1
  2654     00A2  00D6               	movwf	Lcd_Write_Int@n1^(0+128)
  2655     00A3                     l1969:
  2656                           
  2657                           ;peripherals/lcd.c: 130:     while (n1 != 0) {
  2658     00A3  0856               	movf	Lcd_Write_Int@n1^(0+128),w
  2659     00A4  0457               	iorwf	(Lcd_Write_Int@n1+1)^(0+128),w
  2660     00A5  1D03               	btfss	3,2
  2661     00A6  28A8               	goto	u1811
  2662     00A7  28A9               	goto	u1810
  2663     00A8                     u1811:
  2664     00A8  2858               	goto	l1963
  2665     00A9                     u1810:
  2666     00A9                     l1971:
  2667                           
  2668                           ;peripherals/lcd.c: 135:     if (isNeg)
  2669     00A9  0855               	movf	Lcd_Write_Int@isNeg^(0+128),w
  2670     00AA  1903               	btfsc	3,2
  2671     00AB  28AD               	goto	u1821
  2672     00AC  28AE               	goto	u1820
  2673     00AD                     u1821:
  2674     00AD  28BA               	goto	l1977
  2675     00AE                     u1820:
  2676     00AE                     l1973:
  2677                           
  2678                           ;peripherals/lcd.c: 136:         buffer[i++] = '-';
  2679     00AE  085C               	movf	Lcd_Write_Int@i^(0+128),w
  2680     00AF  3EA3               	addlw	(low (Lcd_Write_Int@buffer| 0))& (0+255)
  2681     00B0  0084               	movwf	4
  2682     00B1  302D               	movlw	45
  2683     00B2  1383               	bcf	3,7	;select IRP bank1
  2684     00B3  0080               	movwf	0
  2685     00B4                     l1975:
  2686     00B4  3001               	movlw	1
  2687     00B5  07DC               	addwf	Lcd_Write_Int@i^(0+128),f
  2688     00B6  1803               	skipnc
  2689     00B7  0ADD               	incf	(Lcd_Write_Int@i+1)^(0+128),f
  2690     00B8  3000               	movlw	0
  2691     00B9  07DD               	addwf	(Lcd_Write_Int@i+1)^(0+128),f
  2692     00BA                     l1977:
  2693                           
  2694                           ;peripherals/lcd.c: 138:     buffer[i] = '\0';
  2695     00BA  085C               	movf	Lcd_Write_Int@i^(0+128),w
  2696     00BB  3EA3               	addlw	(low (Lcd_Write_Int@buffer| 0))& (0+255)
  2697     00BC  0084               	movwf	4
  2698     00BD  1383               	bcf	3,7	;select IRP bank1
  2699     00BE  0180               	clrf	0
  2700     00BF                     l1979:
  2701                           
  2702                           ;peripherals/lcd.c: 140:     for (int t = 0; t < i / 2; t++) {
  2703     00BF  01DA               	clrf	Lcd_Write_Int@t^(0+128)
  2704     00C0  01DB               	clrf	(Lcd_Write_Int@t+1)^(0+128)
  2705     00C1  28FE               	goto	l1985
  2706     00C2                     l1981:
  2707                           
  2708                           ;peripherals/lcd.c: 141:         buffer[t] ^= buffer[i - t - 1];
  2709     00C2  30A3               	movlw	(low (Lcd_Write_Int@buffer| 0))& (0+255)
  2710     00C3  1683               	bsf	3,5	;RP0=1, select bank1
  2711     00C4  1303               	bcf	3,6	;RP1=0, select bank1
  2712     00C5  00A0               	movwf	??_Lcd_Write_Int^(0+128)
  2713     00C6  085A               	movf	Lcd_Write_Int@t^(0+128),w
  2714     00C7  02A0               	subwf	??_Lcd_Write_Int^(0+128),f
  2715     00C8  085C               	movf	Lcd_Write_Int@i^(0+128),w
  2716     00C9  0720               	addwf	??_Lcd_Write_Int^(0+128),w
  2717     00CA  00A1               	movwf	(??_Lcd_Write_Int+1)^(0+128)
  2718     00CB  0821               	movf	(??_Lcd_Write_Int+1)^(0+128),w
  2719     00CC  3EFF               	addlw	255
  2720     00CD  0084               	movwf	4
  2721     00CE  1383               	bcf	3,7	;select IRP bank0
  2722     00CF  0800               	movf	0,w
  2723     00D0  00A2               	movwf	(??_Lcd_Write_Int+2)^(0+128)
  2724     00D1  085A               	movf	Lcd_Write_Int@t^(0+128),w
  2725     00D2  3EA3               	addlw	(low (Lcd_Write_Int@buffer| 0))& (0+255)
  2726     00D3  0084               	movwf	4
  2727     00D4  0822               	movf	(??_Lcd_Write_Int+2)^(0+128),w
  2728     00D5  0680               	xorwf	0,f
  2729                           
  2730                           ;peripherals/lcd.c: 142:         buffer[i - t - 1] ^= buffer[t];
  2731     00D6  085A               	movf	Lcd_Write_Int@t^(0+128),w
  2732     00D7  3EA3               	addlw	(low (Lcd_Write_Int@buffer| 0))& (0+255)
  2733     00D8  0084               	movwf	4
  2734     00D9  0800               	movf	0,w
  2735     00DA  00A0               	movwf	??_Lcd_Write_Int^(0+128)
  2736     00DB  30A3               	movlw	(low (Lcd_Write_Int@buffer| 0))& (0+255)
  2737     00DC  00A1               	movwf	(??_Lcd_Write_Int+1)^(0+128)
  2738     00DD  085A               	movf	Lcd_Write_Int@t^(0+128),w
  2739     00DE  02A1               	subwf	(??_Lcd_Write_Int+1)^(0+128),f
  2740     00DF  085C               	movf	Lcd_Write_Int@i^(0+128),w
  2741     00E0  0721               	addwf	(??_Lcd_Write_Int+1)^(0+128),w
  2742     00E1  00A2               	movwf	(??_Lcd_Write_Int+2)^(0+128)
  2743     00E2  0822               	movf	(??_Lcd_Write_Int+2)^(0+128),w
  2744     00E3  3EFF               	addlw	255
  2745     00E4  0084               	movwf	4
  2746     00E5  0820               	movf	??_Lcd_Write_Int^(0+128),w
  2747     00E6  0680               	xorwf	0,f
  2748                           
  2749                           ;peripherals/lcd.c: 143:         buffer[t] ^= buffer[i - t - 1];
  2750     00E7  30A3               	movlw	(low (Lcd_Write_Int@buffer| 0))& (0+255)
  2751     00E8  00A0               	movwf	??_Lcd_Write_Int^(0+128)
  2752     00E9  085A               	movf	Lcd_Write_Int@t^(0+128),w
  2753     00EA  02A0               	subwf	??_Lcd_Write_Int^(0+128),f
  2754     00EB  085C               	movf	Lcd_Write_Int@i^(0+128),w
  2755     00EC  0720               	addwf	??_Lcd_Write_Int^(0+128),w
  2756     00ED  00A1               	movwf	(??_Lcd_Write_Int+1)^(0+128)
  2757     00EE  0821               	movf	(??_Lcd_Write_Int+1)^(0+128),w
  2758     00EF  3EFF               	addlw	255
  2759     00F0  0084               	movwf	4
  2760     00F1  0800               	movf	0,w
  2761     00F2  00A2               	movwf	(??_Lcd_Write_Int+2)^(0+128)
  2762     00F3  085A               	movf	Lcd_Write_Int@t^(0+128),w
  2763     00F4  3EA3               	addlw	(low (Lcd_Write_Int@buffer| 0))& (0+255)
  2764     00F5  0084               	movwf	4
  2765     00F6  0822               	movf	(??_Lcd_Write_Int+2)^(0+128),w
  2766     00F7  0680               	xorwf	0,f
  2767     00F8                     l1983:
  2768                           
  2769                           ;peripherals/lcd.c: 144:     }
  2770     00F8  3001               	movlw	1
  2771     00F9  07DA               	addwf	Lcd_Write_Int@t^(0+128),f
  2772     00FA  1803               	skipnc
  2773     00FB  0ADB               	incf	(Lcd_Write_Int@t+1)^(0+128),f
  2774     00FC  3000               	movlw	0
  2775     00FD  07DB               	addwf	(Lcd_Write_Int@t+1)^(0+128),f
  2776     00FE                     l1985:
  2777     00FE  3002               	movlw	2
  2778     00FF  1283               	bcf	3,5	;RP0=0, select bank0
  2779     0100  1303               	bcf	3,6	;RP1=0, select bank0
  2780     0101  00B8               	movwf	___awdiv@divisor
  2781     0102  3000               	movlw	0
  2782     0103  00B9               	movwf	___awdiv@divisor+1
  2783     0104  1683               	bsf	3,5	;RP0=1, select bank1
  2784     0105  1303               	bcf	3,6	;RP1=0, select bank1
  2785     0106  085D               	movf	(Lcd_Write_Int@i+1)^(0+128),w
  2786     0107  1283               	bcf	3,5	;RP0=0, select bank0
  2787     0108  1303               	bcf	3,6	;RP1=0, select bank0
  2788     0109  00BB               	movwf	___awdiv@dividend+1
  2789     010A  1683               	bsf	3,5	;RP0=1, select bank1
  2790     010B  1303               	bcf	3,6	;RP1=0, select bank1
  2791     010C  085C               	movf	Lcd_Write_Int@i^(0+128),w
  2792     010D  1283               	bcf	3,5	;RP0=0, select bank0
  2793     010E  1303               	bcf	3,6	;RP1=0, select bank0
  2794     010F  00BA               	movwf	___awdiv@dividend
  2795     0110  120A  118A  23BB  120A  118A  	fcall	___awdiv
  2796     0115  1683               	bsf	3,5	;RP0=1, select bank1
  2797     0116  1303               	bcf	3,6	;RP1=0, select bank1
  2798     0117  085B               	movf	(Lcd_Write_Int@t+1)^(0+128),w
  2799     0118  3A80               	xorlw	128
  2800     0119  00A0               	movwf	??_Lcd_Write_Int^(0+128)
  2801     011A  1283               	bcf	3,5	;RP0=0, select bank0
  2802     011B  1303               	bcf	3,6	;RP1=0, select bank0
  2803     011C  0839               	movf	?___awdiv+1,w
  2804     011D  3A80               	xorlw	128
  2805     011E  1683               	bsf	3,5	;RP0=1, select bank1
  2806     011F  1303               	bcf	3,6	;RP1=0, select bank1
  2807     0120  0220               	subwf	??_Lcd_Write_Int^(0+128),w
  2808     0121  1D03               	skipz
  2809     0122  2929               	goto	u1835
  2810     0123  1283               	bcf	3,5	;RP0=0, select bank0
  2811     0124  1303               	bcf	3,6	;RP1=0, select bank0
  2812     0125  0838               	movf	?___awdiv,w
  2813     0126  1683               	bsf	3,5	;RP0=1, select bank1
  2814     0127  1303               	bcf	3,6	;RP1=0, select bank1
  2815     0128  025A               	subwf	Lcd_Write_Int@t^(0+128),w
  2816     0129                     u1835:
  2817     0129  1C03               	skipc
  2818     012A  292C               	goto	u1831
  2819     012B  292D               	goto	u1830
  2820     012C                     u1831:
  2821     012C  28C2               	goto	l1981
  2822     012D                     u1830:
  2823     012D                     l1987:
  2824                           
  2825                           ;peripherals/lcd.c: 146:     if (n == 0) {
  2826     012D  1683               	bsf	3,5	;RP0=1, select bank1
  2827     012E  1303               	bcf	3,6	;RP1=0, select bank1
  2828     012F  0858               	movf	Lcd_Write_Int@n^(0+128),w
  2829     0130  0459               	iorwf	(Lcd_Write_Int@n+1)^(0+128),w
  2830     0131  1D03               	btfss	3,2
  2831     0132  2934               	goto	u1841
  2832     0133  2935               	goto	u1840
  2833     0134                     u1841:
  2834     0134  2938               	goto	l1993
  2835     0135                     u1840:
  2836     0135                     l1989:
  2837                           
  2838                           ;peripherals/lcd.c: 147:         buffer[0] = '0';
  2839     0135  3030               	movlw	48
  2840     0136  00A3               	movwf	Lcd_Write_Int@buffer^(0+128)
  2841     0137                     l1991:
  2842                           
  2843                           ;peripherals/lcd.c: 148:         buffer[1] = '\0';
  2844     0137  01A4               	clrf	(Lcd_Write_Int@buffer^(0+128)+1)
  2845     0138                     l1993:
  2846                           
  2847                           ;peripherals/lcd.c: 151:     Lcd_Write_String(buffer);
  2848     0138  30A3               	movlw	(low (Lcd_Write_Int@buffer| 0))& (0+255)
  2849     0139  1283               	bcf	3,5	;RP0=0, select bank0
  2850     013A  1303               	bcf	3,6	;RP1=0, select bank0
  2851     013B  00BD               	movwf	Lcd_Write_String@a
  2852     013C  3000               	movlw	0
  2853     013D  00BE               	movwf	Lcd_Write_String@a+1
  2854     013E  120A  118A  255A  120A  118A  	fcall	_Lcd_Write_String
  2855     0143                     l161:
  2856     0143  0008               	return
  2857     0144                     __end_of_Lcd_Write_Int:
  2858                           
  2859                           	psect	text13
  2860     05E2                     __ptext13:	
  2861 ;; *************** function ___lwmod *****************
  2862 ;; Defined at:
  2863 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;  divisor         2   24[BANK0 ] unsigned int 
  2866 ;;  dividend        2   26[BANK0 ] unsigned int 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  counter         1   29[BANK0 ] unsigned char 
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  2   24[BANK0 ] unsigned int 
  2871 ;; Registers used:
  2872 ;;		wreg, status,2, status,0
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2878 ;;      Params:         0       4       0       0       0
  2879 ;;      Locals:         0       1       0       0       0
  2880 ;;      Temps:          0       1       0       0       0
  2881 ;;      Totals:         0       6       0       0       0
  2882 ;;Total ram usage:        6 bytes
  2883 ;; Hardware stack levels used: 1
  2884 ;; Hardware stack levels required when called: 4
  2885 ;; This function calls:
  2886 ;;		Nothing
  2887 ;; This function is called by:
  2888 ;;		_Lcd_Write_Int
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892     05E2                     ___lwmod:	
  2893                           ;psect for function ___lwmod
  2894                           
  2895     05E2                     l1599:	
  2896                           ;incstack = 0
  2897                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2898                           
  2899     05E2  1283               	bcf	3,5	;RP0=0, select bank0
  2900     05E3  1303               	bcf	3,6	;RP1=0, select bank0
  2901     05E4  0838               	movf	___lwmod@divisor,w
  2902     05E5  0439               	iorwf	___lwmod@divisor+1,w
  2903     05E6  1903               	btfsc	3,2
  2904     05E7  2DE9               	goto	u1301
  2905     05E8  2DEA               	goto	u1300
  2906     05E9                     u1301:
  2907     05E9  2E19               	goto	l1617
  2908     05EA                     u1300:
  2909     05EA                     l1601:
  2910     05EA  01BD               	clrf	___lwmod@counter
  2911     05EB  0ABD               	incf	___lwmod@counter,f
  2912     05EC  2DF8               	goto	l1607
  2913     05ED                     l1603:
  2914     05ED  3001               	movlw	1
  2915     05EE                     u1315:
  2916     05EE  1003               	clrc
  2917     05EF  0DB8               	rlf	___lwmod@divisor,f
  2918     05F0  0DB9               	rlf	___lwmod@divisor+1,f
  2919     05F1  3EFF               	addlw	-1
  2920     05F2  1D03               	skipz
  2921     05F3  2DEE               	goto	u1315
  2922     05F4                     l1605:
  2923     05F4  3001               	movlw	1
  2924     05F5  00BC               	movwf	??___lwmod
  2925     05F6  083C               	movf	??___lwmod,w
  2926     05F7  07BD               	addwf	___lwmod@counter,f
  2927     05F8                     l1607:
  2928     05F8  1FB9               	btfss	___lwmod@divisor+1,7
  2929     05F9  2DFB               	goto	u1321
  2930     05FA  2DFC               	goto	u1320
  2931     05FB                     u1321:
  2932     05FB  2DED               	goto	l1603
  2933     05FC                     u1320:
  2934     05FC                     l1609:
  2935     05FC  0839               	movf	___lwmod@divisor+1,w
  2936     05FD  023B               	subwf	___lwmod@dividend+1,w
  2937     05FE  1D03               	skipz
  2938     05FF  2E02               	goto	u1335
  2939     0600  0838               	movf	___lwmod@divisor,w
  2940     0601  023A               	subwf	___lwmod@dividend,w
  2941     0602                     u1335:
  2942     0602  1C03               	skipc
  2943     0603  2E05               	goto	u1331
  2944     0604  2E06               	goto	u1330
  2945     0605                     u1331:
  2946     0605  2E0C               	goto	l1613
  2947     0606                     u1330:
  2948     0606                     l1611:
  2949     0606  0838               	movf	___lwmod@divisor,w
  2950     0607  02BA               	subwf	___lwmod@dividend,f
  2951     0608  0839               	movf	___lwmod@divisor+1,w
  2952     0609  1C03               	skipc
  2953     060A  03BB               	decf	___lwmod@dividend+1,f
  2954     060B  02BB               	subwf	___lwmod@dividend+1,f
  2955     060C                     l1613:
  2956     060C  3001               	movlw	1
  2957     060D                     u1345:
  2958     060D  1003               	clrc
  2959     060E  0CB9               	rrf	___lwmod@divisor+1,f
  2960     060F  0CB8               	rrf	___lwmod@divisor,f
  2961     0610  3EFF               	addlw	-1
  2962     0611  1D03               	skipz
  2963     0612  2E0D               	goto	u1345
  2964     0613                     l1615:
  2965     0613  3001               	movlw	1
  2966     0614  02BD               	subwf	___lwmod@counter,f
  2967     0615  1D03               	btfss	3,2
  2968     0616  2E18               	goto	u1351
  2969     0617  2E19               	goto	u1350
  2970     0618                     u1351:
  2971     0618  2DFC               	goto	l1609
  2972     0619                     u1350:
  2973     0619                     l1617:
  2974     0619  083B               	movf	___lwmod@dividend+1,w
  2975     061A  00B9               	movwf	?___lwmod+1
  2976     061B  083A               	movf	___lwmod@dividend,w
  2977     061C  00B8               	movwf	?___lwmod
  2978     061D                     l583:
  2979     061D  0008               	return
  2980     061E                     __end_of___lwmod:
  2981                           
  2982                           	psect	text14
  2983     0514                     __ptext14:	
  2984 ;; *************** function ___lwdiv *****************
  2985 ;; Defined at:
  2986 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;  divisor         2   24[BANK0 ] unsigned int 
  2989 ;;  dividend        2   26[BANK0 ] unsigned int 
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;  quotient        2   29[BANK0 ] unsigned int 
  2992 ;;  counter         1   31[BANK0 ] unsigned char 
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  2   24[BANK0 ] unsigned int 
  2995 ;; Registers used:
  2996 ;;		wreg, status,2, status,0
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3002 ;;      Params:         0       4       0       0       0
  3003 ;;      Locals:         0       3       0       0       0
  3004 ;;      Temps:          0       1       0       0       0
  3005 ;;      Totals:         0       8       0       0       0
  3006 ;;Total ram usage:        8 bytes
  3007 ;; Hardware stack levels used: 1
  3008 ;; Hardware stack levels required when called: 4
  3009 ;; This function calls:
  3010 ;;		Nothing
  3011 ;; This function is called by:
  3012 ;;		_Lcd_Write_Int
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016     0514                     ___lwdiv:	
  3017                           ;psect for function ___lwdiv
  3018                           
  3019     0514                     l1573:	
  3020                           ;incstack = 0
  3021                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3022                           
  3023     0514  1283               	bcf	3,5	;RP0=0, select bank0
  3024     0515  1303               	bcf	3,6	;RP1=0, select bank0
  3025     0516  01BD               	clrf	___lwdiv@quotient
  3026     0517  01BE               	clrf	___lwdiv@quotient+1
  3027     0518                     l1575:
  3028     0518  0838               	movf	___lwdiv@divisor,w
  3029     0519  0439               	iorwf	___lwdiv@divisor+1,w
  3030     051A  1903               	btfsc	3,2
  3031     051B  2D1D               	goto	u1231
  3032     051C  2D1E               	goto	u1230
  3033     051D                     u1231:
  3034     051D  2D55               	goto	l1595
  3035     051E                     u1230:
  3036     051E                     l1577:
  3037     051E  01BF               	clrf	___lwdiv@counter
  3038     051F  0ABF               	incf	___lwdiv@counter,f
  3039     0520  2D2C               	goto	l1583
  3040     0521                     l1579:
  3041     0521  3001               	movlw	1
  3042     0522                     u1245:
  3043     0522  1003               	clrc
  3044     0523  0DB8               	rlf	___lwdiv@divisor,f
  3045     0524  0DB9               	rlf	___lwdiv@divisor+1,f
  3046     0525  3EFF               	addlw	-1
  3047     0526  1D03               	skipz
  3048     0527  2D22               	goto	u1245
  3049     0528                     l1581:
  3050     0528  3001               	movlw	1
  3051     0529  00BC               	movwf	??___lwdiv
  3052     052A  083C               	movf	??___lwdiv,w
  3053     052B  07BF               	addwf	___lwdiv@counter,f
  3054     052C                     l1583:
  3055     052C  1FB9               	btfss	___lwdiv@divisor+1,7
  3056     052D  2D2F               	goto	u1251
  3057     052E  2D30               	goto	u1250
  3058     052F                     u1251:
  3059     052F  2D21               	goto	l1579
  3060     0530                     u1250:
  3061     0530                     l1585:
  3062     0530  3001               	movlw	1
  3063     0531                     u1265:
  3064     0531  1003               	clrc
  3065     0532  0DBD               	rlf	___lwdiv@quotient,f
  3066     0533  0DBE               	rlf	___lwdiv@quotient+1,f
  3067     0534  3EFF               	addlw	-1
  3068     0535  1D03               	skipz
  3069     0536  2D31               	goto	u1265
  3070     0537  0839               	movf	___lwdiv@divisor+1,w
  3071     0538  023B               	subwf	___lwdiv@dividend+1,w
  3072     0539  1D03               	skipz
  3073     053A  2D3D               	goto	u1275
  3074     053B  0838               	movf	___lwdiv@divisor,w
  3075     053C  023A               	subwf	___lwdiv@dividend,w
  3076     053D                     u1275:
  3077     053D  1C03               	skipc
  3078     053E  2D40               	goto	u1271
  3079     053F  2D41               	goto	u1270
  3080     0540                     u1271:
  3081     0540  2D48               	goto	l1591
  3082     0541                     u1270:
  3083     0541                     l1587:
  3084     0541  0838               	movf	___lwdiv@divisor,w
  3085     0542  02BA               	subwf	___lwdiv@dividend,f
  3086     0543  0839               	movf	___lwdiv@divisor+1,w
  3087     0544  1C03               	skipc
  3088     0545  03BB               	decf	___lwdiv@dividend+1,f
  3089     0546  02BB               	subwf	___lwdiv@dividend+1,f
  3090     0547                     l1589:
  3091     0547  143D               	bsf	___lwdiv@quotient,0
  3092     0548                     l1591:
  3093     0548  3001               	movlw	1
  3094     0549                     u1285:
  3095     0549  1003               	clrc
  3096     054A  0CB9               	rrf	___lwdiv@divisor+1,f
  3097     054B  0CB8               	rrf	___lwdiv@divisor,f
  3098     054C  3EFF               	addlw	-1
  3099     054D  1D03               	skipz
  3100     054E  2D49               	goto	u1285
  3101     054F                     l1593:
  3102     054F  3001               	movlw	1
  3103     0550  02BF               	subwf	___lwdiv@counter,f
  3104     0551  1D03               	btfss	3,2
  3105     0552  2D54               	goto	u1291
  3106     0553  2D55               	goto	u1290
  3107     0554                     u1291:
  3108     0554  2D30               	goto	l1585
  3109     0555                     u1290:
  3110     0555                     l1595:
  3111     0555  083E               	movf	___lwdiv@quotient+1,w
  3112     0556  00B9               	movwf	?___lwdiv+1
  3113     0557  083D               	movf	___lwdiv@quotient,w
  3114     0558  00B8               	movwf	?___lwdiv
  3115     0559                     l573:
  3116     0559  0008               	return
  3117     055A                     __end_of___lwdiv:
  3118                           
  3119                           	psect	text15
  3120     03BB                     __ptext15:	
  3121 ;; *************** function ___awdiv *****************
  3122 ;; Defined at:
  3123 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;  divisor         2   24[BANK0 ] int 
  3126 ;;  dividend        2   26[BANK0 ] int 
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;  quotient        2   31[BANK0 ] int 
  3129 ;;  sign            1   30[BANK0 ] unsigned char 
  3130 ;;  counter         1   29[BANK0 ] unsigned char 
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  2   24[BANK0 ] int 
  3133 ;; Registers used:
  3134 ;;		wreg, status,2, status,0
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3140 ;;      Params:         0       4       0       0       0
  3141 ;;      Locals:         0       4       0       0       0
  3142 ;;      Temps:          0       1       0       0       0
  3143 ;;      Totals:         0       9       0       0       0
  3144 ;;Total ram usage:        9 bytes
  3145 ;; Hardware stack levels used: 1
  3146 ;; Hardware stack levels required when called: 4
  3147 ;; This function calls:
  3148 ;;		Nothing
  3149 ;; This function is called by:
  3150 ;;		_Lcd_Write_Int
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153                           
  3154     03BB                     ___awdiv:	
  3155                           ;psect for function ___awdiv
  3156                           
  3157     03BB                     l1529:	
  3158                           ;incstack = 0
  3159                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3160                           
  3161     03BB  1283               	bcf	3,5	;RP0=0, select bank0
  3162     03BC  1303               	bcf	3,6	;RP1=0, select bank0
  3163     03BD  01BE               	clrf	___awdiv@sign
  3164     03BE                     l1531:
  3165     03BE  1FB9               	btfss	___awdiv@divisor+1,7
  3166     03BF  2BC1               	goto	u1131
  3167     03C0  2BC2               	goto	u1130
  3168     03C1                     u1131:
  3169     03C1  2BC9               	goto	l1537
  3170     03C2                     u1130:
  3171     03C2                     l1533:
  3172     03C2  09B8               	comf	___awdiv@divisor,f
  3173     03C3  09B9               	comf	___awdiv@divisor+1,f
  3174     03C4  0AB8               	incf	___awdiv@divisor,f
  3175     03C5  1903               	skipnz
  3176     03C6  0AB9               	incf	___awdiv@divisor+1,f
  3177     03C7                     l1535:
  3178     03C7  01BE               	clrf	___awdiv@sign
  3179     03C8  0ABE               	incf	___awdiv@sign,f
  3180     03C9                     l1537:
  3181     03C9  1FBB               	btfss	___awdiv@dividend+1,7
  3182     03CA  2BCC               	goto	u1141
  3183     03CB  2BCD               	goto	u1140
  3184     03CC                     u1141:
  3185     03CC  2BD6               	goto	l1543
  3186     03CD                     u1140:
  3187     03CD                     l1539:
  3188     03CD  09BA               	comf	___awdiv@dividend,f
  3189     03CE  09BB               	comf	___awdiv@dividend+1,f
  3190     03CF  0ABA               	incf	___awdiv@dividend,f
  3191     03D0  1903               	skipnz
  3192     03D1  0ABB               	incf	___awdiv@dividend+1,f
  3193     03D2                     l1541:
  3194     03D2  3001               	movlw	1
  3195     03D3  00BC               	movwf	??___awdiv
  3196     03D4  083C               	movf	??___awdiv,w
  3197     03D5  06BE               	xorwf	___awdiv@sign,f
  3198     03D6                     l1543:
  3199     03D6  01BF               	clrf	___awdiv@quotient
  3200     03D7  01C0               	clrf	___awdiv@quotient+1
  3201     03D8                     l1545:
  3202     03D8  0838               	movf	___awdiv@divisor,w
  3203     03D9  0439               	iorwf	___awdiv@divisor+1,w
  3204     03DA  1903               	btfsc	3,2
  3205     03DB  2BDD               	goto	u1151
  3206     03DC  2BDE               	goto	u1150
  3207     03DD                     u1151:
  3208     03DD  2C15               	goto	l1565
  3209     03DE                     u1150:
  3210     03DE                     l1547:
  3211     03DE  01BD               	clrf	___awdiv@counter
  3212     03DF  0ABD               	incf	___awdiv@counter,f
  3213     03E0  2BEC               	goto	l1553
  3214     03E1                     l1549:
  3215     03E1  3001               	movlw	1
  3216     03E2                     u1165:
  3217     03E2  1003               	clrc
  3218     03E3  0DB8               	rlf	___awdiv@divisor,f
  3219     03E4  0DB9               	rlf	___awdiv@divisor+1,f
  3220     03E5  3EFF               	addlw	-1
  3221     03E6  1D03               	skipz
  3222     03E7  2BE2               	goto	u1165
  3223     03E8                     l1551:
  3224     03E8  3001               	movlw	1
  3225     03E9  00BC               	movwf	??___awdiv
  3226     03EA  083C               	movf	??___awdiv,w
  3227     03EB  07BD               	addwf	___awdiv@counter,f
  3228     03EC                     l1553:
  3229     03EC  1FB9               	btfss	___awdiv@divisor+1,7
  3230     03ED  2BEF               	goto	u1171
  3231     03EE  2BF0               	goto	u1170
  3232     03EF                     u1171:
  3233     03EF  2BE1               	goto	l1549
  3234     03F0                     u1170:
  3235     03F0                     l1555:
  3236     03F0  3001               	movlw	1
  3237     03F1                     u1185:
  3238     03F1  1003               	clrc
  3239     03F2  0DBF               	rlf	___awdiv@quotient,f
  3240     03F3  0DC0               	rlf	___awdiv@quotient+1,f
  3241     03F4  3EFF               	addlw	-1
  3242     03F5  1D03               	skipz
  3243     03F6  2BF1               	goto	u1185
  3244     03F7  0839               	movf	___awdiv@divisor+1,w
  3245     03F8  023B               	subwf	___awdiv@dividend+1,w
  3246     03F9  1D03               	skipz
  3247     03FA  2BFD               	goto	u1195
  3248     03FB  0838               	movf	___awdiv@divisor,w
  3249     03FC  023A               	subwf	___awdiv@dividend,w
  3250     03FD                     u1195:
  3251     03FD  1C03               	skipc
  3252     03FE  2C00               	goto	u1191
  3253     03FF  2C01               	goto	u1190
  3254     0400                     u1191:
  3255     0400  2C08               	goto	l1561
  3256     0401                     u1190:
  3257     0401                     l1557:
  3258     0401  0838               	movf	___awdiv@divisor,w
  3259     0402  02BA               	subwf	___awdiv@dividend,f
  3260     0403  0839               	movf	___awdiv@divisor+1,w
  3261     0404  1C03               	skipc
  3262     0405  03BB               	decf	___awdiv@dividend+1,f
  3263     0406  02BB               	subwf	___awdiv@dividend+1,f
  3264     0407                     l1559:
  3265     0407  143F               	bsf	___awdiv@quotient,0
  3266     0408                     l1561:
  3267     0408  3001               	movlw	1
  3268     0409                     u1205:
  3269     0409  1003               	clrc
  3270     040A  0CB9               	rrf	___awdiv@divisor+1,f
  3271     040B  0CB8               	rrf	___awdiv@divisor,f
  3272     040C  3EFF               	addlw	-1
  3273     040D  1D03               	skipz
  3274     040E  2C09               	goto	u1205
  3275     040F                     l1563:
  3276     040F  3001               	movlw	1
  3277     0410  02BD               	subwf	___awdiv@counter,f
  3278     0411  1D03               	btfss	3,2
  3279     0412  2C14               	goto	u1211
  3280     0413  2C15               	goto	u1210
  3281     0414                     u1211:
  3282     0414  2BF0               	goto	l1555
  3283     0415                     u1210:
  3284     0415                     l1565:
  3285     0415  083E               	movf	___awdiv@sign,w
  3286     0416  1903               	btfsc	3,2
  3287     0417  2C19               	goto	u1221
  3288     0418  2C1A               	goto	u1220
  3289     0419                     u1221:
  3290     0419  2C1F               	goto	l1569
  3291     041A                     u1220:
  3292     041A                     l1567:
  3293     041A  09BF               	comf	___awdiv@quotient,f
  3294     041B  09C0               	comf	___awdiv@quotient+1,f
  3295     041C  0ABF               	incf	___awdiv@quotient,f
  3296     041D  1903               	skipnz
  3297     041E  0AC0               	incf	___awdiv@quotient+1,f
  3298     041F                     l1569:
  3299     041F  0840               	movf	___awdiv@quotient+1,w
  3300     0420  00B9               	movwf	?___awdiv+1
  3301     0421  083F               	movf	___awdiv@quotient,w
  3302     0422  00B8               	movwf	?___awdiv
  3303     0423                     l454:
  3304     0423  0008               	return
  3305     0424                     __end_of___awdiv:
  3306                           
  3307                           	psect	text16
  3308     055A                     __ptext16:	
  3309 ;; *************** function _Lcd_Write_String *****************
  3310 ;; Defined at:
  3311 ;;		line 105 in file "peripherals/lcd.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;  a               2   29[BANK0 ] PTR unsigned char 
  3314 ;;		 -> main@packet(14), STR_4(4), Lcd_Write_Int@buffer(50), 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  i               2   34[BANK0 ] int 
  3317 ;; Return value:  Size  Location     Type
  3318 ;;                  1    wreg      void 
  3319 ;; Registers used:
  3320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3326 ;;      Params:         0       2       0       0       0
  3327 ;;      Locals:         0       2       0       0       0
  3328 ;;      Temps:          0       3       0       0       0
  3329 ;;      Totals:         0       7       0       0       0
  3330 ;;Total ram usage:        7 bytes
  3331 ;; Hardware stack levels used: 1
  3332 ;; Hardware stack levels required when called: 6
  3333 ;; This function calls:
  3334 ;;		_Lcd_Write_Char
  3335 ;; This function is called by:
  3336 ;;		_Lcd_Write_Int
  3337 ;;		_main
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341     055A                     _Lcd_Write_String:	
  3342                           ;psect for function _Lcd_Write_String
  3343                           
  3344     055A                     l1467:	
  3345                           ;incstack = 0
  3346                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3347                           
  3348                           
  3349                           ;peripherals/lcd.c: 106:     int i;;peripherals/lcd.c: 107:     for (i = 0; a[i] != '\0'
      +                          ; i++)
  3350     055A  1283               	bcf	3,5	;RP0=0, select bank0
  3351     055B  1303               	bcf	3,6	;RP1=0, select bank0
  3352     055C  01C2               	clrf	Lcd_Write_String@i
  3353     055D  01C3               	clrf	Lcd_Write_String@i+1
  3354     055E  2D83               	goto	l1473
  3355     055F                     l1469:
  3356                           
  3357                           ;peripherals/lcd.c: 108:         Lcd_Write_Char(a[i]);
  3358     055F  0842               	movf	Lcd_Write_String@i,w
  3359     0560  073D               	addwf	Lcd_Write_String@a,w
  3360     0561  00C0               	movwf	??_Lcd_Write_String+1
  3361     0562  083E               	movf	Lcd_Write_String@a+1,w
  3362     0563  00BF               	movwf	??_Lcd_Write_String
  3363     0564  1803               	skipnc
  3364     0565  0ABF               	incf	??_Lcd_Write_String,f
  3365     0566  1FC2               	btfss	Lcd_Write_String@i,7
  3366     0567  2D69               	goto	u980
  3367     0568  03BF               	decf	??_Lcd_Write_String,f
  3368     0569                     u980:
  3369     0569  1283               	bcf	3,5	;RP0=0, select bank0
  3370     056A  1303               	bcf	3,6	;RP1=0, select bank0
  3371     056B  083F               	movf	??_Lcd_Write_String,w
  3372     056C  00C1               	movwf	??_Lcd_Write_String+2
  3373     056D  0841               	movf	??_Lcd_Write_String+2,w
  3374     056E  00FF               	movwf	btemp+1
  3375     056F  0840               	movf	??_Lcd_Write_String+1,w
  3376     0570  0084               	movwf	4
  3377     0571  120A  118A  26B7  120A  118A  	fcall	stringtab
  3378     0576  120A  118A  261E  120A  118A  	fcall	_Lcd_Write_Char
  3379     057B                     l1471:
  3380     057B  3001               	movlw	1
  3381     057C  1283               	bcf	3,5	;RP0=0, select bank0
  3382     057D  1303               	bcf	3,6	;RP1=0, select bank0
  3383     057E  07C2               	addwf	Lcd_Write_String@i,f
  3384     057F  1803               	skipnc
  3385     0580  0AC3               	incf	Lcd_Write_String@i+1,f
  3386     0581  3000               	movlw	0
  3387     0582  07C3               	addwf	Lcd_Write_String@i+1,f
  3388     0583                     l1473:
  3389     0583  0842               	movf	Lcd_Write_String@i,w
  3390     0584  073D               	addwf	Lcd_Write_String@a,w
  3391     0585  00C0               	movwf	??_Lcd_Write_String+1
  3392     0586  083E               	movf	Lcd_Write_String@a+1,w
  3393     0587  00BF               	movwf	??_Lcd_Write_String
  3394     0588  1803               	skipnc
  3395     0589  0ABF               	incf	??_Lcd_Write_String,f
  3396     058A  1FC2               	btfss	Lcd_Write_String@i,7
  3397     058B  2D8D               	goto	u990
  3398     058C  03BF               	decf	??_Lcd_Write_String,f
  3399     058D                     u990:
  3400     058D  1283               	bcf	3,5	;RP0=0, select bank0
  3401     058E  1303               	bcf	3,6	;RP1=0, select bank0
  3402     058F  083F               	movf	??_Lcd_Write_String,w
  3403     0590  00C1               	movwf	??_Lcd_Write_String+2
  3404     0591  0841               	movf	??_Lcd_Write_String+2,w
  3405     0592  00FF               	movwf	btemp+1
  3406     0593  0840               	movf	??_Lcd_Write_String+1,w
  3407     0594  0084               	movwf	4
  3408     0595  120A  118A  26B7  120A  118A  	fcall	stringtab
  3409     059A  3A00               	xorlw	0
  3410     059B  1D03               	skipz
  3411     059C  2D9E               	goto	u1001
  3412     059D  2D9F               	goto	u1000
  3413     059E                     u1001:
  3414     059E  2D5F               	goto	l1469
  3415     059F                     u1000:
  3416     059F                     l140:
  3417     059F  0008               	return
  3418     05A0                     __end_of_Lcd_Write_String:
  3419                           
  3420                           	psect	text17
  3421     061E                     __ptext17:	
  3422 ;; *************** function _Lcd_Write_Char *****************
  3423 ;; Defined at:
  3424 ;;		line 88 in file "peripherals/lcd.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;  a               1    wreg     unsigned char 
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;  a               1   28[BANK0 ] unsigned char 
  3429 ;;  y               1   27[BANK0 ] unsigned char 
  3430 ;;  temp            1   26[BANK0 ] unsigned char 
  3431 ;; Return value:  Size  Location     Type
  3432 ;;                  1    wreg      void 
  3433 ;; Registers used:
  3434 ;;		wreg, status,2, status,0, pclath, cstack
  3435 ;; Tracked objects:
  3436 ;;		On entry : 0/0
  3437 ;;		On exit  : 0/0
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3440 ;;      Params:         0       0       0       0       0
  3441 ;;      Locals:         0       3       0       0       0
  3442 ;;      Temps:          0       1       0       0       0
  3443 ;;      Totals:         0       4       0       0       0
  3444 ;;Total ram usage:        4 bytes
  3445 ;; Hardware stack levels used: 1
  3446 ;; Hardware stack levels required when called: 5
  3447 ;; This function calls:
  3448 ;;		_Lcd_Port
  3449 ;; This function is called by:
  3450 ;;		_Lcd_Write_String
  3451 ;;		_main
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455     061E                     _Lcd_Write_Char:	
  3456                           ;psect for function _Lcd_Write_Char
  3457                           
  3458                           
  3459                           ;incstack = 0
  3460                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3461                           ;Lcd_Write_Char@a stored from wreg
  3462     061E  1283               	bcf	3,5	;RP0=0, select bank0
  3463     061F  1303               	bcf	3,6	;RP1=0, select bank0
  3464     0620  00BC               	movwf	Lcd_Write_Char@a
  3465     0621                     l1385:
  3466                           
  3467                           ;peripherals/lcd.c: 89:     char temp, y;;peripherals/lcd.c: 90:     temp = a & 0x0F;
  3468     0621  083C               	movf	Lcd_Write_Char@a,w
  3469     0622  390F               	andlw	15
  3470     0623  00BA               	movwf	Lcd_Write_Char@temp
  3471                           
  3472                           ;peripherals/lcd.c: 91:     y = a & 0xF0;
  3473     0624  083C               	movf	Lcd_Write_Char@a,w
  3474     0625  39F0               	andlw	240
  3475     0626  00BB               	movwf	Lcd_Write_Char@y
  3476     0627                     l1387:
  3477                           
  3478                           ;peripherals/lcd.c: 93:     PORTEbits.RE2 = 1;
  3479     0627  1509               	bsf	9,2	;volatile
  3480     0628                     l1389:
  3481                           
  3482                           ;peripherals/lcd.c: 95:     Lcd_Port(y >> 4);
  3483     0628  083B               	movf	Lcd_Write_Char@y,w
  3484     0629  00B9               	movwf	??_Lcd_Write_Char
  3485     062A  3004               	movlw	4
  3486     062B                     u905:
  3487     062B  1003               	clrc
  3488     062C  0CB9               	rrf	??_Lcd_Write_Char,f
  3489     062D  3EFF               	addlw	-1
  3490     062E  1D03               	skipz
  3491     062F  2E2B               	goto	u905
  3492     0630  0839               	movf	??_Lcd_Write_Char,w
  3493     0631  120A  118A  2775  120A  118A  	fcall	_Lcd_Port
  3494     0636                     l1391:
  3495                           
  3496                           ;peripherals/lcd.c: 96:     PORTEbits.RE1 = 1;
  3497     0636  1283               	bcf	3,5	;RP0=0, select bank0
  3498     0637  1303               	bcf	3,6	;RP1=0, select bank0
  3499     0638  1489               	bsf	9,1	;volatile
  3500     0639                     l1393:
  3501                           
  3502                           ;peripherals/lcd.c: 97:     _delay((unsigned long)((4)*(20000000/4000000.0)));
  3503     0639  3005               	movlw	5
  3504     063A  1283               	bcf	3,5	;RP0=0, select bank0
  3505     063B  1303               	bcf	3,6	;RP1=0, select bank0
  3506     063C  00B9               	movwf	??_Lcd_Write_Char
  3507     063D                     u1887:
  3508     063D  0BB9               	decfsz	??_Lcd_Write_Char,f
  3509     063E  2E3D               	goto	u1887
  3510     063F  2E40               	nop2
  3511     0640                     l1395:
  3512                           
  3513                           ;peripherals/lcd.c: 98:     PORTEbits.RE1 = 0;
  3514     0640  1283               	bcf	3,5	;RP0=0, select bank0
  3515     0641  1303               	bcf	3,6	;RP1=0, select bank0
  3516     0642  1089               	bcf	9,1	;volatile
  3517     0643                     l1397:
  3518                           
  3519                           ;peripherals/lcd.c: 99:     Lcd_Port(temp);
  3520     0643  083A               	movf	Lcd_Write_Char@temp,w
  3521     0644  120A  118A  2775  120A  118A  	fcall	_Lcd_Port
  3522     0649                     l1399:
  3523                           
  3524                           ;peripherals/lcd.c: 100:     PORTEbits.RE1 = 1;
  3525     0649  1283               	bcf	3,5	;RP0=0, select bank0
  3526     064A  1303               	bcf	3,6	;RP1=0, select bank0
  3527     064B  1489               	bsf	9,1	;volatile
  3528     064C                     l1401:
  3529                           
  3530                           ;peripherals/lcd.c: 101:     _delay((unsigned long)((4)*(20000000/4000000.0)));
  3531     064C  3005               	movlw	5
  3532     064D  1283               	bcf	3,5	;RP0=0, select bank0
  3533     064E  1303               	bcf	3,6	;RP1=0, select bank0
  3534     064F  00B9               	movwf	??_Lcd_Write_Char
  3535     0650                     u1897:
  3536     0650  0BB9               	decfsz	??_Lcd_Write_Char,f
  3537     0651  2E50               	goto	u1897
  3538     0652  2E53               	nop2
  3539     0653                     l1403:
  3540                           
  3541                           ;peripherals/lcd.c: 102:     PORTEbits.RE1 = 0;
  3542     0653  1283               	bcf	3,5	;RP0=0, select bank0
  3543     0654  1303               	bcf	3,6	;RP1=0, select bank0
  3544     0655  1089               	bcf	9,1	;volatile
  3545     0656                     l134:
  3546     0656  0008               	return
  3547     0657                     __end_of_Lcd_Write_Char:
  3548                           
  3549                           	psect	text18
  3550     034D                     __ptext18:	
  3551 ;; *************** function _Lcd_Init *****************
  3552 ;; Defined at:
  3553 ;;		line 41 in file "peripherals/lcd.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;		None
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;		None
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  1    wreg      void 
  3560 ;; Registers used:
  3561 ;;		wreg, status,2, status,0, pclath, cstack
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3567 ;;      Params:         0       0       0       0       0
  3568 ;;      Locals:         0       0       0       0       0
  3569 ;;      Temps:          0       2       0       0       0
  3570 ;;      Totals:         0       2       0       0       0
  3571 ;;Total ram usage:        2 bytes
  3572 ;; Hardware stack levels used: 1
  3573 ;; Hardware stack levels required when called: 6
  3574 ;; This function calls:
  3575 ;;		_Lcd_Cmd
  3576 ;;		_Lcd_Port
  3577 ;; This function is called by:
  3578 ;;		_main
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582     034D                     _Lcd_Init:	
  3583                           ;psect for function _Lcd_Init
  3584                           
  3585     034D                     l1719:	
  3586                           ;incstack = 0
  3587                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3588                           
  3589                           
  3590                           ;peripherals/lcd.c: 42:     TRISD &= ~0xff;
  3591     034D  1683               	bsf	3,5	;RP0=1, select bank1
  3592     034E  1303               	bcf	3,6	;RP1=0, select bank1
  3593     034F  0188               	clrf	8	;volatile
  3594     0350                     l1721:
  3595                           
  3596                           ;peripherals/lcd.c: 43:     TRISE &= ~0x06;
  3597     0350  30F9               	movlw	249
  3598     0351  1283               	bcf	3,5	;RP0=0, select bank0
  3599     0352  1303               	bcf	3,6	;RP1=0, select bank0
  3600     0353  00BC               	movwf	??_Lcd_Init
  3601     0354  083C               	movf	??_Lcd_Init,w
  3602     0355  1683               	bsf	3,5	;RP0=1, select bank1
  3603     0356  1303               	bcf	3,6	;RP1=0, select bank1
  3604     0357  0589               	andwf	9,f	;volatile
  3605     0358                     l1723:
  3606                           
  3607                           ;peripherals/lcd.c: 44:     Lcd_Port(0x00);
  3608     0358  3000               	movlw	0
  3609     0359  120A  118A  2775  120A  118A  	fcall	_Lcd_Port
  3610     035E                     l1725:
  3611                           
  3612                           ;peripherals/lcd.c: 45:     _delay((unsigned long)((20)*(20000000/4000.0)));
  3613     035E  3082               	movlw	130
  3614     035F  1283               	bcf	3,5	;RP0=0, select bank0
  3615     0360  1303               	bcf	3,6	;RP1=0, select bank0
  3616     0361  00BD               	movwf	??_Lcd_Init+1
  3617     0362  30DD               	movlw	221
  3618     0363  00BC               	movwf	??_Lcd_Init
  3619     0364                     u1907:
  3620     0364  0BBC               	decfsz	??_Lcd_Init,f
  3621     0365  2B64               	goto	u1907
  3622     0366  0BBD               	decfsz	??_Lcd_Init+1,f
  3623     0367  2B64               	goto	u1907
  3624     0368                     l1727:
  3625                           
  3626                           ;peripherals/lcd.c: 46:     Lcd_Cmd(0x03);
  3627     0368  3003               	movlw	3
  3628     0369  120A  118A  26E2  120A  118A  	fcall	_Lcd_Cmd
  3629     036E                     l1729:
  3630                           
  3631                           ;peripherals/lcd.c: 47:     _delay((unsigned long)((5)*(20000000/4000.0)));
  3632     036E  3021               	movlw	33
  3633     036F  1283               	bcf	3,5	;RP0=0, select bank0
  3634     0370  1303               	bcf	3,6	;RP1=0, select bank0
  3635     0371  00BD               	movwf	??_Lcd_Init+1
  3636     0372  3075               	movlw	117
  3637     0373  00BC               	movwf	??_Lcd_Init
  3638     0374                     u1917:
  3639     0374  0BBC               	decfsz	??_Lcd_Init,f
  3640     0375  2B74               	goto	u1917
  3641     0376  0BBD               	decfsz	??_Lcd_Init+1,f
  3642     0377  2B74               	goto	u1917
  3643     0378  2B79               	nop2
  3644     0379                     l1731:
  3645                           
  3646                           ;peripherals/lcd.c: 48:     Lcd_Cmd(0x03);
  3647     0379  3003               	movlw	3
  3648     037A  120A  118A  26E2  120A  118A  	fcall	_Lcd_Cmd
  3649     037F                     l1733:
  3650                           
  3651                           ;peripherals/lcd.c: 49:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3652     037F  3041               	movlw	65
  3653     0380  1283               	bcf	3,5	;RP0=0, select bank0
  3654     0381  1303               	bcf	3,6	;RP1=0, select bank0
  3655     0382  00BD               	movwf	??_Lcd_Init+1
  3656     0383  30ED               	movlw	237
  3657     0384  00BC               	movwf	??_Lcd_Init
  3658     0385                     u1927:
  3659     0385  0BBC               	decfsz	??_Lcd_Init,f
  3660     0386  2B85               	goto	u1927
  3661     0387  0BBD               	decfsz	??_Lcd_Init+1,f
  3662     0388  2B85               	goto	u1927
  3663     0389  2B8A               	nop2
  3664     038A                     l1735:
  3665                           
  3666                           ;peripherals/lcd.c: 50:     Lcd_Cmd(0x03);
  3667     038A  3003               	movlw	3
  3668     038B  120A  118A  26E2  120A  118A  	fcall	_Lcd_Cmd
  3669     0390                     l1737:
  3670                           
  3671                           ;peripherals/lcd.c: 52:     Lcd_Cmd(0x02);
  3672     0390  3002               	movlw	2
  3673     0391  120A  118A  26E2  120A  118A  	fcall	_Lcd_Cmd
  3674     0396                     l1739:
  3675                           
  3676                           ;peripherals/lcd.c: 54:     Lcd_Cmd(0x02);
  3677     0396  3002               	movlw	2
  3678     0397  120A  118A  26E2  120A  118A  	fcall	_Lcd_Cmd
  3679     039C                     l1741:
  3680                           
  3681                           ;peripherals/lcd.c: 55:     Lcd_Cmd(0x08);
  3682     039C  3008               	movlw	8
  3683     039D  120A  118A  26E2  120A  118A  	fcall	_Lcd_Cmd
  3684     03A2                     l1743:
  3685                           
  3686                           ;peripherals/lcd.c: 57:     Lcd_Cmd(0x00);
  3687     03A2  3000               	movlw	0
  3688     03A3  120A  118A  26E2  120A  118A  	fcall	_Lcd_Cmd
  3689     03A8                     l1745:
  3690                           
  3691                           ;peripherals/lcd.c: 58:     Lcd_Cmd(0x0C);
  3692     03A8  300C               	movlw	12
  3693     03A9  120A  118A  26E2  120A  118A  	fcall	_Lcd_Cmd
  3694     03AE                     l1747:
  3695                           
  3696                           ;peripherals/lcd.c: 60:     Lcd_Cmd(0x00);
  3697     03AE  3000               	movlw	0
  3698     03AF  120A  118A  26E2  120A  118A  	fcall	_Lcd_Cmd
  3699     03B4                     l1749:
  3700                           
  3701                           ;peripherals/lcd.c: 61:     Lcd_Cmd(0x06);
  3702     03B4  3006               	movlw	6
  3703     03B5  120A  118A  26E2  120A  118A  	fcall	_Lcd_Cmd
  3704     03BA                     l122:
  3705     03BA  0008               	return
  3706     03BB                     __end_of_Lcd_Init:
  3707                           
  3708                           	psect	text19
  3709     07EE                     __ptext19:	
  3710 ;; *************** function _Lcd_Clear *****************
  3711 ;; Defined at:
  3712 ;;		line 64 in file "peripherals/lcd.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;		None
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;		None
  3717 ;; Return value:  Size  Location     Type
  3718 ;;                  1    wreg      void 
  3719 ;; Registers used:
  3720 ;;		wreg, status,2, status,0, pclath, cstack
  3721 ;; Tracked objects:
  3722 ;;		On entry : 0/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3726 ;;      Params:         0       0       0       0       0
  3727 ;;      Locals:         0       0       0       0       0
  3728 ;;      Temps:          0       0       0       0       0
  3729 ;;      Totals:         0       0       0       0       0
  3730 ;;Total ram usage:        0 bytes
  3731 ;; Hardware stack levels used: 1
  3732 ;; Hardware stack levels required when called: 6
  3733 ;; This function calls:
  3734 ;;		_Lcd_Cmd
  3735 ;; This function is called by:
  3736 ;;		_main
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740     07EE                     _Lcd_Clear:	
  3741                           ;psect for function _Lcd_Clear
  3742                           
  3743     07EE                     l1751:	
  3744                           ;incstack = 0
  3745                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3746                           
  3747                           
  3748                           ;peripherals/lcd.c: 66:     Lcd_Cmd(0);
  3749     07EE  3000               	movlw	0
  3750     07EF  120A  118A  26E2  120A  118A  	fcall	_Lcd_Cmd
  3751                           
  3752                           ;peripherals/lcd.c: 67:     Lcd_Cmd(1);
  3753     07F4  3001               	movlw	1
  3754     07F5  120A  118A  26E2  120A  118A  	fcall	_Lcd_Cmd
  3755     07FA                     l125:
  3756     07FA  0008               	return
  3757     07FB                     __end_of_Lcd_Clear:
  3758                           
  3759                           	psect	text20
  3760     06E2                     __ptext20:	
  3761 ;; *************** function _Lcd_Cmd *****************
  3762 ;; Defined at:
  3763 ;;		line 29 in file "peripherals/lcd.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;  a               1    wreg     unsigned char 
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;  a               1   27[BANK0 ] unsigned char 
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  1    wreg      void 
  3770 ;; Registers used:
  3771 ;;		wreg, status,2, status,0, pclath, cstack
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3777 ;;      Params:         0       0       0       0       0
  3778 ;;      Locals:         0       1       0       0       0
  3779 ;;      Temps:          0       2       0       0       0
  3780 ;;      Totals:         0       3       0       0       0
  3781 ;;Total ram usage:        3 bytes
  3782 ;; Hardware stack levels used: 1
  3783 ;; Hardware stack levels required when called: 5
  3784 ;; This function calls:
  3785 ;;		_Lcd_Port
  3786 ;; This function is called by:
  3787 ;;		_Lcd_Init
  3788 ;;		_Lcd_Clear
  3789 ;;		_Lcd_Set_Cursor
  3790 ;;		_Lcd_Shift_Right
  3791 ;;		_Lcd_Shift_Left
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795     06E2                     _Lcd_Cmd:	
  3796                           ;psect for function _Lcd_Cmd
  3797                           
  3798                           
  3799                           ;incstack = 0
  3800                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3801                           ;Lcd_Cmd@a stored from wreg
  3802     06E2  1283               	bcf	3,5	;RP0=0, select bank0
  3803     06E3  1303               	bcf	3,6	;RP1=0, select bank0
  3804     06E4  00BB               	movwf	Lcd_Cmd@a
  3805     06E5                     l1453:
  3806                           
  3807                           ;peripherals/lcd.c: 30:     TRISD &= ~0xff;
  3808     06E5  1683               	bsf	3,5	;RP0=1, select bank1
  3809     06E6  1303               	bcf	3,6	;RP1=0, select bank1
  3810     06E7  0188               	clrf	8	;volatile
  3811     06E8                     l1455:
  3812                           
  3813                           ;peripherals/lcd.c: 31:     TRISE &= ~0x06;
  3814     06E8  30F9               	movlw	249
  3815     06E9  1283               	bcf	3,5	;RP0=0, select bank0
  3816     06EA  1303               	bcf	3,6	;RP1=0, select bank0
  3817     06EB  00B9               	movwf	??_Lcd_Cmd
  3818     06EC  0839               	movf	??_Lcd_Cmd,w
  3819     06ED  1683               	bsf	3,5	;RP0=1, select bank1
  3820     06EE  1303               	bcf	3,6	;RP1=0, select bank1
  3821     06EF  0589               	andwf	9,f	;volatile
  3822     06F0                     l1457:
  3823                           
  3824                           ;peripherals/lcd.c: 34:     PORTEbits.RE2 = 0;
  3825     06F0  1283               	bcf	3,5	;RP0=0, select bank0
  3826     06F1  1303               	bcf	3,6	;RP1=0, select bank0
  3827     06F2  1109               	bcf	9,2	;volatile
  3828     06F3                     l1459:
  3829                           
  3830                           ;peripherals/lcd.c: 35:     Lcd_Port(a);
  3831     06F3  083B               	movf	Lcd_Cmd@a,w
  3832     06F4  120A  118A  2775  120A  118A  	fcall	_Lcd_Port
  3833     06F9                     l1461:
  3834                           
  3835                           ;peripherals/lcd.c: 36:     PORTEbits.RE1 = 1;
  3836     06F9  1283               	bcf	3,5	;RP0=0, select bank0
  3837     06FA  1303               	bcf	3,6	;RP1=0, select bank0
  3838     06FB  1489               	bsf	9,1	;volatile
  3839     06FC                     l1463:
  3840                           
  3841                           ;peripherals/lcd.c: 37:     _delay((unsigned long)((4)*(20000000/4000.0)));
  3842     06FC  301A               	movlw	26
  3843     06FD  1283               	bcf	3,5	;RP0=0, select bank0
  3844     06FE  1303               	bcf	3,6	;RP1=0, select bank0
  3845     06FF  00BA               	movwf	??_Lcd_Cmd+1
  3846     0700  30F7               	movlw	247
  3847     0701  00B9               	movwf	??_Lcd_Cmd
  3848     0702                     u1937:
  3849     0702  0BB9               	decfsz	??_Lcd_Cmd,f
  3850     0703  2F02               	goto	u1937
  3851     0704  0BBA               	decfsz	??_Lcd_Cmd+1,f
  3852     0705  2F02               	goto	u1937
  3853     0706  2F07               	nop2
  3854     0707                     l1465:
  3855                           
  3856                           ;peripherals/lcd.c: 38:     PORTEbits.RE1 = 0;
  3857     0707  1283               	bcf	3,5	;RP0=0, select bank0
  3858     0708  1303               	bcf	3,6	;RP1=0, select bank0
  3859     0709  1089               	bcf	9,1	;volatile
  3860     070A                     l119:
  3861     070A  0008               	return
  3862     070B                     __end_of_Lcd_Cmd:
  3863                           
  3864                           	psect	text21
  3865     0775                     __ptext21:	
  3866 ;; *************** function _Lcd_Port *****************
  3867 ;; Defined at:
  3868 ;;		line 14 in file "peripherals/lcd.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  a               1    wreg     unsigned char 
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;  a               1   24[BANK0 ] unsigned char 
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  1    wreg      void 
  3875 ;; Registers used:
  3876 ;;		wreg
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3882 ;;      Params:         0       0       0       0       0
  3883 ;;      Locals:         0       1       0       0       0
  3884 ;;      Temps:          0       0       0       0       0
  3885 ;;      Totals:         0       1       0       0       0
  3886 ;;Total ram usage:        1 bytes
  3887 ;; Hardware stack levels used: 1
  3888 ;; Hardware stack levels required when called: 4
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_Lcd_Cmd
  3893 ;;		_Lcd_Init
  3894 ;;		_Lcd_Write_Char
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898     0775                     _Lcd_Port:	
  3899                           ;psect for function _Lcd_Port
  3900                           
  3901                           
  3902                           ;incstack = 0
  3903                           ; Regs used in _Lcd_Port: [wreg]
  3904                           ;Lcd_Port@a stored from wreg
  3905     0775  1283               	bcf	3,5	;RP0=0, select bank0
  3906     0776  1303               	bcf	3,6	;RP1=0, select bank0
  3907     0777  00B8               	movwf	Lcd_Port@a
  3908     0778                     l1375:
  3909                           
  3910                           ;peripherals/lcd.c: 16:     if (a & 1) PORTDbits.RD4 = 1;
  3911     0778  1C38               	btfss	Lcd_Port@a,0
  3912     0779  2F7B               	goto	u861
  3913     077A  2F7C               	goto	u860
  3914     077B                     u861:
  3915     077B  2F7E               	goto	l108
  3916     077C                     u860:
  3917     077C                     l1377:
  3918     077C  1608               	bsf	8,4	;volatile
  3919     077D  2F7F               	goto	l109
  3920     077E                     l108:	
  3921                           ;peripherals/lcd.c: 17:     else PORTDbits.RD4 = 0;
  3922                           
  3923     077E  1208               	bcf	8,4	;volatile
  3924     077F                     l109:
  3925                           
  3926                           ;peripherals/lcd.c: 19:     if (a & 2) PORTDbits.RD5 = 1;
  3927     077F  1CB8               	btfss	Lcd_Port@a,1
  3928     0780  2F82               	goto	u871
  3929     0781  2F83               	goto	u870
  3930     0782                     u871:
  3931     0782  2F85               	goto	l110
  3932     0783                     u870:
  3933     0783                     l1379:
  3934     0783  1688               	bsf	8,5	;volatile
  3935     0784  2F86               	goto	l111
  3936     0785                     l110:	
  3937                           ;peripherals/lcd.c: 20:     else PORTDbits.RD5 = 0;
  3938                           
  3939     0785  1288               	bcf	8,5	;volatile
  3940     0786                     l111:
  3941                           
  3942                           ;peripherals/lcd.c: 22:     if (a & 4) PORTDbits.RD6 = 1;
  3943     0786  1D38               	btfss	Lcd_Port@a,2
  3944     0787  2F89               	goto	u881
  3945     0788  2F8A               	goto	u880
  3946     0789                     u881:
  3947     0789  2F8C               	goto	l112
  3948     078A                     u880:
  3949     078A                     l1381:
  3950     078A  1708               	bsf	8,6	;volatile
  3951     078B  2F8D               	goto	l113
  3952     078C                     l112:	
  3953                           ;peripherals/lcd.c: 23:     else PORTDbits.RD6 = 0;
  3954                           
  3955     078C  1308               	bcf	8,6	;volatile
  3956     078D                     l113:
  3957                           
  3958                           ;peripherals/lcd.c: 25:     if (a & 8) PORTDbits.RD7 = 1;
  3959     078D  1DB8               	btfss	Lcd_Port@a,3
  3960     078E  2F90               	goto	u891
  3961     078F  2F91               	goto	u890
  3962     0790                     u891:
  3963     0790  2F93               	goto	l114
  3964     0791                     u890:
  3965     0791                     l1383:
  3966     0791  1788               	bsf	8,7	;volatile
  3967     0792  2F94               	goto	l116
  3968     0793                     l114:	
  3969                           ;peripherals/lcd.c: 26:     else PORTDbits.RD7 = 0;
  3970                           
  3971     0793  1388               	bcf	8,7	;volatile
  3972     0794                     l116:
  3973     0794  0008               	return
  3974     0795                     __end_of_Lcd_Port:
  3975                           
  3976                           	psect	text22
  3977     07AC                     __ptext22:	
  3978 ;; *************** function _ISR *****************
  3979 ;; Defined at:
  3980 ;;		line 60 in file "main.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;		None
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;		None
  3985 ;; Return value:  Size  Location     Type
  3986 ;;                  1    wreg      void 
  3987 ;; Registers used:
  3988 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3989 ;; Tracked objects:
  3990 ;;		On entry : 0/0
  3991 ;;		On exit  : 0/0
  3992 ;;		Unchanged: 0/0
  3993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3994 ;;      Params:         0       0       0       0       0
  3995 ;;      Locals:         0       0       0       0       0
  3996 ;;      Temps:          0       4       0       0       0
  3997 ;;      Totals:         0       4       0       0       0
  3998 ;;Total ram usage:        4 bytes
  3999 ;; Hardware stack levels used: 1
  4000 ;; Hardware stack levels required when called: 3
  4001 ;; This function calls:
  4002 ;;		_UART_data_received
  4003 ;; This function is called by:
  4004 ;;		Interrupt level 1
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007                           
  4008     07AC                     _ISR:	
  4009                           ;psect for function _ISR
  4010                           
  4011     07AC                     i1l1861:
  4012                           
  4013                           ;main.c: 61:     if (RCIF) {
  4014     07AC  1E8C               	btfss	12,5	;volatile
  4015     07AD  2FAF               	goto	u163_21
  4016     07AE  2FB0               	goto	u163_20
  4017     07AF                     u163_21:
  4018     07AF  2FB8               	goto	i1l215
  4019     07B0                     u163_20:
  4020     07B0                     i1l1863:
  4021                           
  4022                           ;main.c: 62:         UART_data_received();
  4023     07B0  120A  118A  22D0  120A  118A  	fcall	_UART_data_received
  4024     07B5                     i1l1865:
  4025                           
  4026                           ;main.c: 63:         RCIF = 0;
  4027     07B5  1283               	bcf	3,5	;RP0=0, select bank0
  4028     07B6  1303               	bcf	3,6	;RP1=0, select bank0
  4029     07B7  128C               	bcf	12,5	;volatile
  4030     07B8                     i1l215:
  4031     07B8  0837               	movf	??_ISR+3,w
  4032     07B9  00FF               	movwf	btemp+1
  4033     07BA  0836               	movf	??_ISR+2,w
  4034     07BB  008A               	movwf	10
  4035     07BC  0835               	movf	??_ISR+1,w
  4036     07BD  0084               	movwf	4
  4037     07BE  0E34               	swapf	??_ISR,w
  4038     07BF  0083               	movwf	3
  4039     07C0  0EFE               	swapf	btemp,f
  4040     07C1  0E7E               	swapf	btemp,w
  4041     07C2  0009               	retfie
  4042     07C3                     __end_of_ISR:
  4043                           
  4044                           	psect	intentry
  4045     0004                     __pintentry:	
  4046                           ;incstack = 0
  4047                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4048                           
  4049     0004                     interrupt_function:
  4050     007E                     saved_w	set	btemp
  4051     0004  00FE               	movwf	btemp
  4052     0005  0E03               	swapf	3,w
  4053     0006  1283               	bcf	3,5	;RP0=0, select bank0
  4054     0007  1303               	bcf	3,6	;RP1=0, select bank0
  4055     0008  00B4               	movwf	??_ISR
  4056     0009  0804               	movf	4,w
  4057     000A  00B5               	movwf	??_ISR+1
  4058     000B  080A               	movf	10,w
  4059     000C  00B6               	movwf	??_ISR+2
  4060     000D  087F               	movf	btemp+1,w
  4061     000E  00B7               	movwf	??_ISR+3
  4062     000F  120A  118A  2FAC   	ljmp	_ISR
  4063                           
  4064                           	psect	text23
  4065     02D0                     __ptext23:	
  4066 ;; *************** function _UART_data_received *****************
  4067 ;; Defined at:
  4068 ;;		line 48 in file "communication/communication.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;		None
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;  received_pac   14    6[BANK0 ] struct .
  4073 ;;  data            1    5[BANK0 ] unsigned char 
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  1    wreg      void 
  4076 ;; Registers used:
  4077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4083 ;;      Params:         0       0       0       0       0
  4084 ;;      Locals:         0      15       0       0       0
  4085 ;;      Temps:          1       0       0       0       0
  4086 ;;      Totals:         1      15       0       0       0
  4087 ;;Total ram usage:       16 bytes
  4088 ;; Hardware stack levels used: 1
  4089 ;; Hardware stack levels required when called: 2
  4090 ;; This function calls:
  4091 ;;		_strcmp
  4092 ;;		i1___bmul
  4093 ;;		i1_memcpy
  4094 ;;		i1_memset
  4095 ;; This function is called by:
  4096 ;;		_ISR
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100     02D0                     _UART_data_received:	
  4101                           ;psect for function _UART_data_received
  4102                           
  4103     02D0                     i1l1683:	
  4104                           ;incstack = 0
  4105                           ; Regs used in _UART_data_received: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4106                           
  4107                           
  4108                           ;communication/communication.c: 50:     static char buffer[sizeof(shared_packet_t)];;com
      +                          munication/communication.c: 51:     static int index;;communication/communication.c: 53:
      +                               char data = RCREG;
  4109     02D0  1283               	bcf	3,5	;RP0=0, select bank0
  4110     02D1  1303               	bcf	3,6	;RP1=0, select bank0
  4111     02D2  081A               	movf	26,w	;volatile
  4112     02D3  00A5               	movwf	UART_data_received@data
  4113                           
  4114                           ;communication/communication.c: 54:         if (index < sizeof(shared_packet_t)) {
  4115     02D4  3000               	movlw	0
  4116     02D5  0247               	subwf	UART_data_received@index+1,w
  4117     02D6  300E               	movlw	14
  4118     02D7  1903               	skipnz
  4119     02D8  0246               	subwf	UART_data_received@index,w
  4120     02D9  1803               	skipnc
  4121     02DA  2ADC               	goto	u142_21
  4122     02DB  2ADD               	goto	u142_20
  4123     02DC                     u142_21:
  4124     02DC  2B4C               	goto	i1l82
  4125     02DD                     u142_20:
  4126     02DD                     i1l1685:
  4127                           
  4128                           ;communication/communication.c: 55:             buffer[index++] = data;
  4129     02DD  0846               	movf	UART_data_received@index,w
  4130     02DE  3E49               	addlw	(low (UART_data_received@buffer| 0))& (0+255)
  4131     02DF  0084               	movwf	4
  4132     02E0  0825               	movf	UART_data_received@data,w
  4133     02E1  1383               	bcf	3,7	;select IRP bank0
  4134     02E2  0080               	movwf	0
  4135     02E3                     i1l1687:
  4136     02E3  3001               	movlw	1
  4137     02E4  07C6               	addwf	UART_data_received@index,f
  4138     02E5  1803               	skipnc
  4139     02E6  0AC7               	incf	UART_data_received@index+1,f
  4140     02E7  3000               	movlw	0
  4141     02E8  07C7               	addwf	UART_data_received@index+1,f
  4142     02E9                     i1l1689:
  4143                           
  4144                           ;communication/communication.c: 57:             if (index >= sizeof(shared_packet_t)) {
  4145     02E9  3000               	movlw	0
  4146     02EA  0247               	subwf	UART_data_received@index+1,w
  4147     02EB  300E               	movlw	14
  4148     02EC  1903               	skipnz
  4149     02ED  0246               	subwf	UART_data_received@index,w
  4150     02EE  1C03               	skipc
  4151     02EF  2AF1               	goto	u143_21
  4152     02F0  2AF2               	goto	u143_20
  4153     02F1                     u143_21:
  4154     02F1  2B4C               	goto	i1l82
  4155     02F2                     u143_20:
  4156     02F2                     i1l1691:
  4157                           
  4158                           ;communication/communication.c: 58:                 if(receive_queue_elements < 3)
  4159     02F2  3003               	movlw	3
  4160     02F3  0248               	subwf	_receive_queue_elements,w
  4161     02F4  1803               	skipnc
  4162     02F5  2AF7               	goto	u144_21
  4163     02F6  2AF8               	goto	u144_20
  4164     02F7                     u144_21:
  4165     02F7  2B38               	goto	i1l1699
  4166     02F8                     u144_20:
  4167     02F8                     i1l1693:
  4168                           
  4169                           ;communication/communication.c: 59:                 {;communication/communication.c: 60:
      +                                               shared_packet_t received_packet;;communication/communication.c: 61:
      +                                               memcpy(&received_packet, buffer, sizeof(shared_packet_t));
  4170     02F8  3026               	movlw	(low (UART_data_received@received_packet| 0))& (0+255)
  4171     02F9  00F4               	movwf	i1memcpy@d1
  4172     02FA  3000               	movlw	0
  4173     02FB  00F5               	movwf	i1memcpy@d1+1
  4174     02FC  3049               	movlw	(low (UART_data_received@buffer| 0))& (0+255)
  4175     02FD  00F6               	movwf	i1memcpy@s1
  4176     02FE  3000               	movlw	0
  4177     02FF  00F7               	movwf	i1memcpy@s1+1
  4178     0300  300E               	movlw	14
  4179     0301  00F8               	movwf	i1memcpy@n
  4180     0302  3000               	movlw	0
  4181     0303  00F9               	movwf	i1memcpy@n+1
  4182     0304  120A  118A  2657  120A  118A  	fcall	i1_memcpy
  4183                           
  4184                           ;communication/communication.c: 62:                     if(!strcmp(received_packet.targe
      +                          t_device,"123A"))
  4185     0309  3013               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  4186     030A  00F0               	movwf	strcmp@s2
  4187     030B  302D               	movlw	(low ((UART_data_received@received_packet| 0+7)))& (0+255)
  4188     030C  120A  118A  268B  120A  118A  	fcall	_strcmp
  4189     0311  0870               	movf	?_strcmp,w
  4190     0312  0471               	iorwf	?_strcmp+1,w
  4191     0313  1D03               	btfss	3,2
  4192     0314  2B16               	goto	u145_21
  4193     0315  2B17               	goto	u145_20
  4194     0316                     u145_21:
  4195     0316  2B38               	goto	i1l1699
  4196     0317                     u145_20:
  4197     0317                     i1l1695:
  4198                           
  4199                           ;communication/communication.c: 63:                         memcpy(&receive_queue[receiv
      +                          e_queue_elements++], buffer, sizeof(shared_packet_t));
  4200     0317  300E               	movlw	14
  4201     0318  00F0               	movwf	i1___bmul@multiplicand
  4202     0319  1283               	bcf	3,5	;RP0=0, select bank0
  4203     031A  1303               	bcf	3,6	;RP1=0, select bank0
  4204     031B  0848               	movf	_receive_queue_elements,w
  4205     031C  120A  118A  27D9  120A  118A  	fcall	i1___bmul
  4206     0321  3E90               	addlw	(low (_receive_queue| (0+256)))& (0+255)
  4207     0322  00F4               	movwf	i1memcpy@d1
  4208     0323  3001               	movlw	1
  4209     0324  00F5               	movwf	i1memcpy@d1+1
  4210     0325  3049               	movlw	(low (UART_data_received@buffer| 0))& (0+255)
  4211     0326  00F6               	movwf	i1memcpy@s1
  4212     0327  3000               	movlw	0
  4213     0328  00F7               	movwf	i1memcpy@s1+1
  4214     0329  300E               	movlw	14
  4215     032A  00F8               	movwf	i1memcpy@n
  4216     032B  3000               	movlw	0
  4217     032C  00F9               	movwf	i1memcpy@n+1
  4218     032D  120A  118A  2657  120A  118A  	fcall	i1_memcpy
  4219     0332                     i1l1697:
  4220     0332  3001               	movlw	1
  4221     0333  00FA               	movwf	??_UART_data_received
  4222     0334  087A               	movf	??_UART_data_received,w
  4223     0335  1283               	bcf	3,5	;RP0=0, select bank0
  4224     0336  1303               	bcf	3,6	;RP1=0, select bank0
  4225     0337  07C8               	addwf	_receive_queue_elements,f
  4226     0338                     i1l1699:
  4227                           
  4228                           ;communication/communication.c: 69:                 index = 0;
  4229     0338  1283               	bcf	3,5	;RP0=0, select bank0
  4230     0339  1303               	bcf	3,6	;RP1=0, select bank0
  4231     033A  01C6               	clrf	UART_data_received@index
  4232     033B  01C7               	clrf	UART_data_received@index+1
  4233     033C                     i1l1701:
  4234                           
  4235                           ;communication/communication.c: 70:                 memset(buffer,0x00,sizeof(shared_pac
      +                          ket_t));
  4236     033C  3049               	movlw	(low (UART_data_received@buffer| 0))& (0+255)
  4237     033D  00F0               	movwf	i1memset@p1
  4238     033E  3000               	movlw	0
  4239     033F  00F1               	movwf	i1memset@p1+1
  4240     0340  3000               	movlw	0
  4241     0341  00F2               	movwf	i1memset@c
  4242     0342  00F3               	movwf	i1memset@c+1
  4243     0343  300E               	movlw	14
  4244     0344  00F4               	movwf	i1memset@n
  4245     0345  3000               	movlw	0
  4246     0346  00F5               	movwf	i1memset@n+1
  4247     0347  120A  118A  2754  120A  118A  	fcall	i1_memset
  4248     034C                     i1l82:
  4249     034C  0008               	return
  4250     034D                     __end_of_UART_data_received:
  4251                           
  4252                           	psect	text24
  4253     0754                     __ptext24:	
  4254 ;; *************** function i1_memset *****************
  4255 ;; Defined at:
  4256 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\memset.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;  p1              2    0[COMMON] PTR void 
  4259 ;;		 -> main@send_packet(14), UART_data_received@buffer(15), 
  4260 ;;  c               2    2[COMMON] int 
  4261 ;;  n               2    4[COMMON] unsigned int 
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;  p               2    6[COMMON] PTR unsigned char 
  4264 ;;		 -> main@send_packet(14), UART_data_received@buffer(15), 
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  1    wreg      PTR void 
  4267 ;; Registers used:
  4268 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4274 ;;      Params:         6       0       0       0       0
  4275 ;;      Locals:         2       0       0       0       0
  4276 ;;      Temps:          0       0       0       0       0
  4277 ;;      Totals:         8       0       0       0       0
  4278 ;;Total ram usage:        8 bytes
  4279 ;; Hardware stack levels used: 1
  4280 ;; This function calls:
  4281 ;;		Nothing
  4282 ;; This function is called by:
  4283 ;;		_UART_data_received
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287     0754                     i1_memset:	
  4288                           ;psect for function i1_memset
  4289                           
  4290     0754                     i1l1631:	
  4291                           ;incstack = 0
  4292                           ; Regs used in i1_memset: [wreg-fsr0h+status,2+status,0]
  4293                           
  4294     0754  0870               	movf	i1memset@p1,w
  4295     0755  00F6               	movwf	i1memset@p
  4296     0756  0871               	movf	i1memset@p1+1,w
  4297     0757  00F7               	movwf	i1memset@p+1
  4298     0758  2F66               	goto	i1l1637
  4299     0759                     i1l1633:
  4300     0759  0876               	movf	i1memset@p,w
  4301     075A  0084               	movwf	4
  4302     075B  1783               	bsf	3,7
  4303     075C  1C77               	btfss	i1memset@p+1,0
  4304     075D  1383               	bcf	3,7
  4305     075E  0872               	movf	i1memset@c,w
  4306     075F  0080               	movwf	0
  4307     0760                     i1l1635:
  4308     0760  3001               	movlw	1
  4309     0761  07F6               	addwf	i1memset@p,f
  4310     0762  1803               	skipnc
  4311     0763  0AF7               	incf	i1memset@p+1,f
  4312     0764  3000               	movlw	0
  4313     0765  07F7               	addwf	i1memset@p+1,f
  4314     0766                     i1l1637:
  4315     0766  3001               	movlw	1
  4316     0767  02F4               	subwf	i1memset@n,f
  4317     0768  3000               	movlw	0
  4318     0769  1C03               	skipc
  4319     076A  03F5               	decf	i1memset@n+1,f
  4320     076B  02F5               	subwf	i1memset@n+1,f
  4321     076C  0A74               	incf	i1memset@n,w
  4322     076D  1D03               	skipz
  4323     076E  2F73               	goto	u137_21
  4324     076F  0A75               	incf	i1memset@n+1,w
  4325     0770  1D03               	btfss	3,2
  4326     0771  2F73               	goto	u137_21
  4327     0772  2F74               	goto	u137_20
  4328     0773                     u137_21:
  4329     0773  2F59               	goto	i1l1633
  4330     0774                     u137_20:
  4331     0774                     i1l761:
  4332     0774  0008               	return
  4333     0775                     __end_ofi1_memset:
  4334                           
  4335                           	psect	text25
  4336     0657                     __ptext25:	
  4337 ;; *************** function i1_memcpy *****************
  4338 ;; Defined at:
  4339 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\memcpy.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  d1              2    4[COMMON] PTR void 
  4342 ;;		 -> main@packet(14), receive_queue(42), UART_data_received@received_packet(14), UART_send_packet@buffer(15), 
  4343 ;;  s1              2    6[COMMON] PTR const void 
  4344 ;;		 -> main@send_packet(14), receive_queue(42), UART_data_received@buffer(15), 
  4345 ;;  n               2    8[COMMON] unsigned int 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;  s               2    2[BANK0 ] PTR const unsigned char 
  4348 ;;		 -> main@send_packet(14), receive_queue(42), UART_data_received@buffer(15), 
  4349 ;;  d               2    0[BANK0 ] PTR unsigned char 
  4350 ;;		 -> main@packet(14), receive_queue(42), UART_data_received@received_packet(14), UART_send_packet@buffer(15), 
  4351 ;;  tmp             1    4[BANK0 ] unsigned char 
  4352 ;; Return value:  Size  Location     Type
  4353 ;;                  1    wreg      PTR void 
  4354 ;; Registers used:
  4355 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/0
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4361 ;;      Params:         6       0       0       0       0
  4362 ;;      Locals:         0       5       0       0       0
  4363 ;;      Temps:          0       0       0       0       0
  4364 ;;      Totals:         6       5       0       0       0
  4365 ;;Total ram usage:       11 bytes
  4366 ;; Hardware stack levels used: 1
  4367 ;; This function calls:
  4368 ;;		Nothing
  4369 ;; This function is called by:
  4370 ;;		_UART_data_received
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374     0657                     i1_memcpy:	
  4375                           ;psect for function i1_memcpy
  4376                           
  4377     0657                     i1l1621:	
  4378                           ;incstack = 0
  4379                           ; Regs used in i1_memcpy: [wreg-fsr0h+status,2+status,0]
  4380                           
  4381     0657  0876               	movf	i1memcpy@s1,w
  4382     0658  1283               	bcf	3,5	;RP0=0, select bank0
  4383     0659  1303               	bcf	3,6	;RP1=0, select bank0
  4384     065A  00A2               	movwf	i1memcpy@s
  4385     065B  0877               	movf	i1memcpy@s1+1,w
  4386     065C  00A3               	movwf	i1memcpy@s+1
  4387     065D  0874               	movf	i1memcpy@d1,w
  4388     065E  00A0               	movwf	i1memcpy@d
  4389     065F  0875               	movf	i1memcpy@d1+1,w
  4390     0660  00A1               	movwf	i1memcpy@d+1
  4391     0661  2E7C               	goto	i1l1629
  4392     0662                     i1l1623:
  4393     0662  0822               	movf	i1memcpy@s,w
  4394     0663  0084               	movwf	4
  4395     0664  1783               	bsf	3,7
  4396     0665  1C23               	btfss	i1memcpy@s+1,0
  4397     0666  1383               	bcf	3,7
  4398     0667  0800               	movf	0,w
  4399     0668  00A4               	movwf	i1memcpy@tmp
  4400     0669                     i1l1625:
  4401     0669  3001               	movlw	1
  4402     066A  07A2               	addwf	i1memcpy@s,f
  4403     066B  1803               	skipnc
  4404     066C  0AA3               	incf	i1memcpy@s+1,f
  4405     066D  3000               	movlw	0
  4406     066E  07A3               	addwf	i1memcpy@s+1,f
  4407     066F                     i1l1627:
  4408     066F  0820               	movf	i1memcpy@d,w
  4409     0670  0084               	movwf	4
  4410     0671  1783               	bsf	3,7
  4411     0672  1C21               	btfss	i1memcpy@d+1,0
  4412     0673  1383               	bcf	3,7
  4413     0674  0824               	movf	i1memcpy@tmp,w
  4414     0675  0080               	movwf	0
  4415     0676  3001               	movlw	1
  4416     0677  07A0               	addwf	i1memcpy@d,f
  4417     0678  1803               	skipnc
  4418     0679  0AA1               	incf	i1memcpy@d+1,f
  4419     067A  3000               	movlw	0
  4420     067B  07A1               	addwf	i1memcpy@d+1,f
  4421     067C                     i1l1629:
  4422     067C  3001               	movlw	1
  4423     067D  02F8               	subwf	i1memcpy@n,f
  4424     067E  3000               	movlw	0
  4425     067F  1C03               	skipc
  4426     0680  03F9               	decf	i1memcpy@n+1,f
  4427     0681  02F9               	subwf	i1memcpy@n+1,f
  4428     0682  0A78               	incf	i1memcpy@n,w
  4429     0683  1D03               	skipz
  4430     0684  2E89               	goto	u136_21
  4431     0685  0A79               	incf	i1memcpy@n+1,w
  4432     0686  1D03               	btfss	3,2
  4433     0687  2E89               	goto	u136_21
  4434     0688  2E8A               	goto	u136_20
  4435     0689                     u136_21:
  4436     0689  2E62               	goto	i1l1623
  4437     068A                     u136_20:
  4438     068A                     i1l755:
  4439     068A  0008               	return
  4440     068B                     __end_ofi1_memcpy:
  4441                           
  4442                           	psect	text26
  4443     07D9                     __ptext26:	
  4444 ;; *************** function i1___bmul *****************
  4445 ;; Defined at:
  4446 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;  multiplier      1    wreg     unsigned char 
  4449 ;;  multiplicand    1    0[COMMON] unsigned char 
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;  multiplier      1    3[COMMON] unsigned char 
  4452 ;;  product         1    2[COMMON] unsigned char 
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  1    wreg      unsigned char 
  4455 ;; Registers used:
  4456 ;;		wreg, status,2, status,0
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4462 ;;      Params:         1       0       0       0       0
  4463 ;;      Locals:         2       0       0       0       0
  4464 ;;      Temps:          1       0       0       0       0
  4465 ;;      Totals:         4       0       0       0       0
  4466 ;;Total ram usage:        4 bytes
  4467 ;; Hardware stack levels used: 1
  4468 ;; This function calls:
  4469 ;;		Nothing
  4470 ;; This function is called by:
  4471 ;;		_UART_data_received
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475     07D9                     i1___bmul:	
  4476                           ;psect for function i1___bmul
  4477                           
  4478                           
  4479                           ;incstack = 0
  4480                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  4481                           ;i1___bmul@multiplier stored from wreg
  4482     07D9  00F3               	movwf	i1___bmul@multiplier
  4483     07DA                     i1l1639:
  4484     07DA  01F2               	clrf	i1___bmul@product
  4485     07DB                     i1l1641:
  4486     07DB  1C73               	btfss	i1___bmul@multiplier,0
  4487     07DC  2FDE               	goto	u138_21
  4488     07DD  2FDF               	goto	u138_20
  4489     07DE                     u138_21:
  4490     07DE  2FE3               	goto	i1l1645
  4491     07DF                     u138_20:
  4492     07DF                     i1l1643:
  4493     07DF  0870               	movf	i1___bmul@multiplicand,w
  4494     07E0  00F1               	movwf	??i1___bmul
  4495     07E1  0871               	movf	??i1___bmul,w
  4496     07E2  07F2               	addwf	i1___bmul@product,f
  4497     07E3                     i1l1645:
  4498     07E3  1003               	clrc
  4499     07E4  0DF0               	rlf	i1___bmul@multiplicand,f
  4500     07E5                     i1l1647:
  4501     07E5  1003               	clrc
  4502     07E6  0CF3               	rrf	i1___bmul@multiplier,f
  4503     07E7  0873               	movf	i1___bmul@multiplier,w
  4504     07E8  1D03               	btfss	3,2
  4505     07E9  2FEB               	goto	u139_21
  4506     07EA  2FEC               	goto	u139_20
  4507     07EB                     u139_21:
  4508     07EB  2FDB               	goto	i1l1641
  4509     07EC                     u139_20:
  4510     07EC                     i1l1649:
  4511     07EC  0872               	movf	i1___bmul@product,w
  4512     07ED                     i1l327:
  4513     07ED  0008               	return
  4514     07EE                     __end_ofi1___bmul:
  4515                           
  4516                           	psect	text27
  4517     068B                     __ptext27:	
  4518 ;; *************** function _strcmp *****************
  4519 ;; Defined at:
  4520 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strcmp.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;  s1              1    wreg     PTR const unsigned char 
  4523 ;;		 -> received_packet.target_device(5), UART_data_received@received_packet(14), 
  4524 ;;  s2              1    0[COMMON] PTR const unsigned char 
  4525 ;;		 -> STR_3(5), 
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;  s1              1    5[COMMON] PTR const unsigned char 
  4528 ;;		 -> received_packet.target_device(5), UART_data_received@received_packet(14), 
  4529 ;;  r               1    4[COMMON] char 
  4530 ;; Return value:  Size  Location     Type
  4531 ;;                  2    0[COMMON] int 
  4532 ;; Registers used:
  4533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4534 ;; Tracked objects:
  4535 ;;		On entry : 0/0
  4536 ;;		On exit  : 0/0
  4537 ;;		Unchanged: 0/0
  4538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4539 ;;      Params:         2       0       0       0       0
  4540 ;;      Locals:         2       0       0       0       0
  4541 ;;      Temps:          2       0       0       0       0
  4542 ;;      Totals:         6       0       0       0       0
  4543 ;;Total ram usage:        6 bytes
  4544 ;; Hardware stack levels used: 2
  4545 ;; This function calls:
  4546 ;;		Nothing
  4547 ;; This function is called by:
  4548 ;;		_UART_data_received
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552     068B                     _strcmp:	
  4553                           ;psect for function _strcmp
  4554                           
  4555                           
  4556                           ;incstack = 0
  4557 ;; using string table level
  4558                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+pclath]
  4559                           ;strcmp@s1 stored from wreg
  4560     068B  00F5               	movwf	strcmp@s1
  4561     068C                     i1l1439:
  4562     068C  2E95               	goto	i1l1445
  4563     068D                     i1l1441:
  4564     068D  3001               	movlw	1
  4565     068E  00F2               	movwf	??_strcmp
  4566     068F  0872               	movf	??_strcmp,w
  4567     0690  07F5               	addwf	strcmp@s1,f
  4568     0691                     i1l1443:
  4569     0691  3001               	movlw	1
  4570     0692  00F2               	movwf	??_strcmp
  4571     0693  0872               	movf	??_strcmp,w
  4572     0694  07F0               	addwf	strcmp@s2,f
  4573     0695                     i1l1445:
  4574     0695  0870               	movf	strcmp@s2,w
  4575     0696  0084               	movwf	4
  4576     0697  120A  118A  26C1  120A  118A  	fcall	stringdir
  4577     069C  00F2               	movwf	??_strcmp
  4578     069D  0875               	movf	strcmp@s1,w
  4579     069E  0084               	movwf	4
  4580     069F  1383               	bcf	3,7	;select IRP bank0
  4581     06A0  0800               	movf	0,w
  4582     06A1  00F3               	movwf	??_strcmp+1
  4583     06A2  0872               	movf	??_strcmp,w
  4584     06A3  0273               	subwf	??_strcmp+1,w
  4585     06A4  00F4               	movwf	strcmp@r
  4586     06A5  0874               	movf	strcmp@r,w
  4587     06A6  1D03               	btfss	3,2
  4588     06A7  2EA9               	goto	u96_21
  4589     06A8  2EAA               	goto	u96_20
  4590     06A9                     u96_21:
  4591     06A9  2EB1               	goto	i1l1449
  4592     06AA                     u96_20:
  4593     06AA                     i1l1447:
  4594     06AA  0875               	movf	strcmp@s1,w
  4595     06AB  0084               	movwf	4
  4596     06AC  0800               	movf	0,w
  4597     06AD  1D03               	btfss	3,2
  4598     06AE  2EB0               	goto	u97_21
  4599     06AF  2EB1               	goto	u97_20
  4600     06B0                     u97_21:
  4601     06B0  2E8D               	goto	i1l1441
  4602     06B1                     u97_20:
  4603     06B1                     i1l1449:
  4604     06B1  0874               	movf	strcmp@r,w
  4605     06B2  00F0               	movwf	?_strcmp
  4606     06B3  01F1               	clrf	?_strcmp+1
  4607     06B4  1BF0               	btfsc	?_strcmp,7
  4608     06B5  03F1               	decf	?_strcmp+1,f
  4609     06B6                     i1l769:
  4610     06B6  0008               	return
  4611     06B7                     __end_of_strcmp:
  4612     007E                     btemp	set	126	;btemp
  4613     007E                     wtemp0	set	126
  4614                           
  4615                           	psect	idloc
  4616                           
  4617                           ;Config register IDLOC0 @ 0x2000
  4618                           ;	unspecified, using default values
  4619     2000                     	org	8192
  4620     2000  3FFF               	dw	16383
  4621                           
  4622                           ;Config register IDLOC1 @ 0x2001
  4623                           ;	unspecified, using default values
  4624     2001                     	org	8193
  4625     2001  3FFF               	dw	16383
  4626                           
  4627                           ;Config register IDLOC2 @ 0x2002
  4628                           ;	unspecified, using default values
  4629     2002                     	org	8194
  4630     2002  3FFF               	dw	16383
  4631                           
  4632                           ;Config register IDLOC3 @ 0x2003
  4633                           ;	unspecified, using default values
  4634     2003                     	org	8195
  4635     2003  3FFF               	dw	16383
  4636                           
  4637                           	psect	config
  4638                           
  4639                           ;Config register CONFIG @ 0x2007
  4640                           ;	Oscillator Selection bits
  4641                           ;	FOSC = HS, HS oscillator
  4642                           ;	Watchdog Timer Enable bit
  4643                           ;	WDTE = OFF, WDT disabled
  4644                           ;	Power-up Timer Enable bit
  4645                           ;	PWRTE = ON, PWRT enabled
  4646                           ;	Brown-out Reset Enable bit
  4647                           ;	BOREN = ON, BOR enabled
  4648                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4649                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  4650                           ;	Data EEPROM Memory Code Protection bit
  4651                           ;	CPD = OFF, Data EEPROM code protection off
  4652                           ;	Flash Program Memory Write Enable bits
  4653                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4654                           ;	In-Circuit Debugger Mode bit
  4655                           ;	DEBUG = 0x1, unprogrammed default
  4656                           ;	Flash Program Memory Code Protection bit
  4657                           ;	CP = OFF, Code protection off
  4658     2007                     	org	8199
  4659     2007  3FF2               	dw	16370

Data Sizes:
    Strings     15
    Constant    12
    Data        0
    BSS         62
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     38      56
    BANK1            80     65      65
    BANK3            96     28      70
    BANK2            96      0       0

Pointer List with Targets:

    strncpy@from	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_5(CODE[6]), STR_1(CODE[5]), 

    strncpy@to	PTR unsigned char  size(1) Largest target is 14
		 -> main@send_packet(BANK3[14]), 

    strncpy@cp	PTR unsigned char  size(1) Largest target is 14
		 -> main@send_packet(BANK3[14]), 

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 14
		 -> received_packet.target_device(COMMON[5]), UART_data_received@received_packet(BANK0[14]), 

    memset@p1	PTR void  size(2) Largest target is 15
		 -> main@send_packet(BANK3[14]), UART_data_received@buffer(BANK0[15]), 

    memset@p	PTR unsigned char  size(2) Largest target is 15
		 -> main@send_packet(BANK3[14]), UART_data_received@buffer(BANK0[15]), 

    memcpy@d1	PTR void  size(2) Largest target is 42
		 -> main@packet(BANK3[14]), receive_queue(BANK3[42]), UART_data_received@received_packet(BANK0[14]), UART_send_packet@buffer(BANK1[15]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 42
		 -> main@packet(BANK3[14]), receive_queue(BANK3[42]), UART_data_received@received_packet(BANK0[14]), UART_send_packet@buffer(BANK1[15]), 

    memcpy@s1	PTR const void  size(2) Largest target is 42
		 -> main@send_packet(BANK3[14]), receive_queue(BANK3[42]), UART_data_received@buffer(BANK0[15]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 42
		 -> main@send_packet(BANK3[14]), receive_queue(BANK3[42]), UART_data_received@buffer(BANK0[15]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 50
		 -> main@packet(BANK3[14]), STR_4(CODE[4]), Lcd_Write_Int@buffer(BANK1[50]), 

    received_queue_get_packet@packet	PTR struct . size(1) Largest target is 14
		 -> main@packet(BANK3[14]), 

    sp__memset	PTR void  size(2) Largest target is 15
		 -> main@send_packet(BANK3[14]), UART_data_received@buffer(BANK0[15]), 

    sp__memcpy	PTR void  size(2) Largest target is 42
		 -> main@packet(BANK3[14]), receive_queue(BANK3[42]), UART_data_received@received_packet(BANK0[14]), UART_send_packet@buffer(BANK1[15]), 

    sp__strncpy	PTR unsigned char  size(1) Largest target is 14
		 -> main@send_packet(BANK3[14]), 

    UART_send_packet@packet_to_send	PTR struct . size(1) Largest target is 14
		 -> main@send_packet(BANK3[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_UART_data_received
    _UART_data_received->i1_memcpy
    i1_memcpy->i1___bmul

Critical Paths under _main in BANK0

    _main->_Lcd_Write_Int
    _received_queue_get_packet->_memcpy
    _communication_init->___aldiv
    _UART_send_packet->_memcpy
    _memcpy->___bmul
    _Lcd_Write_Int->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in BANK0

    _ISR->_UART_data_received
    _UART_data_received->i1_memcpy

Critical Paths under _main in BANK1

    _main->_Lcd_Write_Int
    _received_queue_get_packet->_memcpy
    _communication_init->___aldiv
    _UART_send_packet->_memcpy

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0    9517
                                             62 BANK1      3     3      0
                                              0 BANK3     28    28      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Write_Char
                      _Lcd_Write_Int
                   _Lcd_Write_String
                   _UART_send_packet
                 _communication_init
                 _communication_task
                             _memset
          _received_queue_get_packet
      _received_queue_thereispending
                            _strncpy
 ---------------------------------------------------------------------------------
 (1) _received_queue_thereispending                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _received_queue_get_packet                            1     1      0    1269
                                             34 BANK0      1     1      0
                             ___bmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     125
                                             24 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _memset                                               8     2      6     476
                                             24 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _communication_task                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _communication_init                                   8     4      4     788
                                             33 BANK0      4     0      4
                                              6 BANK1      4     4      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     653
                                             24 BANK0      9     1      8
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 (1) _UART_send_packet                                    18    18      0    1973
                                              5 BANK1     18    18      0
                        _UART_TxByte
                             _memcpy
                            _strncpy
 ---------------------------------------------------------------------------------
 (1) _strncpy                                              6     3      3     569
                                             24 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6    1074
                                             28 BANK0      6     0      6
                                              0 BANK1      5     5      0
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _UART_TxByte                                          2     2      0      22
                                             24 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Int                                       64    62      2    3073
                                             36 BANK0      2     0      2
                                              0 BANK1     62    62      0
                   _Lcd_Write_String
                            ___awdiv
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     337
                                             24 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     340
                                             24 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     478
                                             24 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     535
                                             29 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                             25 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                             28 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                             25 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                             24 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0     783
                                             20 BANK0      4     4      0
                 _UART_data_received
 ---------------------------------------------------------------------------------
 (6) _UART_data_received                                  16    16      0     783
                                             10 COMMON     1     1      0
                                              5 BANK0     15    15      0
                             _strcmp
                           i1___bmul
                           i1_memcpy
                           i1_memset
 ---------------------------------------------------------------------------------
 (7) i1_memset                                             8     2      6     152
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (7) i1_memcpy                                            11     5      6     255
                                              4 COMMON     6     0      6
                                              0 BANK0      5     5      0
                           i1___bmul (ARG)
 ---------------------------------------------------------------------------------
 (7) i1___bmul                                             4     3      1      87
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (8) _strcmp                                               6     4      2     216
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_Int
     _Lcd_Write_String
       _Lcd_Write_Char
     ___awdiv
     ___lwdiv
     ___lwmod
   _Lcd_Write_String
   _UART_send_packet
     _UART_TxByte
     _memcpy
       ___bmul (ARG)
     _strncpy
   _communication_init
     ___aldiv
   _communication_task
   _memset
   _received_queue_get_packet
     ___bmul
     _memcpy
   _received_queue_thereispending
   _strncpy

 _ISR (ROOT)
   _UART_data_received
     _strcmp
     i1___bmul
     i1_memcpy
       i1___bmul (ARG)
     i1_memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      CC       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     26      38       5       70.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     41      41       7       81.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60     1C      46       9       72.9%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      CC      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue May 09 22:17:55 2023

                                    pc 0002                         ___bmul@product 003A  
                                   l70 07FB                                     l64 04CD  
                                   l67 047A                                     l92 07CD  
                                   l85 0FFF                                     l95 07D8  
                                   l89 0730                           ___awdiv@sign 003E  
                                   fsr 0004                    ?_UART_data_received 0070  
                                  l110 0785                                    l111 0786  
                                  l112 078C                                    l113 078D  
                                  l114 0793                                    l122 03BA  
                                  l116 0794                                    l108 077E  
                                  l140 059F                                    l109 077F  
                                  l125 07FA                                    l134 0656  
                                  l119 070A                                    l161 0143  
                                  l327 07AB                                    l454 0423  
                                  l366 015C                                    l376 020B  
                                  l573 0559                                    l583 061D  
                                  l761 0753                                    l755 0513  
                                  l779 05E1                                    _ISR 07AC  
                                  u910 05C3                                    u911 05C2  
                                  u920 05CA                                    u905 062B  
                                  u921 05C9                                    u930 05E1  
                                  u931 05E0                                    u860 077C  
                                  u861 077B                                    u870 0783  
                                  u950 07D2                                    u871 0782  
                                  u951 07D1                                    u880 078A  
                                  u881 0789                                    u890 0791  
                                  u891 0790                                    u980 0569  
                                  u990 058D                                    fsr0 0004  
                                  indf 0000                                   ?_ISR 0070  
                                 l2001 022E                                   l2011 024F  
                                 l2003 0231                                   l2021 0283  
                                 l2013 0253                                   l2005 0236  
                                 l2031 02BB                                   l2023 0289  
                                 l2015 0265                                   l2007 0239  
                                 l1401 064C                                   l2033 02C1  
                                 l2025 028E                                   l2017 026B  
                                 l2009 023F                                   l1403 0653  
                                 l2027 029F                                   l2019 0279  
                                 l1413 05C4                                   l1405 05A3  
                                 l2029 02A5                                   l1431 07C6  
                                 l1415 05CB                                   l1407 05A6  
                                 l1601 05EA                                   l1433 07CC  
                                 l1417 05CF                                   l1409 05AC  
                                 l1531 03BE                                   l1611 0606  
                                 l1603 05ED                                   l1435 07D2  
                                 l1419 05D3                                   l1381 078A  
                                 l1461 06F9                                   l1453 06E5  
                                 l1541 03D2                                   l1533 03C2  
                                 l1613 060C                                   l1605 05F4  
                                 l1437 07D6                                   l1383 0791  
                                 l1375 0778                                   l1463 06FC  
                                 l1455 06E8                                   l1391 0636  
                                 l1471 057B                                   l1551 03E8  
                                 l1543 03D6                                   l1535 03C7  
                                 l1615 0613                                   l1607 05F8  
                                 l1703 0731                                   l1711 0FF6  
                                 l1377 077C                                   l1465 0707  
                                 l1457 06F0                                   l1721 0350  
                                 l1393 0639                                   l1385 0621  
                                 l1473 0583                                   l1561 0408  
                                 l1553 03EC                                   l1545 03D8  
                                 l1537 03C9                                   l1529 03BB  
                                 l1609 05FC                                   l1617 0619  
                                 l1705 0738                                   l1481 07A1  
                                 l1379 0783                                   l1459 06F3  
                                 l1731 0379                                   l1723 0358  
                                 l1395 0640                                   l1387 0627  
                                 l1467 055A                                   l1563 040F  
                                 l1555 03F0                                   l1547 03DE  
                                 l1539 03CD                                   l1707 073F  
                                 l1483 07A3                                   l1475 0798  
                                 l1741 039C                                   l1733 037F  
                                 l1725 035E                                   l1397 0643  
                                 l1389 0628                                   l1469 055F  
                                 l1557 0401                                   l1549 03E1  
                                 l1565 0415                                   l1581 0528  
                                 l1573 0514                                   l1901 01C0  
                                 l1709 0745                                   l1485 07AA  
                                 l1477 0799                                   l1751 07EE  
                                 l1743 03A2                                   l1735 038A  
                                 l1727 0368                                   l1719 034D  
                                 l1399 0649                                   l1567 041A  
                                 l1559 0407                                   l1591 0548  
                                 l1583 052C                                   l1575 0518  
                                 l1911 01EA                                   l1903 01CE  
                                 l1479 079D                                   l1745 03A8  
                                 l1737 0390                                   l1729 036E  
                                 l1569 041F                                   l1593 054F  
                                 l1585 0530                                   l1577 051E  
                                 l1921 0497                                   l1913 01F5  
                                 l1905 01D1                                   l1747 03AE  
                                 l1739 0396                                   l1587 0541  
                                 l1579 0521                                   l1595 0555  
                                 l1931 04BC                                   l1923 04AE  
                                 l1907 01DB                                   l1749 03B4  
                                 l1589 0547                                   l1933 04C4  
                                 l1917 047E                                   l1909 01E3  
                                 l1941 0477                                   l1599 05E2  
                                 l1951 002D                                   l1871 04F0  
                                 l1919 0486                                   l1943 0478  
                                 l1935 0424                                   l1961 004C  
                                 l1953 0039                                   l1873 04F6  
                                 l1929 04B2                                   l1881 014D  
                                 l1945 0479                                   l1937 042A  
                                 l1971 00A9                                   l1963 0058  
                                 l1955 003B                                   l1875 0503  
                                 l1867 04CE                                   l1891 0186  
                                 l1883 0161                                   l1939 042E  
                                 l1947 070E                                   l1981 00C2  
                                 l1973 00AE                                   l1965 0078  
                                 l1957 0042                                   l1869 04E7  
                                 l1893 018B                                   l1885 016C  
                                 l1877 0144                                   l1949 0713  
                                 l1991 0137                                   l1983 00F8  
                                 l1975 00B4                                   l1967 0080  
                                 l1959 0047                                   l1895 019A  
                                 l1887 0172                                   l1879 0147  
                                 l1993 0138                                   l1985 00FE  
                                 l1977 00BA                                   l1969 00A3  
                                 l1897 01A0                                   l1889 017C  
                                 l1987 012D                                   l1979 00BF  
                                 l1899 01AE                                   l1995 020C  
                                 l1989 0135                                   l1997 0220  
                                 l1999 022B                                   STR_1 06D9  
                                 STR_3 06D9                                   STR_4 06DE  
                                 STR_5 06D3                                   u1000 059F  
                                 u1001 059E                                   u1010 079D  
                                 u1011 079C                                   u1020 07AA  
                                 u1021 07A9                                   u1210 0415  
                                 u1130 03C2                                   u1211 0414  
                                 u1131 03C1                                   u1220 041A  
                                 u1140 03CD                                   u1300 05EA  
                                 u1221 0419                                   u1205 0409  
                                 u1141 03CC                                   u1301 05E9  
                                 u1150 03DE                                   u1230 051E  
                                 u1151 03DD                                   u1231 051D  
                                 u1320 05FC                                   u1321 05FB  
                                 u1170 03F0                                   u1250 0530  
                                 u1330 0606                                   u1171 03EF  
                                 u1251 052F                                   u1331 0605  
                                 u1315 05EE                                   u1165 03E2  
                                 u1245 0522                                   u1190 0401  
                                 u1270 0541                                   u1350 0619  
                                 u1191 0400                                   u1271 0540  
                                 u1351 0618                                   u1335 0602  
                                 u1185 03F1                                   u1265 0531  
                                 u1345 060D                                   u1290 0555  
                                 u1195 03FD                                   u1291 0554  
                                 u1275 053D                                   u1460 0753  
                                 u1285 0549                                   u1461 0752  
                                 u1710 01C0                                   u1470 0FFE  
                                 u1711 01BF                                   u1471 0FFC  
                                 u1800 0047                                   u1640 0513  
                                 u1480 0FFF                                   u1801 0046  
                                 u1641 0512                                   u1705 01A3  
                                 u1810 00A9                                   u1730 01E3  
                                 u1650 014D                                   u1811 00A8  
                                 u1731 01E2                                   u1715 01BC  
                                 u1651 014C                                   u1820 00AE  
                                 u1740 01EA                                   u1660 0161  
                                 u1821 00AD                                   u1741 01E9  
                                 u1725 01D2                                   u1661 0160  
                                 u1830 012D                                   u1750 04CD  
                                 u1670 0186                                   u1831 012C  
                                 u1751 04CC                                   u1671 0185  
                                 _PIE1 008C                                   u1840 0135  
                                 u1760 044A                                   u1841 0134  
                                 u1690 01A0                                   u1770 0713  
                                 u1850 023F                                   u1907 0364  
                                 u1835 0129                                   u1691 019F  
                                 u1771 0712                                   u1851 023E  
                                 u1780 0040                                   u1860 0283  
                                 u1917 0374                                   u1781 003E  
                                 u1685 018D                                   u1765 0445  
                                 u1861 0282                                   u1790 0041  
                                 u1927 0385                                   u1937 0702  
                                 u1877 0273                                   u1887 063D  
                                 u1897 0650                                   _RCIF 0065  
                                 _PIR1 000C                                   i1l82 034C  
                 ??_UART_data_received 007A        received_queue_get_packet@packet 0042  
                    ?_Lcd_Write_String 003D                                   _main 020C  
                                 btemp 007E                                   start 0012  
                   ??_Lcd_Write_String 003F                        __end_of_Lcd_Cmd 070B  
                    ___bmul@multiplier 003B                                  ??_ISR 0034  
            _received_queue_get_packet 070B                        __end_of___aldiv 020C  
                                ?_main 0070                        __end_of___awdiv 0424  
                      ___awdiv@divisor 0038                        __end_of___lwdiv 055A  
                                i1l215 07B8                                  i1l327 07ED  
                      __end_of___lwmod 061E                             i1memcpy@d1 0074  
                                i1l761 0774                                  i1l755 068A  
                                i1l769 06B6                             i1memcpy@s1 0076  
                      ___awdiv@counter 003D                                  _RCREG 001A  
                                _RCSTA 0018                                  _SPBRG 0099  
                                _PORTB 0006                                  _PORTD 0008  
                                _TRISB 0086                                  _TRISC 0087  
                                _TRISD 0088                                  _TRISE 0089  
                                u96_20 06AA                                  u96_21 06A9  
                                u97_20 06B1                                  u97_21 06B0  
                                _TXREG 0019                                  _TXSTA 0098  
                           i1memset@p1 0070        ??_received_queue_thereispending 0038  
                     __end_ofi1___bmul 07EE               UART_data_received@buffer 0049  
                                pclath 000A                                  status 0003  
                                wtemp0 007E                       __end_ofi1_memcpy 068B  
                     __end_ofi1_memset 0775                        __end_of_strncpy 05E2  
                     __end_of_Lcd_Init 03BB                       __end_of_Lcd_Port 0795  
                      __initialization 0015                           __end_of_main 02D0  
                               ??_main 00DE                       ___awdiv@dividend 003A  
                               i1l1441 068D                                 i1l1443 0691  
                               i1l1445 0695                                 i1l1621 0657  
                               i1l1701 033C                                 i1l1447 06AA  
                               i1l1439 068C                                 i1l1623 0662  
                               i1l1631 0754                                 i1l1449 06B1  
                               i1l1641 07DB                                 i1l1625 0669  
                               i1l1633 0759                                 i1l1643 07DF  
                               i1l1627 066F                                 i1l1635 0760  
                               i1l1645 07E3                                 i1l1629 067C  
                               i1l1637 0766                                 i1l1647 07E5  
                               i1l1639 07DA                                 i1l1649 07EC  
                               i1l1691 02F2                                 i1l1683 02D0  
                               i1l1693 02F8                                 i1l1685 02DD  
                               i1l1861 07AC                                 i1l1695 0317  
                               i1l1687 02E3                                 i1l1863 07B0  
                               i1l1697 0332                                 i1l1689 02E9  
                               i1l1865 07B5                                 i1l1699 0338  
                               u142_20 02DD                                 u142_21 02DC  
                               u143_20 02F2                                 u143_21 02F1  
                               u136_20 068A                                 u144_20 02F8  
                               u136_21 0689                                 u144_21 02F7  
                               u137_20 0774                                 u145_20 0317  
                               _INTCON 000B                                 u137_21 0773  
                               u145_21 0316                                 u138_20 07DF  
                               u138_21 07DE                                 u139_20 07EC  
                               u163_20 07B0                                 u139_21 07EB  
                               u163_21 07AF                              ??_Lcd_Cmd 0039  
                          i1memcpy@tmp 0024                           ?_UART_TxByte 0070  
                               ___bmul 0795                              ??___aldiv 0040  
                            ??___awdiv 003C                              ??___lwdiv 003C  
                            ??___lwmod 003C      UART_data_received@received_packet 0026  
                               _memcpy 04CE                                 _keypad 06C7  
                               _memset 0731                       ___awdiv@quotient 003F  
                               _strcmp 068B                  __end_of_Lcd_Write_Int 0144  
                               saved_w 007E                       Lcd_Write_Int@val 0044  
                            ??_strncpy 003B  __end_of_received_queue_thereispending 1000  
        _received_queue_thereispending 0FF6                __end_of__initialization 0029  
                    __end_of_Lcd_Clear 07FB                    ___bmul@multiplicand 0038  
                     _UART_send_packet 047B                         __pcstackCOMMON 0070  
               UART_data_received@data 0025                              ?i1___bmul 0070  
                   _communication_init 0424                     _communication_task 07FB  
                            ?i1_memcpy 0074                              ?i1_memset 0070  
                            ?_Lcd_Init 0070                              ?_Lcd_Port 0070  
                     i1___bmul@product 0072                    ?_communication_init 0041  
                  ?_communication_task 0070                         Lcd_Write_Int@i 00DC  
                       Lcd_Write_Int@n 00D8                         Lcd_Write_Int@t 00DA  
                           __pbssBANK0 0046                             __pbssBANK3 0190  
                           __pmaintext 020C                                ?___bmul 0038  
                 ??_communication_init 00A6                   ??_communication_task 0038  
                           __pintentry 0004                                ?_memcpy 003C  
                              ?_memset 0038                             ??i1___bmul 0071  
                              ?_strcmp 0070                             ??i1_memcpy 007A  
                           ??i1_memset 0076      __end_of_received_queue_get_packet 0731  
                           ??_Lcd_Init 003C                             ??_Lcd_Port 0038  
                           __stringtab 06B7                         _Lcd_Write_Char 061E  
                              _Lcd_Cmd 06E2             communication_init@baudrate 0041  
                    UART_send_packet@i 00B5         ?_received_queue_thereispending 0070  
                              ___aldiv 0144                                ___awdiv 03BB  
               UART_send_packet@buffer 00A5                                ___lwdiv 0514  
                              ___lwmod 05E2         UART_send_packet@packet_to_send 00B4  
                              __ptext1 0FF6                                __ptext2 070B  
                              __ptext3 0795                                __ptext4 0731  
                              __ptext5 07FB                                __ptext6 0424  
                              __ptext7 0144                                __ptext8 047B  
                              __ptext9 05A0                       ___aldiv@dividend 003C  
                  i1___bmul@multiplier 0073                   Numpad_Read@oldKeyVal 007C  
                              clrloop0 0FEF                 __end_of_Lcd_Write_Char 0657  
                              _strncpy 05A0                   end_of_initialization 0029  
                        _receive_queue 0190                                memcpy@d 00A1  
                              memcpy@n 0040                                memcpy@s 00A3  
                              memset@c 003A                                memset@n 003C  
                              memset@p 003E                       ___aldiv@quotient 00A2  
                            Lcd_Port@a 0038                                strcmp@r 0074  
                            _PORTDbits 0008                              _PORTEbits 0009  
               _receive_queue_elements 0048               __end_of_UART_send_packet 04CE  
                      ?_Lcd_Write_Char 0070                      Lcd_Write_String@a 003D  
                    Lcd_Write_String@i 0042                             main@packet 01BA  
                            _Lcd_Clear 07EE                         __end_of___bmul 07AC  
                            i1memcpy@d 0020                              i1memcpy@n 0078  
                            i1memcpy@s 0022                       _Lcd_Write_String 055A  
                            i1memset@c 0072                              i1memset@n 0074  
                            i1memset@p 0076                         __end_of_memcpy 0514  
                       __end_of_keypad 06D3                         __end_of_memset 0754  
              UART_data_received@index 0046                         __end_of_strcmp 06B7  
                  start_initialization 0015                            __end_of_ISR 07C3  
                           ?_Lcd_Clear 0070                               ??___bmul 0039  
                             ??_memcpy 0042                        Lcd_Write_Char@a 003C  
                             ??_memset 003E                        Lcd_Write_Char@y 003B  
                      Lcd_Write_Int@n1 00D6                               ??_strcmp 0072  
                          __pbssCOMMON 007B                              ___latbits 0002  
                        __pcstackBANK0 0020                          __pcstackBANK1 00A0  
                        __pcstackBANK3 01BA                           _is_line_busy 007B  
                             ?_Lcd_Cmd 0070                       ___lwdiv@dividend 003A  
                             ?___aldiv 0038                               ?___awdiv 0038  
                             ?___lwdiv 0038                               ?___lwmod 0038  
                            __pstrings 06B7                          _Lcd_Write_Int 002D  
                     ___lwdiv@quotient 003D             __end_of_UART_data_received 034D  
           ?_received_queue_get_packet 0070                               ?_strncpy 0038  
                      ___aldiv@divisor 0038                      interrupt_function 0004  
                      ___aldiv@counter 00A0                              clear_ram0 0FEE  
                          strncpy@from 0038                            strncpy@size 0039  
                        ??_UART_TxByte 0038                  i1___bmul@multiplicand 0070  
                             Lcd_Cmd@a 003B                            ??_Lcd_Clear 003C  
                             i1___bmul 07D9                            __stringbase 06C6  
                       ?_Lcd_Write_Int 0044                               i1_memcpy 0657  
                     ??_Lcd_Write_Char 0039                               i1_memset 0754  
                             _Lcd_Init 034D                      ?_UART_send_packet 0070  
                             _Lcd_Port 0775                     ??_UART_send_packet 0042  
             __end_of_Lcd_Write_String 05A0                              memcpy@tmp 00A0  
                  __end_of_UART_TxByte 07D9                     __end_of__stringtab 06C7  
                      ___lwdiv@divisor 0038                        ___lwdiv@counter 003F  
                             __ptext10 04CE                               __ptext11 07C3  
                             __ptext20 06E2                               __ptext12 002D  
                             __ptext21 0775                               __ptext13 05E2  
                             __ptext22 07AC                               __ptext14 0514  
                             __ptext23 02D0                               __ptext15 03BB  
                             __ptext24 0754                               __ptext16 055A  
                             __ptext25 0657                               __ptext17 061E  
                             __ptext26 07D9                               __ptext18 034D  
                             __ptext27 068B                               __ptext19 07EE  
                      main@send_packet 01C8                        UART_TxByte@byte 0039  
                      ??_Lcd_Write_Int 00A0                               memcpy@d1 003C  
                             memcpy@s1 003E                    Lcd_Write_Int@buffer 00A3  
                             memset@p1 0038                     Lcd_Write_Char@temp 003A  
                             intlevel1 0000                       ___lwmod@dividend 003A  
                            stringcode 06C1                            _UART_TxByte 07C3  
                            strncpy@cp 003D                              strncpy@to 003C  
                   Lcd_Write_Int@isNeg 00D5                               strcmp@s1 0075  
                             strcmp@s2 0070                        ___lwmod@divisor 0038  
                      ___lwmod@counter 003D                               stringdir 06C1  
                             stringtab 06B7                           ___aldiv@sign 00A1  
          ??_received_queue_get_packet 0042             __end_of_communication_init 047B  
           __end_of_communication_task 07FC                     _UART_data_received 02D0  
