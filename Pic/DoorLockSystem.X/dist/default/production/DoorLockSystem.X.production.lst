

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon May 08 23:12:26 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    43                           	dabs	1,0x7E,2
    44     0000                     
    45                           ; Version 2.40
    46                           ; Generated 17/11/2021 GMT
    47                           ; 
    48                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F877A Definitions
    78                           ; 
    79                           ; SFR Addresses
    80     0000                     	;# 
    81     0001                     	;# 
    82     0002                     	;# 
    83     0003                     	;# 
    84     0004                     	;# 
    85     0005                     	;# 
    86     0006                     	;# 
    87     0007                     	;# 
    88     0008                     	;# 
    89     0009                     	;# 
    90     000A                     	;# 
    91     000B                     	;# 
    92     000C                     	;# 
    93     000D                     	;# 
    94     000E                     	;# 
    95     000E                     	;# 
    96     000F                     	;# 
    97     0010                     	;# 
    98     0011                     	;# 
    99     0012                     	;# 
   100     0013                     	;# 
   101     0014                     	;# 
   102     0015                     	;# 
   103     0015                     	;# 
   104     0016                     	;# 
   105     0017                     	;# 
   106     0018                     	;# 
   107     0019                     	;# 
   108     001A                     	;# 
   109     001B                     	;# 
   110     001B                     	;# 
   111     001C                     	;# 
   112     001D                     	;# 
   113     001E                     	;# 
   114     001F                     	;# 
   115     0081                     	;# 
   116     0085                     	;# 
   117     0086                     	;# 
   118     0087                     	;# 
   119     0088                     	;# 
   120     0089                     	;# 
   121     008C                     	;# 
   122     008D                     	;# 
   123     008E                     	;# 
   124     0091                     	;# 
   125     0092                     	;# 
   126     0093                     	;# 
   127     0094                     	;# 
   128     0098                     	;# 
   129     0099                     	;# 
   130     009C                     	;# 
   131     009D                     	;# 
   132     009E                     	;# 
   133     009F                     	;# 
   134     010C                     	;# 
   135     010D                     	;# 
   136     010E                     	;# 
   137     010F                     	;# 
   138     018C                     	;# 
   139     018D                     	;# 
   140     0000                     	;# 
   141     0001                     	;# 
   142     0002                     	;# 
   143     0003                     	;# 
   144     0004                     	;# 
   145     0005                     	;# 
   146     0006                     	;# 
   147     0007                     	;# 
   148     0008                     	;# 
   149     0009                     	;# 
   150     000A                     	;# 
   151     000B                     	;# 
   152     000C                     	;# 
   153     000D                     	;# 
   154     000E                     	;# 
   155     000E                     	;# 
   156     000F                     	;# 
   157     0010                     	;# 
   158     0011                     	;# 
   159     0012                     	;# 
   160     0013                     	;# 
   161     0014                     	;# 
   162     0015                     	;# 
   163     0015                     	;# 
   164     0016                     	;# 
   165     0017                     	;# 
   166     0018                     	;# 
   167     0019                     	;# 
   168     001A                     	;# 
   169     001B                     	;# 
   170     001B                     	;# 
   171     001C                     	;# 
   172     001D                     	;# 
   173     001E                     	;# 
   174     001F                     	;# 
   175     0081                     	;# 
   176     0085                     	;# 
   177     0086                     	;# 
   178     0087                     	;# 
   179     0088                     	;# 
   180     0089                     	;# 
   181     008C                     	;# 
   182     008D                     	;# 
   183     008E                     	;# 
   184     0091                     	;# 
   185     0092                     	;# 
   186     0093                     	;# 
   187     0094                     	;# 
   188     0098                     	;# 
   189     0099                     	;# 
   190     009C                     	;# 
   191     009D                     	;# 
   192     009E                     	;# 
   193     009F                     	;# 
   194     010C                     	;# 
   195     010D                     	;# 
   196     010E                     	;# 
   197     010F                     	;# 
   198     018C                     	;# 
   199     018D                     	;# 
   200     0000                     	;# 
   201     0001                     	;# 
   202     0002                     	;# 
   203     0003                     	;# 
   204     0004                     	;# 
   205     0005                     	;# 
   206     0006                     	;# 
   207     0007                     	;# 
   208     0008                     	;# 
   209     0009                     	;# 
   210     000A                     	;# 
   211     000B                     	;# 
   212     000C                     	;# 
   213     000D                     	;# 
   214     000E                     	;# 
   215     000E                     	;# 
   216     000F                     	;# 
   217     0010                     	;# 
   218     0011                     	;# 
   219     0012                     	;# 
   220     0013                     	;# 
   221     0014                     	;# 
   222     0015                     	;# 
   223     0015                     	;# 
   224     0016                     	;# 
   225     0017                     	;# 
   226     0018                     	;# 
   227     0019                     	;# 
   228     001A                     	;# 
   229     001B                     	;# 
   230     001B                     	;# 
   231     001C                     	;# 
   232     001D                     	;# 
   233     001E                     	;# 
   234     001F                     	;# 
   235     0081                     	;# 
   236     0085                     	;# 
   237     0086                     	;# 
   238     0087                     	;# 
   239     0088                     	;# 
   240     0089                     	;# 
   241     008C                     	;# 
   242     008D                     	;# 
   243     008E                     	;# 
   244     0091                     	;# 
   245     0092                     	;# 
   246     0093                     	;# 
   247     0094                     	;# 
   248     0098                     	;# 
   249     0099                     	;# 
   250     009C                     	;# 
   251     009D                     	;# 
   252     009E                     	;# 
   253     009F                     	;# 
   254     010C                     	;# 
   255     010D                     	;# 
   256     010E                     	;# 
   257     010F                     	;# 
   258     018C                     	;# 
   259     018D                     	;# 
   260     0000                     	;# 
   261     0001                     	;# 
   262     0002                     	;# 
   263     0003                     	;# 
   264     0004                     	;# 
   265     0005                     	;# 
   266     0006                     	;# 
   267     0007                     	;# 
   268     0008                     	;# 
   269     0009                     	;# 
   270     000A                     	;# 
   271     000B                     	;# 
   272     000C                     	;# 
   273     000D                     	;# 
   274     000E                     	;# 
   275     000E                     	;# 
   276     000F                     	;# 
   277     0010                     	;# 
   278     0011                     	;# 
   279     0012                     	;# 
   280     0013                     	;# 
   281     0014                     	;# 
   282     0015                     	;# 
   283     0015                     	;# 
   284     0016                     	;# 
   285     0017                     	;# 
   286     0018                     	;# 
   287     0019                     	;# 
   288     001A                     	;# 
   289     001B                     	;# 
   290     001B                     	;# 
   291     001C                     	;# 
   292     001D                     	;# 
   293     001E                     	;# 
   294     001F                     	;# 
   295     0081                     	;# 
   296     0085                     	;# 
   297     0086                     	;# 
   298     0087                     	;# 
   299     0088                     	;# 
   300     0089                     	;# 
   301     008C                     	;# 
   302     008D                     	;# 
   303     008E                     	;# 
   304     0091                     	;# 
   305     0092                     	;# 
   306     0093                     	;# 
   307     0094                     	;# 
   308     0098                     	;# 
   309     0099                     	;# 
   310     009C                     	;# 
   311     009D                     	;# 
   312     009E                     	;# 
   313     009F                     	;# 
   314     010C                     	;# 
   315     010D                     	;# 
   316     010E                     	;# 
   317     010F                     	;# 
   318     018C                     	;# 
   319     018D                     	;# 
   320     0000                     	;# 
   321     0001                     	;# 
   322     0002                     	;# 
   323     0003                     	;# 
   324     0004                     	;# 
   325     0005                     	;# 
   326     0006                     	;# 
   327     0007                     	;# 
   328     0008                     	;# 
   329     0009                     	;# 
   330     000A                     	;# 
   331     000B                     	;# 
   332     000C                     	;# 
   333     000D                     	;# 
   334     000E                     	;# 
   335     000E                     	;# 
   336     000F                     	;# 
   337     0010                     	;# 
   338     0011                     	;# 
   339     0012                     	;# 
   340     0013                     	;# 
   341     0014                     	;# 
   342     0015                     	;# 
   343     0015                     	;# 
   344     0016                     	;# 
   345     0017                     	;# 
   346     0018                     	;# 
   347     0019                     	;# 
   348     001A                     	;# 
   349     001B                     	;# 
   350     001B                     	;# 
   351     001C                     	;# 
   352     001D                     	;# 
   353     001E                     	;# 
   354     001F                     	;# 
   355     0081                     	;# 
   356     0085                     	;# 
   357     0086                     	;# 
   358     0087                     	;# 
   359     0088                     	;# 
   360     0089                     	;# 
   361     008C                     	;# 
   362     008D                     	;# 
   363     008E                     	;# 
   364     0091                     	;# 
   365     0092                     	;# 
   366     0093                     	;# 
   367     0094                     	;# 
   368     0098                     	;# 
   369     0099                     	;# 
   370     009C                     	;# 
   371     009D                     	;# 
   372     009E                     	;# 
   373     009F                     	;# 
   374     010C                     	;# 
   375     010D                     	;# 
   376     010E                     	;# 
   377     010F                     	;# 
   378     018C                     	;# 
   379     018D                     	;# 
   380                           
   381                           	psect	strings
   382     0600                     __pstrings:
   383     0600                     stringtab:
   384     0600                     __stringtab:
   385                           
   386                           ;	String table - string pointers are 1 byte each
   387     0600  1BFF               	btfsc	btemp+1,7
   388     0601  2E0A               	ljmp	stringcode
   389     0602  1383               	bcf	3,7
   390     0603  187F               	btfsc	btemp+1,0
   391     0604  1783               	bsf	3,7
   392     0605  0800               	movf	0,w
   393     0606  0A84               	incf	4,f
   394     0607  1903               	skipnz
   395     0608  0AFF               	incf	btemp+1,f
   396     0609  0008               	return
   397     060A                     stringcode:
   398     060A                     stringdir:
   399     060A  3006               	movlw	high stringdir
   400     060B  008A               	movwf	10
   401     060C  0804               	movf	4,w
   402     060D  0A84               	incf	4,f
   403     060E  0782               	addwf	2,f
   404     060F                     __stringbase:
   405     060F  3400               	retlw	0
   406     0610                     __end_of__stringtab:
   407     0610                     _keypad:
   408     0610  342A               	retlw	42
   409     0611  3407               	retlw	7
   410     0612  3404               	retlw	4
   411     0613  3401               	retlw	1
   412     0614  3400               	retlw	0
   413     0615  3408               	retlw	8
   414     0616  3405               	retlw	5
   415     0617  3402               	retlw	2
   416     0618  3423               	retlw	35
   417     0619  3409               	retlw	9
   418     061A  3406               	retlw	6
   419     061B  3403               	retlw	3
   420     061C                     __end_of_keypad:
   421     0006                     _PORTB	set	6
   422     0008                     _PORTD	set	8
   423     0009                     _PORTEbits	set	9
   424     0008                     _PORTDbits	set	8
   425     0019                     _TXREG	set	25
   426     000C                     _PIR1	set	12
   427     001A                     _RCREG	set	26
   428     000B                     _INTCON	set	11
   429     0018                     _RCSTA	set	24
   430     0065                     _RCIF	set	101
   431     0086                     _TRISB	set	134
   432     0089                     _TRISE	set	137
   433     0088                     _TRISD	set	136
   434     0087                     _TRISC	set	135
   435     008C                     _PIE1	set	140
   436     0099                     _SPBRG	set	153
   437     0098                     _TXSTA	set	152
   438     061C                     STR_3:
   439     061C  3472               	retlw	114	;'r'
   440     061D  3461               	retlw	97	;'a'
   441     061E  3473               	retlw	115	;'s'
   442     061F  3470               	retlw	112	;'p'
   443     0620  3469               	retlw	105	;'i'
   444     0621  3400               	retlw	0
   445     0622                     STR_1:
   446     0622  3431               	retlw	49	;'1'
   447     0623  3432               	retlw	50	;'2'
   448     0624  3433               	retlw	51	;'3'
   449     0625  3441               	retlw	65	;'A'
   450     0626  3400               	retlw	0
   451     0627                     STR_2:
   452     0627  3461               	retlw	97	;'a'
   453     0628  3462               	retlw	98	;'b'
   454     0629  3420               	retlw	32	;' '
   455     062A  3400               	retlw	0
   456                           
   457                           	psect	cinit
   458     0013                     start_initialization:	
   459                           ; #config settings
   460                           
   461     0013                     __initialization:
   462                           
   463                           ; Clear objects allocated to BANK0
   464     0013  1283               	bcf	3,5	;RP0=0, select bank0
   465     0014  1303               	bcf	3,6	;RP1=0, select bank0
   466     0015  01C9               	clrf	__pbssBANK0& (0+127)
   467     0016  01CA               	clrf	(__pbssBANK0+1)& (0+127)
   468     0017  01CB               	clrf	(__pbssBANK0+2)& (0+127)
   469     0018  01CC               	clrf	(__pbssBANK0+3)& (0+127)
   470     0019  01CD               	clrf	(__pbssBANK0+4)& (0+127)
   471                           
   472                           ; Clear objects allocated to BANK1
   473     001A  1383               	bcf	3,7	;select IRP bank0
   474     001B  30DB               	movlw	low __pbssBANK1
   475     001C  0084               	movwf	4
   476     001D  30EA               	movlw	low (__pbssBANK1+15)
   477     001E  120A  118A  2717  120A  118A  	fcall	clear_ram0
   478                           
   479                           ; Clear objects allocated to BANK3
   480     0023  1783               	bsf	3,7	;select IRP bank2
   481     0024  3090               	movlw	low __pbssBANK3
   482     0025  0084               	movwf	4
   483     0026  30BA               	movlw	low (__pbssBANK3+42)
   484     0027  120A  118A  2717  120A  118A  	fcall	clear_ram0
   485     002C                     end_of_initialization:	
   486                           ;End of C runtime variable initialization code
   487                           
   488     002C                     __end_of__initialization:
   489     002C  0183               	clrf	3
   490     002D  120A  118A  2A12   	ljmp	_main	;jump to C main() function
   491                           
   492                           	psect	bssBANK0
   493     0049                     __pbssBANK0:
   494     0049                     UART_data_received@index:
   495     0049                     	ds	2
   496     004B                     Numpad_Read@oldKeyVal:
   497     004B                     	ds	1
   498     004C                     _receive_queue_elements:
   499     004C                     	ds	1
   500     004D                     _is_line_busy:
   501     004D                     	ds	1
   502                           
   503                           	psect	bssBANK1
   504     00DB                     __pbssBANK1:
   505     00DB                     UART_data_received@buffer:
   506     00DB                     	ds	15
   507                           
   508                           	psect	bssBANK3
   509     0190                     __pbssBANK3:
   510     0190                     _receive_queue:
   511     0190                     	ds	42
   512                           
   513                           	psect	clrtext
   514     0717                     clear_ram0:	
   515                           ;	Called with FSR containing the base address, and
   516                           ;	W with the last address+1
   517                           
   518     0717  0064               	clrwdt	;clear the watchdog before getting into this loop
   519     0718                     clrloop0:
   520     0718  0180               	clrf	0	;clear RAM location pointed to by FSR
   521     0719  0A84               	incf	4,f	;increment pointer
   522     071A  0604               	xorwf	4,w	;XOR with final address
   523     071B  1903               	btfsc	3,2	;have we reached the end yet?
   524     071C  3400               	retlw	0	;all done for this memory range, return
   525     071D  0604               	xorwf	4,w	;XOR again to restore value
   526     071E  2F18               	goto	clrloop0	;do the next byte
   527                           
   528                           	psect	cstackBANK3
   529     01BA                     __pcstackBANK3:
   530     01BA                     main@received_count:
   531                           
   532                           ; 2 bytes @ 0x0
   533     01BA                     	ds	2
   534     01BC                     main@packet:
   535                           
   536                           ; 14 bytes @ 0x2
   537     01BC                     	ds	14
   538     01CA                     main@send_packet:
   539                           
   540                           ; 14 bytes @ 0x10
   541     01CA                     	ds	14
   542                           
   543                           	psect	cstackBANK1
   544     00A0                     __pcstackBANK1:
   545     00A0                     Lcd_Write_Int@buffer:
   546                           
   547                           ; 50 bytes @ 0x0
   548     00A0                     	ds	50
   549     00D2                     Lcd_Write_Int@isNeg:
   550                           
   551                           ; 1 bytes @ 0x32
   552     00D2                     	ds	1
   553     00D3                     Lcd_Write_Int@n1:
   554                           
   555                           ; 2 bytes @ 0x33
   556     00D3                     	ds	2
   557     00D5                     Lcd_Write_Int@n:
   558                           
   559                           ; 2 bytes @ 0x35
   560     00D5                     	ds	2
   561     00D7                     Lcd_Write_Int@t:
   562                           
   563                           ; 2 bytes @ 0x37
   564     00D7                     	ds	2
   565     00D9                     Lcd_Write_Int@i:
   566                           
   567                           ; 2 bytes @ 0x39
   568     00D9                     	ds	2
   569                           
   570                           	psect	cstackCOMMON
   571     0070                     __pcstackCOMMON:
   572     0070                     ?_UART_TxByte:
   573     0070                     ?_UART_send_packet:	
   574                           ; 1 bytes @ 0x0
   575                           
   576     0070                     ?_communication_task:	
   577                           ; 1 bytes @ 0x0
   578                           
   579     0070                     ?_UART_data_received:	
   580                           ; 1 bytes @ 0x0
   581                           
   582     0070                     ?_received_queue_thereispending:	
   583                           ; 1 bytes @ 0x0
   584                           
   585     0070                     ?_received_queue_get_packet:	
   586                           ; 1 bytes @ 0x0
   587                           
   588     0070                     ?_Lcd_Port:	
   589                           ; 1 bytes @ 0x0
   590                           
   591     0070                     ?_Lcd_Cmd:	
   592                           ; 1 bytes @ 0x0
   593                           
   594     0070                     ?_Lcd_Init:	
   595                           ; 1 bytes @ 0x0
   596                           
   597     0070                     ?_Lcd_Clear:	
   598                           ; 1 bytes @ 0x0
   599                           
   600     0070                     ?_Lcd_Write_Char:	
   601                           ; 1 bytes @ 0x0
   602                           
   603     0070                     ?_main:	
   604                           ; 1 bytes @ 0x0
   605                           
   606     0070                     ?_ISR:	
   607                           ; 1 bytes @ 0x0
   608                           
   609     0070                     ?i1___bmul:	
   610                           ; 1 bytes @ 0x0
   611                           
   612     0070                     i1___bmul@multiplicand:	
   613                           ; 1 bytes @ 0x0
   614                           
   615                           
   616                           ; 1 bytes @ 0x0
   617     0070                     	ds	1
   618     0071                     ??i1___bmul:
   619                           
   620                           ; 1 bytes @ 0x1
   621     0071                     	ds	1
   622     0072                     i1___bmul@product:
   623                           
   624                           ; 1 bytes @ 0x2
   625     0072                     	ds	1
   626     0073                     i1___bmul@multiplier:
   627                           
   628                           ; 1 bytes @ 0x3
   629     0073                     	ds	1
   630     0074                     ?i1_memcpy:
   631     0074                     i1memcpy@d1:	
   632                           ; 1 bytes @ 0x4
   633                           
   634                           
   635                           ; 2 bytes @ 0x4
   636     0074                     	ds	2
   637     0076                     i1memcpy@s1:
   638                           
   639                           ; 2 bytes @ 0x6
   640     0076                     	ds	2
   641     0078                     i1memcpy@n:
   642                           
   643                           ; 2 bytes @ 0x8
   644     0078                     	ds	2
   645     007A                     ??_UART_data_received:
   646     007A                     ??i1_memcpy:	
   647                           ; 1 bytes @ 0xA
   648                           
   649                           
   650                           ; 1 bytes @ 0xA
   651     007A                     	ds	1
   652     007B                     UART_data_received@data:
   653                           
   654                           ; 1 bytes @ 0xB
   655     007B                     	ds	1
   656                           
   657                           	psect	cstackBANK0
   658     0020                     __pcstackBANK0:
   659     0020                     i1memcpy@tmp:
   660                           
   661                           ; 1 bytes @ 0x0
   662     0020                     	ds	1
   663     0021                     i1memcpy@d:
   664                           
   665                           ; 2 bytes @ 0x1
   666     0021                     	ds	2
   667     0023                     i1memcpy@s:
   668                           
   669                           ; 2 bytes @ 0x3
   670     0023                     	ds	2
   671     0025                     ??_ISR:
   672                           
   673                           ; 1 bytes @ 0x5
   674     0025                     	ds	3
   675     0028                     ?_strncpy:
   676     0028                     ??_UART_TxByte:	
   677                           ; 1 bytes @ 0x8
   678                           
   679     0028                     ?_memset:	
   680                           ; 1 bytes @ 0x8
   681                           
   682     0028                     ??_communication_task:	
   683                           ; 1 bytes @ 0x8
   684                           
   685     0028                     ??_received_queue_thereispending:	
   686                           ; 1 bytes @ 0x8
   687                           
   688     0028                     ??_Lcd_Port:	
   689                           ; 1 bytes @ 0x8
   690                           
   691     0028                     ?___bmul:	
   692                           ; 1 bytes @ 0x8
   693                           
   694     0028                     ?___awdiv:	
   695                           ; 1 bytes @ 0x8
   696                           
   697     0028                     ?___lwdiv:	
   698                           ; 2 bytes @ 0x8
   699                           
   700     0028                     ?___lwmod:	
   701                           ; 2 bytes @ 0x8
   702                           
   703     0028                     ?___aldiv:	
   704                           ; 2 bytes @ 0x8
   705                           
   706     0028                     Lcd_Port@a:	
   707                           ; 4 bytes @ 0x8
   708                           
   709     0028                     ___bmul@multiplicand:	
   710                           ; 1 bytes @ 0x8
   711                           
   712     0028                     strncpy@from:	
   713                           ; 1 bytes @ 0x8
   714                           
   715     0028                     ___awdiv@divisor:	
   716                           ; 1 bytes @ 0x8
   717                           
   718     0028                     ___lwdiv@divisor:	
   719                           ; 2 bytes @ 0x8
   720                           
   721     0028                     ___lwmod@divisor:	
   722                           ; 2 bytes @ 0x8
   723                           
   724     0028                     memset@c:	
   725                           ; 2 bytes @ 0x8
   726                           
   727     0028                     ___aldiv@divisor:	
   728                           ; 2 bytes @ 0x8
   729                           
   730                           
   731                           ; 4 bytes @ 0x8
   732     0028                     	ds	1
   733     0029                     ??_Lcd_Cmd:
   734     0029                     ??_Lcd_Write_Char:	
   735                           ; 1 bytes @ 0x9
   736                           
   737     0029                     ??___bmul:	
   738                           ; 1 bytes @ 0x9
   739                           
   740     0029                     UART_TxByte@byte:	
   741                           ; 1 bytes @ 0x9
   742                           
   743     0029                     strncpy@size:	
   744                           ; 1 bytes @ 0x9
   745                           
   746                           
   747                           ; 2 bytes @ 0x9
   748     0029                     	ds	1
   749     002A                     Lcd_Write_Char@temp:
   750     002A                     ___bmul@product:	
   751                           ; 1 bytes @ 0xA
   752                           
   753     002A                     ___awdiv@dividend:	
   754                           ; 1 bytes @ 0xA
   755                           
   756     002A                     ___lwdiv@dividend:	
   757                           ; 2 bytes @ 0xA
   758                           
   759     002A                     ___lwmod@dividend:	
   760                           ; 2 bytes @ 0xA
   761                           
   762     002A                     memset@n:	
   763                           ; 2 bytes @ 0xA
   764                           
   765                           
   766                           ; 2 bytes @ 0xA
   767     002A                     	ds	1
   768     002B                     ??_strncpy:
   769     002B                     Lcd_Cmd@a:	
   770                           ; 1 bytes @ 0xB
   771                           
   772     002B                     Lcd_Write_Char@y:	
   773                           ; 1 bytes @ 0xB
   774                           
   775     002B                     ___bmul@multiplier:	
   776                           ; 1 bytes @ 0xB
   777                           
   778                           
   779                           ; 1 bytes @ 0xB
   780     002B                     	ds	1
   781     002C                     ??_memset:
   782     002C                     ??_Lcd_Init:	
   783                           ; 1 bytes @ 0xC
   784                           
   785     002C                     ??_Lcd_Clear:	
   786                           ; 1 bytes @ 0xC
   787                           
   788     002C                     ??___awdiv:	
   789                           ; 1 bytes @ 0xC
   790                           
   791     002C                     ??___lwdiv:	
   792                           ; 1 bytes @ 0xC
   793                           
   794     002C                     ??___lwmod:	
   795                           ; 1 bytes @ 0xC
   796                           
   797     002C                     ?_memcpy:	
   798                           ; 1 bytes @ 0xC
   799                           
   800     002C                     Lcd_Write_Char@a:	
   801                           ; 2 bytes @ 0xC
   802                           
   803     002C                     strncpy@to:	
   804                           ; 1 bytes @ 0xC
   805                           
   806     002C                     memcpy@d1:	
   807                           ; 1 bytes @ 0xC
   808                           
   809     002C                     ___aldiv@dividend:	
   810                           ; 2 bytes @ 0xC
   811                           
   812                           
   813                           ; 4 bytes @ 0xC
   814     002C                     	ds	1
   815     002D                     ?_Lcd_Write_String:
   816     002D                     ___awdiv@counter:	
   817                           ; 1 bytes @ 0xD
   818                           
   819     002D                     ___lwdiv@counter:	
   820                           ; 1 bytes @ 0xD
   821                           
   822     002D                     ___lwmod@counter:	
   823                           ; 1 bytes @ 0xD
   824                           
   825     002D                     memset@p1:	
   826                           ; 1 bytes @ 0xD
   827                           
   828     002D                     strncpy@cp:	
   829                           ; 1 bytes @ 0xD
   830                           
   831     002D                     Lcd_Write_String@a:	
   832                           ; 1 bytes @ 0xD
   833                           
   834                           
   835                           ; 2 bytes @ 0xD
   836     002D                     	ds	1
   837     002E                     ___awdiv@sign:
   838     002E                     memset@p:	
   839                           ; 1 bytes @ 0xE
   840                           
   841     002E                     ___lwdiv@quotient:	
   842                           ; 1 bytes @ 0xE
   843                           
   844     002E                     memcpy@s1:	
   845                           ; 2 bytes @ 0xE
   846                           
   847                           
   848                           ; 2 bytes @ 0xE
   849     002E                     	ds	1
   850     002F                     ??_Lcd_Write_String:
   851     002F                     ___awdiv@quotient:	
   852                           ; 1 bytes @ 0xF
   853                           
   854                           
   855                           ; 2 bytes @ 0xF
   856     002F                     	ds	1
   857     0030                     ??___aldiv:
   858     0030                     memcpy@n:	
   859                           ; 1 bytes @ 0x10
   860                           
   861                           
   862                           ; 2 bytes @ 0x10
   863     0030                     	ds	1
   864     0031                     ___aldiv@counter:
   865                           
   866                           ; 1 bytes @ 0x11
   867     0031                     	ds	1
   868     0032                     ??_memcpy:
   869     0032                     ___aldiv@sign:	
   870                           ; 1 bytes @ 0x12
   871                           
   872     0032                     memcpy@tmp:	
   873                           ; 1 bytes @ 0x12
   874                           
   875     0032                     Lcd_Write_String@i:	
   876                           ; 1 bytes @ 0x12
   877                           
   878                           
   879                           ; 2 bytes @ 0x12
   880     0032                     	ds	1
   881     0033                     memcpy@d:
   882     0033                     ___aldiv@quotient:	
   883                           ; 2 bytes @ 0x13
   884                           
   885                           
   886                           ; 4 bytes @ 0x13
   887     0033                     	ds	1
   888     0034                     ?_Lcd_Write_Int:
   889     0034                     Lcd_Write_Int@val:	
   890                           ; 2 bytes @ 0x14
   891                           
   892                           
   893                           ; 2 bytes @ 0x14
   894     0034                     	ds	1
   895     0035                     memcpy@s:
   896                           
   897                           ; 2 bytes @ 0x15
   898     0035                     	ds	1
   899     0036                     ??_Lcd_Write_Int:
   900                           
   901                           ; 1 bytes @ 0x16
   902     0036                     	ds	1
   903     0037                     ??_UART_send_packet:
   904     0037                     ?_communication_init:	
   905                           ; 1 bytes @ 0x17
   906                           
   907     0037                     ??_received_queue_get_packet:	
   908                           ; 1 bytes @ 0x17
   909                           
   910     0037                     received_queue_get_packet@packet:	
   911                           ; 1 bytes @ 0x17
   912                           
   913     0037                     communication_init@baudrate:	
   914                           ; 1 bytes @ 0x17
   915                           
   916     0037                     UART_send_packet@buffer:	
   917                           ; 4 bytes @ 0x17
   918                           
   919                           
   920                           ; 15 bytes @ 0x17
   921     0037                     	ds	4
   922     003B                     ??_communication_init:
   923                           
   924                           ; 1 bytes @ 0x1B
   925     003B                     	ds	11
   926     0046                     UART_send_packet@packet_to_send:
   927                           
   928                           ; 1 bytes @ 0x26
   929     0046                     	ds	1
   930     0047                     UART_send_packet@i:
   931                           
   932                           ; 2 bytes @ 0x27
   933     0047                     	ds	2
   934     0049                     ??_main:
   935                           
   936                           	psect	maintext
   937     0212                     __pmaintext:	
   938                           ; 1 bytes @ 0x29
   939 ;;
   940 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   941 ;;
   942 ;; *************** function _main *****************
   943 ;; Defined at:
   944 ;;		line 20 in file "main.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;		None
   947 ;; Auto vars:     Size  Location     Type
   948 ;;  packet         14    2[BANK3 ] struct .
   949 ;;  send_packet    14   16[BANK3 ] struct .
   950 ;;  received_cou    2    0[BANK3 ] unsigned int 
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : B00/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   960 ;;      Params:         0       0       0       0       0
   961 ;;      Locals:         0       0       0      30       0
   962 ;;      Temps:          0       0       0       0       0
   963 ;;      Totals:         0       0       0      30       0
   964 ;;Total ram usage:       30 bytes
   965 ;; Hardware stack levels required when called: 7
   966 ;; This function calls:
   967 ;;		_Lcd_Clear
   968 ;;		_Lcd_Init
   969 ;;		_Lcd_Write_Int
   970 ;;		_Lcd_Write_String
   971 ;;		_UART_send_packet
   972 ;;		_communication_init
   973 ;;		_communication_task
   974 ;;		_memset
   975 ;;		_received_queue_get_packet
   976 ;;		_received_queue_thereispending
   977 ;;		_strncpy
   978 ;; This function is called by:
   979 ;;		Startup code after reset
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983     0212                     _main:	
   984                           ;psect for function _main
   985                           
   986     0212                     l2196:	
   987                           ;incstack = 0
   988                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   989                           
   990                           
   991                           ;main.c: 21:     Lcd_Init();
   992     0212  120A  118A  2297  120A  118A  	fcall	_Lcd_Init
   993                           
   994                           ;main.c: 22:     communication_init(115200);
   995     0217  3000               	movlw	0
   996     0218  1283               	bcf	3,5	;RP0=0, select bank0
   997     0219  1303               	bcf	3,6	;RP1=0, select bank0
   998     021A  00BA               	movwf	communication_init@baudrate+3
   999     021B  3001               	movlw	1
  1000     021C  00B9               	movwf	communication_init@baudrate+2
  1001     021D  30C2               	movlw	194
  1002     021E  00B8               	movwf	communication_init@baudrate+1
  1003     021F  3000               	movlw	0
  1004     0220  00B7               	movwf	communication_init@baudrate
  1005     0221  120A  118A  24D1  120A  118A  	fcall	_communication_init
  1006     0226                     l2198:
  1007                           
  1008                           ;main.c: 23:     Lcd_Write_String("ab ");
  1009     0226  3018               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1010     0227  1283               	bcf	3,5	;RP0=0, select bank0
  1011     0228  1303               	bcf	3,6	;RP1=0, select bank0
  1012     0229  00AD               	movwf	Lcd_Write_String@a
  1013     022A  3080               	movlw	128
  1014     022B  00AE               	movwf	Lcd_Write_String@a+1
  1015     022C  120A  118A  2449  120A  118A  	fcall	_Lcd_Write_String
  1016     0231                     l2200:
  1017                           
  1018                           ;main.c: 24:     TRISD = 0x00;
  1019     0231  1683               	bsf	3,5	;RP0=1, select bank1
  1020     0232  1303               	bcf	3,6	;RP1=0, select bank1
  1021     0233  0188               	clrf	8	;volatile
  1022     0234                     l2202:
  1023                           
  1024                           ;main.c: 25:     PORTD = 0x00;
  1025     0234  1283               	bcf	3,5	;RP0=0, select bank0
  1026     0235  1303               	bcf	3,6	;RP1=0, select bank0
  1027     0236  0188               	clrf	8	;volatile
  1028     0237                     l2204:
  1029                           
  1030                           ;main.c: 31:         communication_task();
  1031     0237  120A  118A  2723  120A  118A  	fcall	_communication_task
  1032     023C                     l2206:
  1033                           
  1034                           ;main.c: 33:         shared_packet_t send_packet;;main.c: 34:         memset(&send_packe
      +                          t,0x00,sizeof(shared_packet_t));
  1035     023C  3000               	movlw	0
  1036     023D  1283               	bcf	3,5	;RP0=0, select bank0
  1037     023E  1303               	bcf	3,6	;RP1=0, select bank0
  1038     023F  00A8               	movwf	memset@c
  1039     0240  00A9               	movwf	memset@c+1
  1040     0241  300E               	movlw	14
  1041     0242  00AA               	movwf	memset@n
  1042     0243  3000               	movlw	0
  1043     0244  00AB               	movwf	memset@n+1
  1044     0245  30CA               	movlw	(low (main@send_packet| (0+256)))& (0+255)
  1045     0246  120A  118A  2695  120A  118A  	fcall	_memset
  1046     024B                     l2208:
  1047                           
  1048                           ;main.c: 35:         send_packet.packet_type = PACKET_GENERATE;
  1049     024B  3002               	movlw	2
  1050     024C  1683               	bsf	3,5	;RP0=1, select bank3
  1051     024D  1703               	bsf	3,6	;RP1=1, select bank3
  1052     024E  00D6               	movwf	(main@send_packet^(0+384)+12)
  1053     024F                     l2210:
  1054                           
  1055                           ;main.c: 37:         strncpy(send_packet.target_device, "raspi", 5);
  1056     024F  300D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1057     0250  1283               	bcf	3,5	;RP0=0, select bank0
  1058     0251  1303               	bcf	3,6	;RP1=0, select bank0
  1059     0252  00A8               	movwf	strncpy@from
  1060     0253  3005               	movlw	5
  1061     0254  00A9               	movwf	strncpy@size
  1062     0255  3000               	movlw	0
  1063     0256  00AA               	movwf	strncpy@size+1
  1064     0257  30D1               	movlw	(low ((main@send_packet| (0+256)+7)))& (0+255)
  1065     0258  120A  118A  248F  120A  118A  	fcall	_strncpy
  1066     025D                     l2212:
  1067                           
  1068                           ;main.c: 38:         send_packet.generate_command.code = 12;
  1069     025D  300C               	movlw	12
  1070     025E  1683               	bsf	3,5	;RP0=1, select bank3
  1071     025F  1703               	bsf	3,6	;RP1=1, select bank3
  1072     0260  00D7               	movwf	(main@send_packet^(0+384)+13)
  1073     0261                     l2214:
  1074                           
  1075                           ;main.c: 39:         UART_send_packet(&send_packet);
  1076     0261  30CA               	movlw	(low (main@send_packet| (0+256)))& (0+255)
  1077     0262  120A  118A  236E  120A  118A  	fcall	_UART_send_packet
  1078     0267                     l2216:
  1079                           
  1080                           ;main.c: 42:         if(received_queue_thereispending() > 0)
  1081     0267  120A  118A  271F  120A  118A  	fcall	_received_queue_thereispending
  1082     026C  3A00               	xorlw	0
  1083     026D  1903               	skipnz
  1084     026E  2A70               	goto	u2211
  1085     026F  2A71               	goto	u2210
  1086     0270                     u2211:
  1087     0270  2A37               	goto	l2204
  1088     0271                     u2210:
  1089     0271                     l2218:
  1090                           
  1091                           ;main.c: 43:         {;main.c: 44:             shared_packet_t packet;;main.c: 45:      
      +                                 received_queue_get_packet(&packet);
  1092     0271  30BC               	movlw	(low (main@packet| (0+256)))& (0+255)
  1093     0272  120A  118A  2654  120A  118A  	fcall	_received_queue_get_packet
  1094     0277                     l2220:
  1095                           
  1096                           ;main.c: 46:             Lcd_Clear();
  1097     0277  120A  118A  270A  120A  118A  	fcall	_Lcd_Clear
  1098     027C                     l2222:
  1099                           
  1100                           ;main.c: 47:             Lcd_Write_Int(++received_count);
  1101     027C  3001               	movlw	1
  1102     027D  1683               	bsf	3,5	;RP0=1, select bank3
  1103     027E  1703               	bsf	3,6	;RP1=1, select bank3
  1104     027F  07BA               	addwf	main@received_count^(0+384),f
  1105     0280  1803               	skipnc
  1106     0281  0ABB               	incf	(main@received_count+1)^(0+384),f
  1107     0282  3000               	movlw	0
  1108     0283  07BB               	addwf	(main@received_count+1)^(0+384),f
  1109     0284  083B               	movf	(main@received_count+1)^(0+384),w
  1110     0285  1283               	bcf	3,5	;RP0=0, select bank0
  1111     0286  1303               	bcf	3,6	;RP1=0, select bank0
  1112     0287  00B5               	movwf	Lcd_Write_Int@val+1
  1113     0288  1683               	bsf	3,5	;RP0=1, select bank3
  1114     0289  1703               	bsf	3,6	;RP1=1, select bank3
  1115     028A  083A               	movf	main@received_count^(0+384),w
  1116     028B  1283               	bcf	3,5	;RP0=0, select bank0
  1117     028C  1303               	bcf	3,6	;RP1=0, select bank0
  1118     028D  00B4               	movwf	Lcd_Write_Int@val
  1119     028E  120A  118A  2030  120A  118A  	fcall	_Lcd_Write_Int
  1120     0293  2A37               	goto	l2204
  1121     0294  120A  118A  2810   	ljmp	start
  1122     0297                     __end_of_main:
  1123                           
  1124                           	psect	text1
  1125     071F                     __ptext1:	
  1126 ;; *************** function _received_queue_thereispending *****************
  1127 ;; Defined at:
  1128 ;;		line 71 in file "communication/communication.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;		None
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;		None
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      unsigned char 
  1135 ;; Registers used:
  1136 ;;		wreg
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1142 ;;      Params:         0       0       0       0       0
  1143 ;;      Locals:         0       0       0       0       0
  1144 ;;      Temps:          0       0       0       0       0
  1145 ;;      Totals:         0       0       0       0       0
  1146 ;;Total ram usage:        0 bytes
  1147 ;; Hardware stack levels used: 1
  1148 ;; Hardware stack levels required when called: 3
  1149 ;; This function calls:
  1150 ;;		Nothing
  1151 ;; This function is called by:
  1152 ;;		_main
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156     071F                     _received_queue_thereispending:	
  1157                           ;psect for function _received_queue_thereispending
  1158                           
  1159     071F                     l2080:	
  1160                           ;incstack = 0
  1161                           ; Regs used in _received_queue_thereispending: [wreg]
  1162                           
  1163                           
  1164                           ;communication/communication.c: 73:     return receive_queue_elements;
  1165     071F  1283               	bcf	3,5	;RP0=0, select bank0
  1166     0720  1303               	bcf	3,6	;RP1=0, select bank0
  1167     0721  084C               	movf	_receive_queue_elements,w
  1168     0722                     l55:
  1169     0722  0008               	return
  1170     0723                     __end_of_received_queue_thereispending:
  1171                           
  1172                           	psect	text2
  1173     0654                     __ptext2:	
  1174 ;; *************** function _received_queue_get_packet *****************
  1175 ;; Defined at:
  1176 ;;		line 76 in file "communication/communication.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;  packet          1    wreg     PTR struct .
  1179 ;;		 -> main@packet(14), 
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;  packet          1   23[BANK0 ] PTR struct .
  1182 ;;		 -> main@packet(14), 
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      void 
  1185 ;; Registers used:
  1186 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1192 ;;      Params:         0       0       0       0       0
  1193 ;;      Locals:         0       1       0       0       0
  1194 ;;      Temps:          0       0       0       0       0
  1195 ;;      Totals:         0       1       0       0       0
  1196 ;;Total ram usage:        1 bytes
  1197 ;; Hardware stack levels used: 1
  1198 ;; Hardware stack levels required when called: 4
  1199 ;; This function calls:
  1200 ;;		___bmul
  1201 ;;		_memcpy
  1202 ;; This function is called by:
  1203 ;;		_main
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207     0654                     _received_queue_get_packet:	
  1208                           ;psect for function _received_queue_get_packet
  1209                           
  1210                           
  1211                           ;incstack = 0
  1212                           ; Regs used in _received_queue_get_packet: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1213                           ;received_queue_get_packet@packet stored from wreg
  1214     0654  1283               	bcf	3,5	;RP0=0, select bank0
  1215     0655  1303               	bcf	3,6	;RP1=0, select bank0
  1216     0656  00B7               	movwf	received_queue_get_packet@packet
  1217     0657                     l2084:
  1218                           
  1219                           ;communication/communication.c: 76: void received_queue_get_packet(shared_packet_t* pack
      +                          et);communication/communication.c: 77: {;communication/communication.c: 78:     memcpy(p
      +                          acket, &receive_queue[--receive_queue_elements], sizeof(shared_packet_t));
  1220     0657  0837               	movf	received_queue_get_packet@packet,w
  1221     0658  00AC               	movwf	memcpy@d1
  1222     0659  3001               	movlw	1
  1223     065A  00AD               	movwf	memcpy@d1+1
  1224     065B  300E               	movlw	14
  1225     065C  00A8               	movwf	___bmul@multiplicand
  1226     065D  3001               	movlw	1
  1227     065E  02CC               	subwf	_receive_queue_elements,f
  1228     065F  084C               	movf	_receive_queue_elements,w
  1229     0660  120A  118A  26B3  120A  118A  	fcall	___bmul
  1230     0665  3E90               	addlw	(low (_receive_queue| (0+256)))& (0+255)
  1231     0666  1283               	bcf	3,5	;RP0=0, select bank0
  1232     0667  1303               	bcf	3,6	;RP1=0, select bank0
  1233     0668  00AE               	movwf	memcpy@s1
  1234     0669  3001               	movlw	1
  1235     066A  00AF               	movwf	memcpy@s1+1
  1236     066B  300E               	movlw	14
  1237     066C  00B0               	movwf	memcpy@n
  1238     066D  3000               	movlw	0
  1239     066E  00B1               	movwf	memcpy@n+1
  1240     066F  120A  118A  2583  120A  118A  	fcall	_memcpy
  1241     0674                     l58:
  1242     0674  0008               	return
  1243     0675                     __end_of_received_queue_get_packet:
  1244                           
  1245                           	psect	text3
  1246     06B3                     __ptext3:	
  1247 ;; *************** function ___bmul *****************
  1248 ;; Defined at:
  1249 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;  multiplier      1    wreg     unsigned char 
  1252 ;;  multiplicand    1    8[BANK0 ] unsigned char 
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;  multiplier      1   11[BANK0 ] unsigned char 
  1255 ;;  product         1   10[BANK0 ] unsigned char 
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  1    wreg      unsigned char 
  1258 ;; Registers used:
  1259 ;;		wreg, status,2, status,0
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1265 ;;      Params:         0       1       0       0       0
  1266 ;;      Locals:         0       2       0       0       0
  1267 ;;      Temps:          0       1       0       0       0
  1268 ;;      Totals:         0       4       0       0       0
  1269 ;;Total ram usage:        4 bytes
  1270 ;; Hardware stack levels used: 1
  1271 ;; Hardware stack levels required when called: 3
  1272 ;; This function calls:
  1273 ;;		Nothing
  1274 ;; This function is called by:
  1275 ;;		_UART_data_received
  1276 ;;		_received_queue_get_packet
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280     06B3                     ___bmul:	
  1281                           ;psect for function ___bmul
  1282                           
  1283                           
  1284                           ;incstack = 0
  1285                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1286                           ;___bmul@multiplier stored from wreg
  1287     06B3  1283               	bcf	3,5	;RP0=0, select bank0
  1288     06B4  1303               	bcf	3,6	;RP1=0, select bank0
  1289     06B5  00AB               	movwf	___bmul@multiplier
  1290     06B6                     l1880:
  1291     06B6  01AA               	clrf	___bmul@product
  1292     06B7                     l1882:
  1293     06B7  1C2B               	btfss	___bmul@multiplier,0
  1294     06B8  2EBA               	goto	u1681
  1295     06B9  2EBB               	goto	u1680
  1296     06BA                     u1681:
  1297     06BA  2EBF               	goto	l1886
  1298     06BB                     u1680:
  1299     06BB                     l1884:
  1300     06BB  0828               	movf	___bmul@multiplicand,w
  1301     06BC  00A9               	movwf	??___bmul
  1302     06BD  0829               	movf	??___bmul,w
  1303     06BE  07AA               	addwf	___bmul@product,f
  1304     06BF                     l1886:
  1305     06BF  1003               	clrc
  1306     06C0  0DA8               	rlf	___bmul@multiplicand,f
  1307     06C1                     l1888:
  1308     06C1  1003               	clrc
  1309     06C2  0CAB               	rrf	___bmul@multiplier,f
  1310     06C3  082B               	movf	___bmul@multiplier,w
  1311     06C4  1D03               	btfss	3,2
  1312     06C5  2EC7               	goto	u1691
  1313     06C6  2EC8               	goto	u1690
  1314     06C7                     u1691:
  1315     06C7  2EB7               	goto	l1882
  1316     06C8                     u1690:
  1317     06C8                     l1890:
  1318     06C8  082A               	movf	___bmul@product,w
  1319     06C9                     l312:
  1320     06C9  0008               	return
  1321     06CA                     __end_of___bmul:
  1322                           
  1323                           	psect	text4
  1324     0695                     __ptext4:	
  1325 ;; *************** function _memset *****************
  1326 ;; Defined at:
  1327 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\memset.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;  p1              1    wreg     PTR void 
  1330 ;;		 -> main@send_packet(14), 
  1331 ;;  c               2    8[BANK0 ] int 
  1332 ;;  n               2   10[BANK0 ] unsigned int 
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  p1              1   13[BANK0 ] PTR void 
  1335 ;;		 -> main@send_packet(14), 
  1336 ;;  p               1   14[BANK0 ] PTR unsigned char 
  1337 ;;		 -> main@send_packet(14), 
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  1    wreg      PTR void 
  1340 ;; Registers used:
  1341 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1347 ;;      Params:         0       4       0       0       0
  1348 ;;      Locals:         0       2       0       0       0
  1349 ;;      Temps:          0       1       0       0       0
  1350 ;;      Totals:         0       7       0       0       0
  1351 ;;Total ram usage:        7 bytes
  1352 ;; Hardware stack levels used: 1
  1353 ;; Hardware stack levels required when called: 3
  1354 ;; This function calls:
  1355 ;;		Nothing
  1356 ;; This function is called by:
  1357 ;;		_main
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361     0695                     _memset:	
  1362                           ;psect for function _memset
  1363                           
  1364                           
  1365                           ;incstack = 0
  1366                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  1367                           ;memset@p1 stored from wreg
  1368     0695  1283               	bcf	3,5	;RP0=0, select bank0
  1369     0696  1303               	bcf	3,6	;RP1=0, select bank0
  1370     0697  00AD               	movwf	memset@p1
  1371     0698                     l2164:
  1372     0698  082D               	movf	memset@p1,w
  1373     0699  00AE               	movwf	memset@p
  1374     069A  2EA4               	goto	l2170
  1375     069B                     l2166:
  1376     069B  082E               	movf	memset@p,w
  1377     069C  0084               	movwf	4
  1378     069D  0828               	movf	memset@c,w
  1379     069E  1783               	bsf	3,7	;select IRP bank2
  1380     069F  0080               	movwf	0
  1381     06A0                     l2168:
  1382     06A0  3001               	movlw	1
  1383     06A1  00AC               	movwf	??_memset
  1384     06A2  082C               	movf	??_memset,w
  1385     06A3  07AE               	addwf	memset@p,f
  1386     06A4                     l2170:
  1387     06A4  3001               	movlw	1
  1388     06A5  02AA               	subwf	memset@n,f
  1389     06A6  3000               	movlw	0
  1390     06A7  1C03               	skipc
  1391     06A8  03AB               	decf	memset@n+1,f
  1392     06A9  02AB               	subwf	memset@n+1,f
  1393     06AA  0A2A               	incf	memset@n,w
  1394     06AB  1D03               	skipz
  1395     06AC  2EB1               	goto	u2161
  1396     06AD  0A2B               	incf	memset@n+1,w
  1397     06AE  1D03               	btfss	3,2
  1398     06AF  2EB1               	goto	u2161
  1399     06B0  2EB2               	goto	u2160
  1400     06B1                     u2161:
  1401     06B1  2E9B               	goto	l2166
  1402     06B2                     u2160:
  1403     06B2                     l746:
  1404     06B2  0008               	return
  1405     06B3                     __end_of_memset:
  1406                           
  1407                           	psect	text5
  1408     0723                     __ptext5:	
  1409 ;; *************** function _communication_task *****************
  1410 ;; Defined at:
  1411 ;;		line 43 in file "communication/communication.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;		None
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;		None
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      void 
  1418 ;; Registers used:
  1419 ;;		None
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1425 ;;      Params:         0       0       0       0       0
  1426 ;;      Locals:         0       0       0       0       0
  1427 ;;      Temps:          0       0       0       0       0
  1428 ;;      Totals:         0       0       0       0       0
  1429 ;;Total ram usage:        0 bytes
  1430 ;; Hardware stack levels used: 1
  1431 ;; Hardware stack levels required when called: 3
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		_main
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439     0723                     _communication_task:	
  1440                           ;psect for function _communication_task
  1441                           
  1442     0723                     l41:	
  1443                           ;incstack = 0
  1444                           ; Regs used in _communication_task: []
  1445                           
  1446     0723  0008               	return
  1447     0724                     __end_of_communication_task:
  1448                           
  1449                           	psect	text6
  1450     04D1                     __ptext6:	
  1451 ;; *************** function _communication_init *****************
  1452 ;; Defined at:
  1453 ;;		line 32 in file "communication/communication.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;  baudrate        4   23[BANK0 ] long 
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;		None
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      void 
  1460 ;; Registers used:
  1461 ;;		wreg, status,2, status,0, pclath, cstack
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1467 ;;      Params:         0       4       0       0       0
  1468 ;;      Locals:         0       0       0       0       0
  1469 ;;      Temps:          0       4       0       0       0
  1470 ;;      Totals:         0       8       0       0       0
  1471 ;;Total ram usage:        8 bytes
  1472 ;; Hardware stack levels used: 1
  1473 ;; Hardware stack levels required when called: 4
  1474 ;; This function calls:
  1475 ;;		___aldiv
  1476 ;; This function is called by:
  1477 ;;		_main
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481     04D1                     _communication_init:	
  1482                           ;psect for function _communication_init
  1483                           
  1484     04D1                     l2054:	
  1485                           ;incstack = 0
  1486                           ; Regs used in _communication_init: [wreg+status,2+status,0+pclath+cstack]
  1487                           
  1488                           
  1489                           ;communication/communication.c: 32: void communication_init(long int baudrate);communica
      +                          tion/communication.c: 33: {;communication/communication.c: 35:     TXSTA |= 0x24;
  1490     04D1  3024               	movlw	36
  1491     04D2  1283               	bcf	3,5	;RP0=0, select bank0
  1492     04D3  1303               	bcf	3,6	;RP1=0, select bank0
  1493     04D4  00BB               	movwf	??_communication_init
  1494     04D5  083B               	movf	??_communication_init,w
  1495     04D6  1683               	bsf	3,5	;RP0=1, select bank1
  1496     04D7  1303               	bcf	3,6	;RP1=0, select bank1
  1497     04D8  0498               	iorwf	24,f	;volatile
  1498     04D9                     l2056:
  1499                           
  1500                           ;communication/communication.c: 36:     RCSTA = 0x90;
  1501     04D9  3090               	movlw	144
  1502     04DA  1283               	bcf	3,5	;RP0=0, select bank0
  1503     04DB  1303               	bcf	3,6	;RP1=0, select bank0
  1504     04DC  0098               	movwf	24	;volatile
  1505     04DD                     l2058:
  1506                           
  1507                           ;communication/communication.c: 37:     SPBRG = (char) (20000000 / (long) (64UL * baudra
      +                          te)) - 1;
  1508     04DD  0837               	movf	communication_init@baudrate,w
  1509     04DE  00BB               	movwf	??_communication_init
  1510     04DF  0838               	movf	communication_init@baudrate+1,w
  1511     04E0  00BC               	movwf	??_communication_init+1
  1512     04E1  0839               	movf	communication_init@baudrate+2,w
  1513     04E2  00BD               	movwf	??_communication_init+2
  1514     04E3  083A               	movf	communication_init@baudrate+3,w
  1515     04E4  00BE               	movwf	??_communication_init+3
  1516     04E5  3006               	movlw	6
  1517     04E6                     u2055:
  1518     04E6  1003               	clrc
  1519     04E7  0DBB               	rlf	??_communication_init,f
  1520     04E8  0DBC               	rlf	??_communication_init+1,f
  1521     04E9  0DBD               	rlf	??_communication_init+2,f
  1522     04EA  0DBE               	rlf	??_communication_init+3,f
  1523     04EB                     u2050:
  1524     04EB  3EFF               	addlw	-1
  1525     04EC  1D03               	skipz
  1526     04ED  2CE6               	goto	u2055
  1527     04EE  083E               	movf	??_communication_init+3,w
  1528     04EF  00AB               	movwf	___aldiv@divisor+3
  1529     04F0  083D               	movf	??_communication_init+2,w
  1530     04F1  00AA               	movwf	___aldiv@divisor+2
  1531     04F2  083C               	movf	??_communication_init+1,w
  1532     04F3  00A9               	movwf	___aldiv@divisor+1
  1533     04F4  083B               	movf	??_communication_init,w
  1534     04F5  00A8               	movwf	___aldiv@divisor
  1535     04F6  3001               	movlw	1
  1536     04F7  00AF               	movwf	___aldiv@dividend+3
  1537     04F8  3031               	movlw	49
  1538     04F9  00AE               	movwf	___aldiv@dividend+2
  1539     04FA  302D               	movlw	45
  1540     04FB  00AD               	movwf	___aldiv@dividend+1
  1541     04FC  3000               	movlw	0
  1542     04FD  00AC               	movwf	___aldiv@dividend
  1543     04FE  120A  118A  2175  120A  118A  	fcall	___aldiv
  1544     0503  1283               	bcf	3,5	;RP0=0, select bank0
  1545     0504  1303               	bcf	3,6	;RP1=0, select bank0
  1546     0505  0828               	movf	?___aldiv,w
  1547     0506  3EFF               	addlw	255
  1548     0507  1683               	bsf	3,5	;RP0=1, select bank1
  1549     0508  1303               	bcf	3,6	;RP1=0, select bank1
  1550     0509  0099               	movwf	25	;volatile
  1551     050A                     l2060:
  1552                           
  1553                           ;communication/communication.c: 38:     INTCON |= 0x80;
  1554     050A  178B               	bsf	11,7	;volatile
  1555     050B                     l2062:
  1556                           
  1557                           ;communication/communication.c: 39:     INTCON |= 0x40;
  1558     050B  170B               	bsf	11,6	;volatile
  1559     050C                     l2064:
  1560                           
  1561                           ;communication/communication.c: 40:     PIE1 |= 0x20;
  1562     050C  168C               	bsf	12,5	;volatile
  1563     050D                     l38:
  1564     050D  0008               	return
  1565     050E                     __end_of_communication_init:
  1566                           
  1567                           	psect	text7
  1568     0175                     __ptext7:	
  1569 ;; *************** function ___aldiv *****************
  1570 ;; Defined at:
  1571 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;  divisor         4    8[BANK0 ] long 
  1574 ;;  dividend        4   12[BANK0 ] long 
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;  quotient        4   19[BANK0 ] long 
  1577 ;;  sign            1   18[BANK0 ] unsigned char 
  1578 ;;  counter         1   17[BANK0 ] unsigned char 
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  4    8[BANK0 ] long 
  1581 ;; Registers used:
  1582 ;;		wreg, status,2, status,0
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1588 ;;      Params:         0       8       0       0       0
  1589 ;;      Locals:         0       6       0       0       0
  1590 ;;      Temps:          0       1       0       0       0
  1591 ;;      Totals:         0      15       0       0       0
  1592 ;;Total ram usage:       15 bytes
  1593 ;; Hardware stack levels used: 1
  1594 ;; Hardware stack levels required when called: 3
  1595 ;; This function calls:
  1596 ;;		Nothing
  1597 ;; This function is called by:
  1598 ;;		_communication_init
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602     0175                     ___aldiv:	
  1603                           ;psect for function ___aldiv
  1604                           
  1605     0175                     l1894:	
  1606                           ;incstack = 0
  1607                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1608                           
  1609     0175  1283               	bcf	3,5	;RP0=0, select bank0
  1610     0176  1303               	bcf	3,6	;RP1=0, select bank0
  1611     0177  01B2               	clrf	___aldiv@sign
  1612     0178                     l1896:
  1613     0178  1FAB               	btfss	___aldiv@divisor+3,7
  1614     0179  297B               	goto	u1701
  1615     017A  297C               	goto	u1700
  1616     017B                     u1701:
  1617     017B  2989               	goto	l351
  1618     017C                     u1700:
  1619     017C                     l1898:
  1620     017C  09A8               	comf	___aldiv@divisor,f
  1621     017D  09A9               	comf	___aldiv@divisor+1,f
  1622     017E  09AA               	comf	___aldiv@divisor+2,f
  1623     017F  09AB               	comf	___aldiv@divisor+3,f
  1624     0180  0AA8               	incf	___aldiv@divisor,f
  1625     0181  1903               	skipnz
  1626     0182  0AA9               	incf	___aldiv@divisor+1,f
  1627     0183  1903               	skipnz
  1628     0184  0AAA               	incf	___aldiv@divisor+2,f
  1629     0185  1903               	skipnz
  1630     0186  0AAB               	incf	___aldiv@divisor+3,f
  1631     0187  01B2               	clrf	___aldiv@sign
  1632     0188  0AB2               	incf	___aldiv@sign,f
  1633     0189                     l351:
  1634     0189  1FAF               	btfss	___aldiv@dividend+3,7
  1635     018A  298C               	goto	u1711
  1636     018B  298D               	goto	u1710
  1637     018C                     u1711:
  1638     018C  299C               	goto	l1904
  1639     018D                     u1710:
  1640     018D                     l1900:
  1641     018D  09AC               	comf	___aldiv@dividend,f
  1642     018E  09AD               	comf	___aldiv@dividend+1,f
  1643     018F  09AE               	comf	___aldiv@dividend+2,f
  1644     0190  09AF               	comf	___aldiv@dividend+3,f
  1645     0191  0AAC               	incf	___aldiv@dividend,f
  1646     0192  1903               	skipnz
  1647     0193  0AAD               	incf	___aldiv@dividend+1,f
  1648     0194  1903               	skipnz
  1649     0195  0AAE               	incf	___aldiv@dividend+2,f
  1650     0196  1903               	skipnz
  1651     0197  0AAF               	incf	___aldiv@dividend+3,f
  1652     0198                     l1902:
  1653     0198  3001               	movlw	1
  1654     0199  00B0               	movwf	??___aldiv
  1655     019A  0830               	movf	??___aldiv,w
  1656     019B  06B2               	xorwf	___aldiv@sign,f
  1657     019C                     l1904:
  1658     019C  3000               	movlw	0
  1659     019D  00B6               	movwf	___aldiv@quotient+3
  1660     019E  3000               	movlw	0
  1661     019F  00B5               	movwf	___aldiv@quotient+2
  1662     01A0  3000               	movlw	0
  1663     01A1  00B4               	movwf	___aldiv@quotient+1
  1664     01A2  3000               	movlw	0
  1665     01A3  00B3               	movwf	___aldiv@quotient
  1666     01A4                     l1906:
  1667     01A4  082B               	movf	___aldiv@divisor+3,w
  1668     01A5  042A               	iorwf	___aldiv@divisor+2,w
  1669     01A6  0429               	iorwf	___aldiv@divisor+1,w
  1670     01A7  0428               	iorwf	___aldiv@divisor,w
  1671     01A8  1903               	skipnz
  1672     01A9  29AB               	goto	u1721
  1673     01AA  29AC               	goto	u1720
  1674     01AB                     u1721:
  1675     01AB  29F9               	goto	l1926
  1676     01AC                     u1720:
  1677     01AC                     l1908:
  1678     01AC  01B1               	clrf	___aldiv@counter
  1679     01AD  0AB1               	incf	___aldiv@counter,f
  1680     01AE  29BC               	goto	l1912
  1681     01AF                     l1910:
  1682     01AF  3001               	movlw	1
  1683     01B0  00B0               	movwf	??___aldiv
  1684     01B1                     u1735:
  1685     01B1  1003               	clrc
  1686     01B2  0DA8               	rlf	___aldiv@divisor,f
  1687     01B3  0DA9               	rlf	___aldiv@divisor+1,f
  1688     01B4  0DAA               	rlf	___aldiv@divisor+2,f
  1689     01B5  0DAB               	rlf	___aldiv@divisor+3,f
  1690     01B6  0BB0               	decfsz	??___aldiv,f
  1691     01B7  29B1               	goto	u1735
  1692     01B8  3001               	movlw	1
  1693     01B9  00B0               	movwf	??___aldiv
  1694     01BA  0830               	movf	??___aldiv,w
  1695     01BB  07B1               	addwf	___aldiv@counter,f
  1696     01BC                     l1912:
  1697     01BC  1FAB               	btfss	___aldiv@divisor+3,7
  1698     01BD  29BF               	goto	u1741
  1699     01BE  29C0               	goto	u1740
  1700     01BF                     u1741:
  1701     01BF  29AF               	goto	l1910
  1702     01C0                     u1740:
  1703     01C0                     l1914:
  1704     01C0  3001               	movlw	1
  1705     01C1  00B0               	movwf	??___aldiv
  1706     01C2                     u1755:
  1707     01C2  1003               	clrc
  1708     01C3  0DB3               	rlf	___aldiv@quotient,f
  1709     01C4  0DB4               	rlf	___aldiv@quotient+1,f
  1710     01C5  0DB5               	rlf	___aldiv@quotient+2,f
  1711     01C6  0DB6               	rlf	___aldiv@quotient+3,f
  1712     01C7  0BB0               	decfsz	??___aldiv,f
  1713     01C8  29C2               	goto	u1755
  1714     01C9                     l1916:
  1715     01C9  082B               	movf	___aldiv@divisor+3,w
  1716     01CA  022F               	subwf	___aldiv@dividend+3,w
  1717     01CB  1D03               	skipz
  1718     01CC  29D7               	goto	u1765
  1719     01CD  082A               	movf	___aldiv@divisor+2,w
  1720     01CE  022E               	subwf	___aldiv@dividend+2,w
  1721     01CF  1D03               	skipz
  1722     01D0  29D7               	goto	u1765
  1723     01D1  0829               	movf	___aldiv@divisor+1,w
  1724     01D2  022D               	subwf	___aldiv@dividend+1,w
  1725     01D3  1D03               	skipz
  1726     01D4  29D7               	goto	u1765
  1727     01D5  0828               	movf	___aldiv@divisor,w
  1728     01D6  022C               	subwf	___aldiv@dividend,w
  1729     01D7                     u1765:
  1730     01D7  1C03               	skipc
  1731     01D8  29DA               	goto	u1761
  1732     01D9  29DB               	goto	u1760
  1733     01DA                     u1761:
  1734     01DA  29EA               	goto	l1922
  1735     01DB                     u1760:
  1736     01DB                     l1918:
  1737     01DB  0828               	movf	___aldiv@divisor,w
  1738     01DC  02AC               	subwf	___aldiv@dividend,f
  1739     01DD  0829               	movf	___aldiv@divisor+1,w
  1740     01DE  1C03               	skipc
  1741     01DF  0F29               	incfsz	___aldiv@divisor+1,w
  1742     01E0  02AD               	subwf	___aldiv@dividend+1,f
  1743     01E1  082A               	movf	___aldiv@divisor+2,w
  1744     01E2  1C03               	skipc
  1745     01E3  0F2A               	incfsz	___aldiv@divisor+2,w
  1746     01E4  02AE               	subwf	___aldiv@dividend+2,f
  1747     01E5  082B               	movf	___aldiv@divisor+3,w
  1748     01E6  1C03               	skipc
  1749     01E7  0F2B               	incfsz	___aldiv@divisor+3,w
  1750     01E8  02AF               	subwf	___aldiv@dividend+3,f
  1751     01E9                     l1920:
  1752     01E9  1433               	bsf	___aldiv@quotient,0
  1753     01EA                     l1922:
  1754     01EA  3001               	movlw	1
  1755     01EB                     u1775:
  1756     01EB  1003               	clrc
  1757     01EC  0CAB               	rrf	___aldiv@divisor+3,f
  1758     01ED  0CAA               	rrf	___aldiv@divisor+2,f
  1759     01EE  0CA9               	rrf	___aldiv@divisor+1,f
  1760     01EF  0CA8               	rrf	___aldiv@divisor,f
  1761     01F0  3EFF               	addlw	-1
  1762     01F1  1D03               	skipz
  1763     01F2  29EB               	goto	u1775
  1764     01F3                     l1924:
  1765     01F3  3001               	movlw	1
  1766     01F4  02B1               	subwf	___aldiv@counter,f
  1767     01F5  1D03               	btfss	3,2
  1768     01F6  29F8               	goto	u1781
  1769     01F7  29F9               	goto	u1780
  1770     01F8                     u1781:
  1771     01F8  29C0               	goto	l1914
  1772     01F9                     u1780:
  1773     01F9                     l1926:
  1774     01F9  0832               	movf	___aldiv@sign,w
  1775     01FA  1903               	btfsc	3,2
  1776     01FB  29FD               	goto	u1791
  1777     01FC  29FE               	goto	u1790
  1778     01FD                     u1791:
  1779     01FD  2A09               	goto	l1930
  1780     01FE                     u1790:
  1781     01FE                     l1928:
  1782     01FE  09B3               	comf	___aldiv@quotient,f
  1783     01FF  09B4               	comf	___aldiv@quotient+1,f
  1784     0200  09B5               	comf	___aldiv@quotient+2,f
  1785     0201  09B6               	comf	___aldiv@quotient+3,f
  1786     0202  0AB3               	incf	___aldiv@quotient,f
  1787     0203  1903               	skipnz
  1788     0204  0AB4               	incf	___aldiv@quotient+1,f
  1789     0205  1903               	skipnz
  1790     0206  0AB5               	incf	___aldiv@quotient+2,f
  1791     0207  1903               	skipnz
  1792     0208  0AB6               	incf	___aldiv@quotient+3,f
  1793     0209                     l1930:
  1794     0209  0836               	movf	___aldiv@quotient+3,w
  1795     020A  00AB               	movwf	?___aldiv+3
  1796     020B  0835               	movf	___aldiv@quotient+2,w
  1797     020C  00AA               	movwf	?___aldiv+2
  1798     020D  0834               	movf	___aldiv@quotient+1,w
  1799     020E  00A9               	movwf	?___aldiv+1
  1800     020F  0833               	movf	___aldiv@quotient,w
  1801     0210  00A8               	movwf	?___aldiv
  1802     0211                     l361:
  1803     0211  0008               	return
  1804     0212                     __end_of___aldiv:
  1805                           
  1806                           	psect	text8
  1807     036E                     __ptext8:	
  1808 ;; *************** function _UART_send_packet *****************
  1809 ;; Defined at:
  1810 ;;		line 17 in file "communication/communication.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;  packet_to_se    1    wreg     PTR struct .
  1813 ;;		 -> main@send_packet(14), 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;  packet_to_se    1   38[BANK0 ] PTR struct .
  1816 ;;		 -> main@send_packet(14), 
  1817 ;;  i               2   39[BANK0 ] int 
  1818 ;;  buffer         15   23[BANK0 ] unsigned char [15]
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  1    wreg      void 
  1821 ;; Registers used:
  1822 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1828 ;;      Params:         0       0       0       0       0
  1829 ;;      Locals:         0      18       0       0       0
  1830 ;;      Temps:          0       0       0       0       0
  1831 ;;      Totals:         0      18       0       0       0
  1832 ;;Total ram usage:       18 bytes
  1833 ;; Hardware stack levels used: 1
  1834 ;; Hardware stack levels required when called: 4
  1835 ;; This function calls:
  1836 ;;		_UART_TxByte
  1837 ;;		_memcpy
  1838 ;;		_strncpy
  1839 ;; This function is called by:
  1840 ;;		_main
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844     036E                     _UART_send_packet:	
  1845                           ;psect for function _UART_send_packet
  1846                           
  1847                           
  1848                           ;incstack = 0
  1849                           ; Regs used in _UART_send_packet: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1850                           ;UART_send_packet@packet_to_send stored from wreg
  1851     036E  1283               	bcf	3,5	;RP0=0, select bank0
  1852     036F  1303               	bcf	3,6	;RP1=0, select bank0
  1853     0370  00C6               	movwf	UART_send_packet@packet_to_send
  1854     0371                     l2036:
  1855                           
  1856                           ;communication/communication.c: 17: void UART_send_packet(shared_packet_t* packet_to_sen
      +                          d);communication/communication.c: 18: {;communication/communication.c: 19:     packet_to
      +                          _send->length = sizeof(shared_packet_t);
  1857     0371  0846               	movf	UART_send_packet@packet_to_send,w
  1858     0372  0084               	movwf	4
  1859     0373  300E               	movlw	14
  1860     0374  1783               	bsf	3,7	;select IRP bank2
  1861     0375  0080               	movwf	0
  1862     0376  0A84               	incf	4,f
  1863     0377  3000               	movlw	0
  1864     0378  0080               	movwf	0
  1865     0379                     l2038:
  1866                           
  1867                           ;communication/communication.c: 20:     strncpy(packet_to_send->source_device, "123A", 5
      +                          );
  1868     0379  3013               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1869     037A  00A8               	movwf	strncpy@from
  1870     037B  3005               	movlw	5
  1871     037C  00A9               	movwf	strncpy@size
  1872     037D  3000               	movlw	0
  1873     037E  00AA               	movwf	strncpy@size+1
  1874     037F  0846               	movf	UART_send_packet@packet_to_send,w
  1875     0380  3E02               	addlw	2
  1876     0381  120A  118A  248F  120A  118A  	fcall	_strncpy
  1877     0386                     l2040:
  1878                           
  1879                           ;communication/communication.c: 22:     unsigned char buffer[sizeof(shared_packet_t)];;c
      +                          ommunication/communication.c: 24:     memcpy(buffer, packet_to_send, sizeof(shared_packe
      +                          t_t));
  1880     0386  3037               	movlw	(low (UART_send_packet@buffer| 0))& (0+255)
  1881     0387  1283               	bcf	3,5	;RP0=0, select bank0
  1882     0388  1303               	bcf	3,6	;RP1=0, select bank0
  1883     0389  00AC               	movwf	memcpy@d1
  1884     038A  3000               	movlw	0
  1885     038B  00AD               	movwf	memcpy@d1+1
  1886     038C  0846               	movf	UART_send_packet@packet_to_send,w
  1887     038D  00AE               	movwf	memcpy@s1
  1888     038E  3001               	movlw	1
  1889     038F  00AF               	movwf	memcpy@s1+1
  1890     0390  300E               	movlw	14
  1891     0391  00B0               	movwf	memcpy@n
  1892     0392  3000               	movlw	0
  1893     0393  00B1               	movwf	memcpy@n+1
  1894     0394  120A  118A  2583  120A  118A  	fcall	_memcpy
  1895     0399                     l2042:
  1896                           
  1897                           ;communication/communication.c: 25:     for (int i = 0; i < sizeof(shared_packet_t); i++
      +                          ) {
  1898     0399  1283               	bcf	3,5	;RP0=0, select bank0
  1899     039A  1303               	bcf	3,6	;RP1=0, select bank0
  1900     039B  01C7               	clrf	UART_send_packet@i
  1901     039C  01C8               	clrf	UART_send_packet@i+1
  1902     039D                     l2048:
  1903                           
  1904                           ;communication/communication.c: 27:         UART_TxByte(buffer[i]);
  1905     039D  0847               	movf	UART_send_packet@i,w
  1906     039E  3E37               	addlw	(low (UART_send_packet@buffer| 0))& (0+255)
  1907     039F  0084               	movwf	4
  1908     03A0  1383               	bcf	3,7	;select IRP bank0
  1909     03A1  0800               	movf	0,w
  1910     03A2  120A  118A  26CA  120A  118A  	fcall	_UART_TxByte
  1911     03A7                     l2050:
  1912                           
  1913                           ;communication/communication.c: 28:     }
  1914     03A7  3001               	movlw	1
  1915     03A8  1283               	bcf	3,5	;RP0=0, select bank0
  1916     03A9  1303               	bcf	3,6	;RP1=0, select bank0
  1917     03AA  07C7               	addwf	UART_send_packet@i,f
  1918     03AB  1803               	skipnc
  1919     03AC  0AC8               	incf	UART_send_packet@i+1,f
  1920     03AD  3000               	movlw	0
  1921     03AE  07C8               	addwf	UART_send_packet@i+1,f
  1922     03AF                     l2052:
  1923     03AF  3000               	movlw	0
  1924     03B0  0248               	subwf	UART_send_packet@i+1,w
  1925     03B1  300E               	movlw	14
  1926     03B2  1903               	skipnz
  1927     03B3  0247               	subwf	UART_send_packet@i,w
  1928     03B4  1C03               	skipc
  1929     03B5  2BB7               	goto	u2041
  1930     03B6  2BB8               	goto	u2040
  1931     03B7                     u2041:
  1932     03B7  2B9D               	goto	l2048
  1933     03B8                     u2040:
  1934     03B8                     l35:
  1935     03B8  0008               	return
  1936     03B9                     __end_of_UART_send_packet:
  1937                           
  1938                           	psect	text9
  1939     048F                     __ptext9:	
  1940 ;; *************** function _strncpy *****************
  1941 ;; Defined at:
  1942 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strncpy.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;  to              1    wreg     PTR unsigned char 
  1945 ;;		 -> main@send_packet(14), 
  1946 ;;  from            1    8[BANK0 ] PTR const unsigned char 
  1947 ;;		 -> STR_3(6), STR_1(5), 
  1948 ;;  size            2    9[BANK0 ] unsigned int 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;  to              1   12[BANK0 ] PTR unsigned char 
  1951 ;;		 -> main@send_packet(14), 
  1952 ;;  cp              1   13[BANK0 ] PTR unsigned char 
  1953 ;;		 -> main@send_packet(14), 
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  1    wreg      PTR unsigned char 
  1956 ;; Registers used:
  1957 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1963 ;;      Params:         0       3       0       0       0
  1964 ;;      Locals:         0       2       0       0       0
  1965 ;;      Temps:          0       1       0       0       0
  1966 ;;      Totals:         0       6       0       0       0
  1967 ;;Total ram usage:        6 bytes
  1968 ;; Hardware stack levels used: 1
  1969 ;; Hardware stack levels required when called: 3
  1970 ;; This function calls:
  1971 ;;		Nothing
  1972 ;; This function is called by:
  1973 ;;		_UART_send_packet
  1974 ;;		_main
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978     048F                     _strncpy:	
  1979                           ;psect for function _strncpy
  1980                           
  1981                           
  1982                           ;incstack = 0
  1983                           ; Regs used in _strncpy: [wreg-fsr0h+status,2+status,0+pclath]
  1984                           ;strncpy@to stored from wreg
  1985     048F  1283               	bcf	3,5	;RP0=0, select bank0
  1986     0490  1303               	bcf	3,6	;RP1=0, select bank0
  1987     0491  00AC               	movwf	strncpy@to
  1988     0492                     l1824:
  1989     0492  082C               	movf	strncpy@to,w
  1990     0493  00AD               	movwf	strncpy@cp
  1991     0494  2CB3               	goto	l1832
  1992     0495                     l1826:
  1993     0495  3001               	movlw	1
  1994     0496  02A9               	subwf	strncpy@size,f
  1995     0497  3000               	movlw	0
  1996     0498  1C03               	skipc
  1997     0499  03AA               	decf	strncpy@size+1,f
  1998     049A  02AA               	subwf	strncpy@size+1,f
  1999     049B                     l1828:
  2000     049B  3001               	movlw	1
  2001     049C  07A8               	addwf	strncpy@from,f
  2002     049D  30FF               	movlw	-1
  2003     049E  0728               	addwf	strncpy@from,w
  2004     049F  0084               	movwf	4
  2005     04A0  120A  118A  260A  120A  118A  	fcall	stringdir
  2006     04A5  00AB               	movwf	??_strncpy
  2007     04A6  082D               	movf	strncpy@cp,w
  2008     04A7  0084               	movwf	4
  2009     04A8  3001               	movlw	1
  2010     04A9  07AD               	addwf	strncpy@cp,f
  2011     04AA  082B               	movf	??_strncpy,w
  2012     04AB  1783               	bsf	3,7	;select IRP bank2
  2013     04AC  0080               	movwf	0
  2014     04AD  0800               	movf	0,w
  2015     04AE  1D03               	btfss	3,2
  2016     04AF  2CB1               	goto	u1601
  2017     04B0  2CB2               	goto	u1600
  2018     04B1                     u1601:
  2019     04B1  2CB3               	goto	l1832
  2020     04B2                     u1600:
  2021     04B2  2CC2               	goto	l1838
  2022     04B3                     l1832:
  2023     04B3  0829               	movf	strncpy@size,w
  2024     04B4  042A               	iorwf	strncpy@size+1,w
  2025     04B5  1D03               	btfss	3,2
  2026     04B6  2CB8               	goto	u1611
  2027     04B7  2CB9               	goto	u1610
  2028     04B8                     u1611:
  2029     04B8  2C95               	goto	l1826
  2030     04B9                     u1610:
  2031     04B9  2CC2               	goto	l1838
  2032     04BA                     l1834:
  2033     04BA  082D               	movf	strncpy@cp,w
  2034     04BB  0084               	movwf	4
  2035     04BC  1783               	bsf	3,7	;select IRP bank2
  2036     04BD  0180               	clrf	0
  2037     04BE                     l1836:
  2038     04BE  3001               	movlw	1
  2039     04BF  00AB               	movwf	??_strncpy
  2040     04C0  082B               	movf	??_strncpy,w
  2041     04C1  07AD               	addwf	strncpy@cp,f
  2042     04C2                     l1838:
  2043     04C2  3001               	movlw	1
  2044     04C3  02A9               	subwf	strncpy@size,f
  2045     04C4  3000               	movlw	0
  2046     04C5  1C03               	skipc
  2047     04C6  03AA               	decf	strncpy@size+1,f
  2048     04C7  02AA               	subwf	strncpy@size+1,f
  2049     04C8  0A29               	incf	strncpy@size,w
  2050     04C9  1D03               	skipz
  2051     04CA  2CCF               	goto	u1621
  2052     04CB  0A2A               	incf	strncpy@size+1,w
  2053     04CC  1D03               	btfss	3,2
  2054     04CD  2CCF               	goto	u1621
  2055     04CE  2CD0               	goto	u1620
  2056     04CF                     u1621:
  2057     04CF  2CBA               	goto	l1834
  2058     04D0                     u1620:
  2059     04D0                     l756:
  2060     04D0  0008               	return
  2061     04D1                     __end_of_strncpy:
  2062                           
  2063                           	psect	text10
  2064     0583                     __ptext10:	
  2065 ;; *************** function _memcpy *****************
  2066 ;; Defined at:
  2067 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\memcpy.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;  d1              2   12[BANK0 ] PTR void 
  2070 ;;		 -> main@packet(14), receive_queue(42), UART_send_packet@buffer(15), 
  2071 ;;  s1              2   14[BANK0 ] PTR const void 
  2072 ;;		 -> main@send_packet(14), receive_queue(42), UART_data_received@buffer(15), 
  2073 ;;  n               2   16[BANK0 ] unsigned int 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;  s               2   21[BANK0 ] PTR const unsigned char 
  2076 ;;		 -> main@send_packet(14), receive_queue(42), UART_data_received@buffer(15), 
  2077 ;;  d               2   19[BANK0 ] PTR unsigned char 
  2078 ;;		 -> main@packet(14), receive_queue(42), UART_send_packet@buffer(15), 
  2079 ;;  tmp             1   18[BANK0 ] unsigned char 
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  2   12[BANK0 ] PTR void 
  2082 ;; Registers used:
  2083 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2089 ;;      Params:         0       6       0       0       0
  2090 ;;      Locals:         0       5       0       0       0
  2091 ;;      Temps:          0       0       0       0       0
  2092 ;;      Totals:         0      11       0       0       0
  2093 ;;Total ram usage:       11 bytes
  2094 ;; Hardware stack levels used: 1
  2095 ;; Hardware stack levels required when called: 3
  2096 ;; This function calls:
  2097 ;;		Nothing
  2098 ;; This function is called by:
  2099 ;;		_UART_send_packet
  2100 ;;		_received_queue_get_packet
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104     0583                     _memcpy:	
  2105                           ;psect for function _memcpy
  2106                           
  2107     0583                     l1840:	
  2108                           ;incstack = 0
  2109                           ; Regs used in _memcpy: [wreg-fsr0h+status,2+status,0]
  2110                           
  2111     0583  1283               	bcf	3,5	;RP0=0, select bank0
  2112     0584  1303               	bcf	3,6	;RP1=0, select bank0
  2113     0585  082E               	movf	memcpy@s1,w
  2114     0586  00B5               	movwf	memcpy@s
  2115     0587  082F               	movf	memcpy@s1+1,w
  2116     0588  00B6               	movwf	memcpy@s+1
  2117     0589  082C               	movf	memcpy@d1,w
  2118     058A  00B3               	movwf	memcpy@d
  2119     058B  082D               	movf	memcpy@d1+1,w
  2120     058C  00B4               	movwf	memcpy@d+1
  2121     058D  2DA8               	goto	l1848
  2122     058E                     l1842:
  2123     058E  0835               	movf	memcpy@s,w
  2124     058F  0084               	movwf	4
  2125     0590  1783               	bsf	3,7
  2126     0591  1C36               	btfss	memcpy@s+1,0
  2127     0592  1383               	bcf	3,7
  2128     0593  0800               	movf	0,w
  2129     0594  00B2               	movwf	memcpy@tmp
  2130     0595                     l1844:
  2131     0595  3001               	movlw	1
  2132     0596  07B5               	addwf	memcpy@s,f
  2133     0597  1803               	skipnc
  2134     0598  0AB6               	incf	memcpy@s+1,f
  2135     0599  3000               	movlw	0
  2136     059A  07B6               	addwf	memcpy@s+1,f
  2137     059B                     l1846:
  2138     059B  0833               	movf	memcpy@d,w
  2139     059C  0084               	movwf	4
  2140     059D  1783               	bsf	3,7
  2141     059E  1C34               	btfss	memcpy@d+1,0
  2142     059F  1383               	bcf	3,7
  2143     05A0  0832               	movf	memcpy@tmp,w
  2144     05A1  0080               	movwf	0
  2145     05A2  3001               	movlw	1
  2146     05A3  07B3               	addwf	memcpy@d,f
  2147     05A4  1803               	skipnc
  2148     05A5  0AB4               	incf	memcpy@d+1,f
  2149     05A6  3000               	movlw	0
  2150     05A7  07B4               	addwf	memcpy@d+1,f
  2151     05A8                     l1848:
  2152     05A8  3001               	movlw	1
  2153     05A9  02B0               	subwf	memcpy@n,f
  2154     05AA  3000               	movlw	0
  2155     05AB  1C03               	skipc
  2156     05AC  03B1               	decf	memcpy@n+1,f
  2157     05AD  02B1               	subwf	memcpy@n+1,f
  2158     05AE  0A30               	incf	memcpy@n,w
  2159     05AF  1D03               	skipz
  2160     05B0  2DB5               	goto	u1631
  2161     05B1  0A31               	incf	memcpy@n+1,w
  2162     05B2  1D03               	btfss	3,2
  2163     05B3  2DB5               	goto	u1631
  2164     05B4  2DB6               	goto	u1630
  2165     05B5                     u1631:
  2166     05B5  2D8E               	goto	l1842
  2167     05B6                     u1630:
  2168     05B6                     l740:
  2169     05B6  0008               	return
  2170     05B7                     __end_of_memcpy:
  2171                           
  2172                           	psect	text11
  2173     06CA                     __ptext11:	
  2174 ;; *************** function _UART_TxByte *****************
  2175 ;; Defined at:
  2176 ;;		line 82 in file "communication/communication.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  byte            1    wreg     unsigned char 
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;  byte            1    9[BANK0 ] unsigned char 
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  1    wreg      void 
  2183 ;; Registers used:
  2184 ;;		wreg, status,2, status,0
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2190 ;;      Params:         0       0       0       0       0
  2191 ;;      Locals:         0       1       0       0       0
  2192 ;;      Temps:          0       1       0       0       0
  2193 ;;      Totals:         0       2       0       0       0
  2194 ;;Total ram usage:        2 bytes
  2195 ;; Hardware stack levels used: 1
  2196 ;; Hardware stack levels required when called: 3
  2197 ;; This function calls:
  2198 ;;		Nothing
  2199 ;; This function is called by:
  2200 ;;		_UART_send_packet
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204     06CA                     _UART_TxByte:	
  2205                           ;psect for function _UART_TxByte
  2206                           
  2207                           
  2208                           ;incstack = 0
  2209                           ; Regs used in _UART_TxByte: [wreg+status,2+status,0]
  2210                           ;UART_TxByte@byte stored from wreg
  2211     06CA  1283               	bcf	3,5	;RP0=0, select bank0
  2212     06CB  1303               	bcf	3,6	;RP1=0, select bank0
  2213     06CC  00A9               	movwf	UART_TxByte@byte
  2214     06CD                     l1850:
  2215                           
  2216                           ;communication/communication.c: 83:     TRISC &= ~0x40;
  2217     06CD  30BF               	movlw	191
  2218     06CE  00A8               	movwf	??_UART_TxByte
  2219     06CF  0828               	movf	??_UART_TxByte,w
  2220     06D0  1683               	bsf	3,5	;RP0=1, select bank1
  2221     06D1  1303               	bcf	3,6	;RP1=0, select bank1
  2222     06D2  0587               	andwf	7,f	;volatile
  2223     06D3                     l1852:
  2224                           
  2225                           ;communication/communication.c: 84:     TRISC |= 0x80;
  2226     06D3  1787               	bsf	7,7	;volatile
  2227     06D4                     l61:	
  2228                           ;communication/communication.c: 85:     while (!(PIR1 & 0x10));
  2229                           
  2230     06D4  1283               	bcf	3,5	;RP0=0, select bank0
  2231     06D5  1E0C               	btfss	12,4	;volatile
  2232     06D6  2ED8               	goto	u1641
  2233     06D7  2ED9               	goto	u1640
  2234     06D8                     u1641:
  2235     06D8  2ED4               	goto	l61
  2236     06D9                     u1640:
  2237     06D9                     l1854:
  2238                           
  2239                           ;communication/communication.c: 86:     PIR1 &= ~0x10;
  2240     06D9  30EF               	movlw	239
  2241     06DA  00A8               	movwf	??_UART_TxByte
  2242     06DB  0828               	movf	??_UART_TxByte,w
  2243     06DC  058C               	andwf	12,f	;volatile
  2244     06DD                     l1856:
  2245                           
  2246                           ;communication/communication.c: 87:     TXREG = byte;
  2247     06DD  0829               	movf	UART_TxByte@byte,w
  2248     06DE  0099               	movwf	25	;volatile
  2249     06DF                     l64:
  2250     06DF  0008               	return
  2251     06E0                     __end_of_UART_TxByte:
  2252                           
  2253                           	psect	text12
  2254     0030                     __ptext12:	
  2255 ;; *************** function _Lcd_Write_Int *****************
  2256 ;; Defined at:
  2257 ;;		line 121 in file "peripherals/lcd.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  val             2   20[BANK0 ] int 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  t               2   55[BANK1 ] int 
  2262 ;;  buffer         50    0[BANK1 ] unsigned char [50]
  2263 ;;  i               2   57[BANK1 ] int 
  2264 ;;  n               2   53[BANK1 ] int 
  2265 ;;  n1              2   51[BANK1 ] unsigned int 
  2266 ;;  isNeg           1   50[BANK1 ] unsigned char 
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  2   20[BANK0 ] PTR unsigned char 
  2269 ;; Registers used:
  2270 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2276 ;;      Params:         0       2       0       0       0
  2277 ;;      Locals:         0       0      59       0       0
  2278 ;;      Temps:          0       3       0       0       0
  2279 ;;      Totals:         0       5      59       0       0
  2280 ;;Total ram usage:       64 bytes
  2281 ;; Hardware stack levels used: 1
  2282 ;; Hardware stack levels required when called: 6
  2283 ;; This function calls:
  2284 ;;		_Lcd_Write_String
  2285 ;;		___awdiv
  2286 ;;		___lwdiv
  2287 ;;		___lwmod
  2288 ;; This function is called by:
  2289 ;;		_main
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293     0030                     _Lcd_Write_Int:	
  2294                           ;psect for function _Lcd_Write_Int
  2295                           
  2296     0030                     l2120:	
  2297                           ;incstack = 0
  2298                           ; Regs used in _Lcd_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2299                           
  2300                           
  2301                           ;peripherals/lcd.c: 123:     int n = val;
  2302     0030  1283               	bcf	3,5	;RP0=0, select bank0
  2303     0031  1303               	bcf	3,6	;RP1=0, select bank0
  2304     0032  0835               	movf	Lcd_Write_Int@val+1,w
  2305     0033  1683               	bsf	3,5	;RP0=1, select bank1
  2306     0034  1303               	bcf	3,6	;RP1=0, select bank1
  2307     0035  00D6               	movwf	(Lcd_Write_Int@n+1)^(0+128)
  2308     0036  1283               	bcf	3,5	;RP0=0, select bank0
  2309     0037  1303               	bcf	3,6	;RP1=0, select bank0
  2310     0038  0834               	movf	Lcd_Write_Int@val,w
  2311     0039  1683               	bsf	3,5	;RP0=1, select bank1
  2312     003A  1303               	bcf	3,6	;RP1=0, select bank1
  2313     003B  00D5               	movwf	Lcd_Write_Int@n^(0+128)
  2314     003C                     l2122:
  2315                           
  2316                           ;peripherals/lcd.c: 124:     char buffer[50];;peripherals/lcd.c: 125:     int i = 0;
  2317     003C  01D9               	clrf	Lcd_Write_Int@i^(0+128)
  2318     003D  01DA               	clrf	(Lcd_Write_Int@i+1)^(0+128)
  2319     003E                     l2124:
  2320                           
  2321                           ;peripherals/lcd.c: 126:     char isNeg = n < 0;
  2322     003E  1BD6               	btfsc	(Lcd_Write_Int@n+1)^(0+128),7
  2323     003F  2841               	goto	u2091
  2324     0040  2843               	goto	u2090
  2325     0041                     u2091:
  2326     0041  3001               	movlw	1
  2327     0042  2844               	goto	u2100
  2328     0043                     u2090:
  2329     0043  3000               	movlw	0
  2330     0044                     u2100:
  2331     0044  00D2               	movwf	Lcd_Write_Int@isNeg^(0+128)
  2332     0045                     l2126:
  2333                           
  2334                           ;peripherals/lcd.c: 128:     unsigned int n1 = isNeg ? -n : n;
  2335     0045  0852               	movf	Lcd_Write_Int@isNeg^(0+128),w
  2336     0046  1D03               	btfss	3,2
  2337     0047  2849               	goto	u2111
  2338     0048  284A               	goto	u2110
  2339     0049                     u2111:
  2340     0049  284F               	goto	l2130
  2341     004A                     u2110:
  2342     004A                     l2128:
  2343     004A  0856               	movf	(Lcd_Write_Int@n+1)^(0+128),w
  2344     004B  00D4               	movwf	(Lcd_Write_Int@n1+1)^(0+128)
  2345     004C  0855               	movf	Lcd_Write_Int@n^(0+128),w
  2346     004D  00D3               	movwf	Lcd_Write_Int@n1^(0+128)
  2347     004E  28B2               	goto	l2138
  2348     004F                     l2130:
  2349     004F  0955               	comf	Lcd_Write_Int@n^(0+128),w
  2350     0050  1283               	bcf	3,5	;RP0=0, select bank0
  2351     0051  1303               	bcf	3,6	;RP1=0, select bank0
  2352     0052  00B6               	movwf	??_Lcd_Write_Int
  2353     0053  1683               	bsf	3,5	;RP0=1, select bank1
  2354     0054  1303               	bcf	3,6	;RP1=0, select bank1
  2355     0055  0956               	comf	(Lcd_Write_Int@n+1)^(0+128),w
  2356     0056  1283               	bcf	3,5	;RP0=0, select bank0
  2357     0057  1303               	bcf	3,6	;RP1=0, select bank0
  2358     0058  00B7               	movwf	??_Lcd_Write_Int+1
  2359     0059  0AB6               	incf	??_Lcd_Write_Int,f
  2360     005A  1903               	skipnz
  2361     005B  0AB7               	incf	??_Lcd_Write_Int+1,f
  2362     005C  0836               	movf	??_Lcd_Write_Int,w
  2363     005D  1683               	bsf	3,5	;RP0=1, select bank1
  2364     005E  1303               	bcf	3,6	;RP1=0, select bank1
  2365     005F  00D3               	movwf	Lcd_Write_Int@n1^(0+128)
  2366     0060  1283               	bcf	3,5	;RP0=0, select bank0
  2367     0061  1303               	bcf	3,6	;RP1=0, select bank0
  2368     0062  0837               	movf	??_Lcd_Write_Int+1,w
  2369     0063  1683               	bsf	3,5	;RP0=1, select bank1
  2370     0064  1303               	bcf	3,6	;RP1=0, select bank1
  2371     0065  00D4               	movwf	(Lcd_Write_Int@n1+1)^(0+128)
  2372     0066  28B2               	goto	l2138
  2373     0067                     l2132:
  2374                           
  2375                           ;peripherals/lcd.c: 131:         buffer[i++] = n1 % 10 + '0';
  2376     0067  0859               	movf	Lcd_Write_Int@i^(0+128),w
  2377     0068  3EA0               	addlw	(low (Lcd_Write_Int@buffer| 0))& (0+255)
  2378     0069  0084               	movwf	4
  2379     006A  300A               	movlw	10
  2380     006B  1283               	bcf	3,5	;RP0=0, select bank0
  2381     006C  1303               	bcf	3,6	;RP1=0, select bank0
  2382     006D  00A8               	movwf	___lwmod@divisor
  2383     006E  3000               	movlw	0
  2384     006F  00A9               	movwf	___lwmod@divisor+1
  2385     0070  1683               	bsf	3,5	;RP0=1, select bank1
  2386     0071  1303               	bcf	3,6	;RP1=0, select bank1
  2387     0072  0854               	movf	(Lcd_Write_Int@n1+1)^(0+128),w
  2388     0073  1283               	bcf	3,5	;RP0=0, select bank0
  2389     0074  1303               	bcf	3,6	;RP1=0, select bank0
  2390     0075  00AB               	movwf	___lwmod@dividend+1
  2391     0076  1683               	bsf	3,5	;RP0=1, select bank1
  2392     0077  1303               	bcf	3,6	;RP1=0, select bank1
  2393     0078  0853               	movf	Lcd_Write_Int@n1^(0+128),w
  2394     0079  1283               	bcf	3,5	;RP0=0, select bank0
  2395     007A  1303               	bcf	3,6	;RP1=0, select bank0
  2396     007B  00AA               	movwf	___lwmod@dividend
  2397     007C  120A  118A  250E  120A  118A  	fcall	___lwmod
  2398     0081  1283               	bcf	3,5	;RP0=0, select bank0
  2399     0082  1303               	bcf	3,6	;RP1=0, select bank0
  2400     0083  0828               	movf	?___lwmod,w
  2401     0084  3E30               	addlw	48
  2402     0085  1383               	bcf	3,7	;select IRP bank1
  2403     0086  0080               	movwf	0
  2404     0087                     l2134:
  2405     0087  3001               	movlw	1
  2406     0088  1683               	bsf	3,5	;RP0=1, select bank1
  2407     0089  1303               	bcf	3,6	;RP1=0, select bank1
  2408     008A  07D9               	addwf	Lcd_Write_Int@i^(0+128),f
  2409     008B  1803               	skipnc
  2410     008C  0ADA               	incf	(Lcd_Write_Int@i+1)^(0+128),f
  2411     008D  3000               	movlw	0
  2412     008E  07DA               	addwf	(Lcd_Write_Int@i+1)^(0+128),f
  2413     008F                     l2136:
  2414                           
  2415                           ;peripherals/lcd.c: 132:         n1 = n1 / 10;
  2416     008F  300A               	movlw	10
  2417     0090  1283               	bcf	3,5	;RP0=0, select bank0
  2418     0091  1303               	bcf	3,6	;RP1=0, select bank0
  2419     0092  00A8               	movwf	___lwdiv@divisor
  2420     0093  3000               	movlw	0
  2421     0094  00A9               	movwf	___lwdiv@divisor+1
  2422     0095  1683               	bsf	3,5	;RP0=1, select bank1
  2423     0096  1303               	bcf	3,6	;RP1=0, select bank1
  2424     0097  0854               	movf	(Lcd_Write_Int@n1+1)^(0+128),w
  2425     0098  1283               	bcf	3,5	;RP0=0, select bank0
  2426     0099  1303               	bcf	3,6	;RP1=0, select bank0
  2427     009A  00AB               	movwf	___lwdiv@dividend+1
  2428     009B  1683               	bsf	3,5	;RP0=1, select bank1
  2429     009C  1303               	bcf	3,6	;RP1=0, select bank1
  2430     009D  0853               	movf	Lcd_Write_Int@n1^(0+128),w
  2431     009E  1283               	bcf	3,5	;RP0=0, select bank0
  2432     009F  1303               	bcf	3,6	;RP1=0, select bank0
  2433     00A0  00AA               	movwf	___lwdiv@dividend
  2434     00A1  120A  118A  2403  120A  118A  	fcall	___lwdiv
  2435     00A6  1283               	bcf	3,5	;RP0=0, select bank0
  2436     00A7  1303               	bcf	3,6	;RP1=0, select bank0
  2437     00A8  0829               	movf	?___lwdiv+1,w
  2438     00A9  1683               	bsf	3,5	;RP0=1, select bank1
  2439     00AA  1303               	bcf	3,6	;RP1=0, select bank1
  2440     00AB  00D4               	movwf	(Lcd_Write_Int@n1+1)^(0+128)
  2441     00AC  1283               	bcf	3,5	;RP0=0, select bank0
  2442     00AD  1303               	bcf	3,6	;RP1=0, select bank0
  2443     00AE  0828               	movf	?___lwdiv,w
  2444     00AF  1683               	bsf	3,5	;RP0=1, select bank1
  2445     00B0  1303               	bcf	3,6	;RP1=0, select bank1
  2446     00B1  00D3               	movwf	Lcd_Write_Int@n1^(0+128)
  2447     00B2                     l2138:
  2448                           
  2449                           ;peripherals/lcd.c: 130:     while (n1 != 0) {
  2450     00B2  0853               	movf	Lcd_Write_Int@n1^(0+128),w
  2451     00B3  0454               	iorwf	(Lcd_Write_Int@n1+1)^(0+128),w
  2452     00B4  1D03               	btfss	3,2
  2453     00B5  28B7               	goto	u2121
  2454     00B6  28B8               	goto	u2120
  2455     00B7                     u2121:
  2456     00B7  2867               	goto	l2132
  2457     00B8                     u2120:
  2458     00B8                     l2140:
  2459                           
  2460                           ;peripherals/lcd.c: 135:     if (isNeg)
  2461     00B8  0852               	movf	Lcd_Write_Int@isNeg^(0+128),w
  2462     00B9  1903               	btfsc	3,2
  2463     00BA  28BC               	goto	u2131
  2464     00BB  28BD               	goto	u2130
  2465     00BC                     u2131:
  2466     00BC  28C9               	goto	l2146
  2467     00BD                     u2130:
  2468     00BD                     l2142:
  2469                           
  2470                           ;peripherals/lcd.c: 136:         buffer[i++] = '-';
  2471     00BD  0859               	movf	Lcd_Write_Int@i^(0+128),w
  2472     00BE  3EA0               	addlw	(low (Lcd_Write_Int@buffer| 0))& (0+255)
  2473     00BF  0084               	movwf	4
  2474     00C0  302D               	movlw	45
  2475     00C1  1383               	bcf	3,7	;select IRP bank1
  2476     00C2  0080               	movwf	0
  2477     00C3                     l2144:
  2478     00C3  3001               	movlw	1
  2479     00C4  07D9               	addwf	Lcd_Write_Int@i^(0+128),f
  2480     00C5  1803               	skipnc
  2481     00C6  0ADA               	incf	(Lcd_Write_Int@i+1)^(0+128),f
  2482     00C7  3000               	movlw	0
  2483     00C8  07DA               	addwf	(Lcd_Write_Int@i+1)^(0+128),f
  2484     00C9                     l2146:
  2485                           
  2486                           ;peripherals/lcd.c: 138:     buffer[i] = '\0';
  2487     00C9  0859               	movf	Lcd_Write_Int@i^(0+128),w
  2488     00CA  3EA0               	addlw	(low (Lcd_Write_Int@buffer| 0))& (0+255)
  2489     00CB  0084               	movwf	4
  2490     00CC  1383               	bcf	3,7	;select IRP bank1
  2491     00CD  0180               	clrf	0
  2492     00CE                     l2148:
  2493                           
  2494                           ;peripherals/lcd.c: 140:     for (int t = 0; t < i / 2; t++) {
  2495     00CE  01D7               	clrf	Lcd_Write_Int@t^(0+128)
  2496     00CF  01D8               	clrf	(Lcd_Write_Int@t+1)^(0+128)
  2497     00D0  2933               	goto	l2154
  2498     00D1                     l2150:
  2499                           
  2500                           ;peripherals/lcd.c: 141:         buffer[t] ^= buffer[i - t - 1];
  2501     00D1  30A0               	movlw	(low (Lcd_Write_Int@buffer| 0))& (0+255)
  2502     00D2  1283               	bcf	3,5	;RP0=0, select bank0
  2503     00D3  1303               	bcf	3,6	;RP1=0, select bank0
  2504     00D4  00B6               	movwf	??_Lcd_Write_Int
  2505     00D5  1683               	bsf	3,5	;RP0=1, select bank1
  2506     00D6  1303               	bcf	3,6	;RP1=0, select bank1
  2507     00D7  0857               	movf	Lcd_Write_Int@t^(0+128),w
  2508     00D8  1283               	bcf	3,5	;RP0=0, select bank0
  2509     00D9  1303               	bcf	3,6	;RP1=0, select bank0
  2510     00DA  02B6               	subwf	??_Lcd_Write_Int,f
  2511     00DB  1683               	bsf	3,5	;RP0=1, select bank1
  2512     00DC  1303               	bcf	3,6	;RP1=0, select bank1
  2513     00DD  0859               	movf	Lcd_Write_Int@i^(0+128),w
  2514     00DE  1283               	bcf	3,5	;RP0=0, select bank0
  2515     00DF  1303               	bcf	3,6	;RP1=0, select bank0
  2516     00E0  0736               	addwf	??_Lcd_Write_Int,w
  2517     00E1  00B7               	movwf	??_Lcd_Write_Int+1
  2518     00E2  0837               	movf	??_Lcd_Write_Int+1,w
  2519     00E3  3EFF               	addlw	255
  2520     00E4  0084               	movwf	4
  2521     00E5  1383               	bcf	3,7	;select IRP bank0
  2522     00E6  0800               	movf	0,w
  2523     00E7  00B8               	movwf	??_Lcd_Write_Int+2
  2524     00E8  1683               	bsf	3,5	;RP0=1, select bank1
  2525     00E9  1303               	bcf	3,6	;RP1=0, select bank1
  2526     00EA  0857               	movf	Lcd_Write_Int@t^(0+128),w
  2527     00EB  3EA0               	addlw	(low (Lcd_Write_Int@buffer| 0))& (0+255)
  2528     00EC  0084               	movwf	4
  2529     00ED  1283               	bcf	3,5	;RP0=0, select bank0
  2530     00EE  1303               	bcf	3,6	;RP1=0, select bank0
  2531     00EF  0838               	movf	??_Lcd_Write_Int+2,w
  2532     00F0  0680               	xorwf	0,f
  2533                           
  2534                           ;peripherals/lcd.c: 142:         buffer[i - t - 1] ^= buffer[t];
  2535     00F1  1683               	bsf	3,5	;RP0=1, select bank1
  2536     00F2  1303               	bcf	3,6	;RP1=0, select bank1
  2537     00F3  0857               	movf	Lcd_Write_Int@t^(0+128),w
  2538     00F4  3EA0               	addlw	(low (Lcd_Write_Int@buffer| 0))& (0+255)
  2539     00F5  0084               	movwf	4
  2540     00F6  0800               	movf	0,w
  2541     00F7  1283               	bcf	3,5	;RP0=0, select bank0
  2542     00F8  1303               	bcf	3,6	;RP1=0, select bank0
  2543     00F9  00B6               	movwf	??_Lcd_Write_Int
  2544     00FA  30A0               	movlw	(low (Lcd_Write_Int@buffer| 0))& (0+255)
  2545     00FB  00B7               	movwf	??_Lcd_Write_Int+1
  2546     00FC  1683               	bsf	3,5	;RP0=1, select bank1
  2547     00FD  1303               	bcf	3,6	;RP1=0, select bank1
  2548     00FE  0857               	movf	Lcd_Write_Int@t^(0+128),w
  2549     00FF  1283               	bcf	3,5	;RP0=0, select bank0
  2550     0100  1303               	bcf	3,6	;RP1=0, select bank0
  2551     0101  02B7               	subwf	??_Lcd_Write_Int+1,f
  2552     0102  1683               	bsf	3,5	;RP0=1, select bank1
  2553     0103  1303               	bcf	3,6	;RP1=0, select bank1
  2554     0104  0859               	movf	Lcd_Write_Int@i^(0+128),w
  2555     0105  1283               	bcf	3,5	;RP0=0, select bank0
  2556     0106  1303               	bcf	3,6	;RP1=0, select bank0
  2557     0107  0737               	addwf	??_Lcd_Write_Int+1,w
  2558     0108  00B8               	movwf	??_Lcd_Write_Int+2
  2559     0109  0838               	movf	??_Lcd_Write_Int+2,w
  2560     010A  3EFF               	addlw	255
  2561     010B  0084               	movwf	4
  2562     010C  0836               	movf	??_Lcd_Write_Int,w
  2563     010D  0680               	xorwf	0,f
  2564                           
  2565                           ;peripherals/lcd.c: 143:         buffer[t] ^= buffer[i - t - 1];
  2566     010E  30A0               	movlw	(low (Lcd_Write_Int@buffer| 0))& (0+255)
  2567     010F  00B6               	movwf	??_Lcd_Write_Int
  2568     0110  1683               	bsf	3,5	;RP0=1, select bank1
  2569     0111  1303               	bcf	3,6	;RP1=0, select bank1
  2570     0112  0857               	movf	Lcd_Write_Int@t^(0+128),w
  2571     0113  1283               	bcf	3,5	;RP0=0, select bank0
  2572     0114  1303               	bcf	3,6	;RP1=0, select bank0
  2573     0115  02B6               	subwf	??_Lcd_Write_Int,f
  2574     0116  1683               	bsf	3,5	;RP0=1, select bank1
  2575     0117  1303               	bcf	3,6	;RP1=0, select bank1
  2576     0118  0859               	movf	Lcd_Write_Int@i^(0+128),w
  2577     0119  1283               	bcf	3,5	;RP0=0, select bank0
  2578     011A  1303               	bcf	3,6	;RP1=0, select bank0
  2579     011B  0736               	addwf	??_Lcd_Write_Int,w
  2580     011C  00B7               	movwf	??_Lcd_Write_Int+1
  2581     011D  0837               	movf	??_Lcd_Write_Int+1,w
  2582     011E  3EFF               	addlw	255
  2583     011F  0084               	movwf	4
  2584     0120  0800               	movf	0,w
  2585     0121  00B8               	movwf	??_Lcd_Write_Int+2
  2586     0122  1683               	bsf	3,5	;RP0=1, select bank1
  2587     0123  1303               	bcf	3,6	;RP1=0, select bank1
  2588     0124  0857               	movf	Lcd_Write_Int@t^(0+128),w
  2589     0125  3EA0               	addlw	(low (Lcd_Write_Int@buffer| 0))& (0+255)
  2590     0126  0084               	movwf	4
  2591     0127  1283               	bcf	3,5	;RP0=0, select bank0
  2592     0128  1303               	bcf	3,6	;RP1=0, select bank0
  2593     0129  0838               	movf	??_Lcd_Write_Int+2,w
  2594     012A  0680               	xorwf	0,f
  2595     012B                     l2152:
  2596                           
  2597                           ;peripherals/lcd.c: 144:     }
  2598     012B  3001               	movlw	1
  2599     012C  1683               	bsf	3,5	;RP0=1, select bank1
  2600     012D  1303               	bcf	3,6	;RP1=0, select bank1
  2601     012E  07D7               	addwf	Lcd_Write_Int@t^(0+128),f
  2602     012F  1803               	skipnc
  2603     0130  0AD8               	incf	(Lcd_Write_Int@t+1)^(0+128),f
  2604     0131  3000               	movlw	0
  2605     0132  07D8               	addwf	(Lcd_Write_Int@t+1)^(0+128),f
  2606     0133                     l2154:
  2607     0133  3002               	movlw	2
  2608     0134  1283               	bcf	3,5	;RP0=0, select bank0
  2609     0135  1303               	bcf	3,6	;RP1=0, select bank0
  2610     0136  00A8               	movwf	___awdiv@divisor
  2611     0137  3000               	movlw	0
  2612     0138  00A9               	movwf	___awdiv@divisor+1
  2613     0139  1683               	bsf	3,5	;RP0=1, select bank1
  2614     013A  1303               	bcf	3,6	;RP1=0, select bank1
  2615     013B  085A               	movf	(Lcd_Write_Int@i+1)^(0+128),w
  2616     013C  1283               	bcf	3,5	;RP0=0, select bank0
  2617     013D  1303               	bcf	3,6	;RP1=0, select bank0
  2618     013E  00AB               	movwf	___awdiv@dividend+1
  2619     013F  1683               	bsf	3,5	;RP0=1, select bank1
  2620     0140  1303               	bcf	3,6	;RP1=0, select bank1
  2621     0141  0859               	movf	Lcd_Write_Int@i^(0+128),w
  2622     0142  1283               	bcf	3,5	;RP0=0, select bank0
  2623     0143  1303               	bcf	3,6	;RP1=0, select bank0
  2624     0144  00AA               	movwf	___awdiv@dividend
  2625     0145  120A  118A  2305  120A  118A  	fcall	___awdiv
  2626     014A  1683               	bsf	3,5	;RP0=1, select bank1
  2627     014B  1303               	bcf	3,6	;RP1=0, select bank1
  2628     014C  0858               	movf	(Lcd_Write_Int@t+1)^(0+128),w
  2629     014D  3A80               	xorlw	128
  2630     014E  1283               	bcf	3,5	;RP0=0, select bank0
  2631     014F  1303               	bcf	3,6	;RP1=0, select bank0
  2632     0150  00B6               	movwf	??_Lcd_Write_Int
  2633     0151  0829               	movf	?___awdiv+1,w
  2634     0152  3A80               	xorlw	128
  2635     0153  0236               	subwf	??_Lcd_Write_Int,w
  2636     0154  1D03               	skipz
  2637     0155  295A               	goto	u2145
  2638     0156  0828               	movf	?___awdiv,w
  2639     0157  1683               	bsf	3,5	;RP0=1, select bank1
  2640     0158  1303               	bcf	3,6	;RP1=0, select bank1
  2641     0159  0257               	subwf	Lcd_Write_Int@t^(0+128),w
  2642     015A                     u2145:
  2643     015A  1C03               	skipc
  2644     015B  295D               	goto	u2141
  2645     015C  295E               	goto	u2140
  2646     015D                     u2141:
  2647     015D  28D1               	goto	l2150
  2648     015E                     u2140:
  2649     015E                     l2156:
  2650                           
  2651                           ;peripherals/lcd.c: 146:     if (n == 0) {
  2652     015E  1683               	bsf	3,5	;RP0=1, select bank1
  2653     015F  1303               	bcf	3,6	;RP1=0, select bank1
  2654     0160  0855               	movf	Lcd_Write_Int@n^(0+128),w
  2655     0161  0456               	iorwf	(Lcd_Write_Int@n+1)^(0+128),w
  2656     0162  1D03               	btfss	3,2
  2657     0163  2965               	goto	u2151
  2658     0164  2966               	goto	u2150
  2659     0165                     u2151:
  2660     0165  2969               	goto	l2162
  2661     0166                     u2150:
  2662     0166                     l2158:
  2663                           
  2664                           ;peripherals/lcd.c: 147:         buffer[0] = '0';
  2665     0166  3030               	movlw	48
  2666     0167  00A0               	movwf	Lcd_Write_Int@buffer^(0+128)
  2667     0168                     l2160:
  2668                           
  2669                           ;peripherals/lcd.c: 148:         buffer[1] = '\0';
  2670     0168  01A1               	clrf	(Lcd_Write_Int@buffer^(0+128)+1)
  2671     0169                     l2162:
  2672                           
  2673                           ;peripherals/lcd.c: 151:     Lcd_Write_String(buffer);
  2674     0169  30A0               	movlw	(low (Lcd_Write_Int@buffer| 0))& (0+255)
  2675     016A  1283               	bcf	3,5	;RP0=0, select bank0
  2676     016B  1303               	bcf	3,6	;RP1=0, select bank0
  2677     016C  00AD               	movwf	Lcd_Write_String@a
  2678     016D  3000               	movlw	0
  2679     016E  00AE               	movwf	Lcd_Write_String@a+1
  2680     016F  120A  118A  2449  120A  118A  	fcall	_Lcd_Write_String
  2681     0174                     l130:
  2682     0174  0008               	return
  2683     0175                     __end_of_Lcd_Write_Int:
  2684                           
  2685                           	psect	text13
  2686     050E                     __ptext13:	
  2687 ;; *************** function ___lwmod *****************
  2688 ;; Defined at:
  2689 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  divisor         2    8[BANK0 ] unsigned int 
  2692 ;;  dividend        2   10[BANK0 ] unsigned int 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  counter         1   13[BANK0 ] unsigned char 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  2    8[BANK0 ] unsigned int 
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, status,0
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2704 ;;      Params:         0       4       0       0       0
  2705 ;;      Locals:         0       1       0       0       0
  2706 ;;      Temps:          0       1       0       0       0
  2707 ;;      Totals:         0       6       0       0       0
  2708 ;;Total ram usage:        6 bytes
  2709 ;; Hardware stack levels used: 1
  2710 ;; Hardware stack levels required when called: 3
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		_Lcd_Write_Int
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718     050E                     ___lwmod:	
  2719                           ;psect for function ___lwmod
  2720                           
  2721     050E                     l2004:	
  2722                           ;incstack = 0
  2723                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2724                           
  2725     050E  1283               	bcf	3,5	;RP0=0, select bank0
  2726     050F  1303               	bcf	3,6	;RP1=0, select bank0
  2727     0510  0828               	movf	___lwmod@divisor,w
  2728     0511  0429               	iorwf	___lwmod@divisor+1,w
  2729     0512  1903               	btfsc	3,2
  2730     0513  2D15               	goto	u1971
  2731     0514  2D16               	goto	u1970
  2732     0515                     u1971:
  2733     0515  2D45               	goto	l2022
  2734     0516                     u1970:
  2735     0516                     l2006:
  2736     0516  01AD               	clrf	___lwmod@counter
  2737     0517  0AAD               	incf	___lwmod@counter,f
  2738     0518  2D24               	goto	l2012
  2739     0519                     l2008:
  2740     0519  3001               	movlw	1
  2741     051A                     u1985:
  2742     051A  1003               	clrc
  2743     051B  0DA8               	rlf	___lwmod@divisor,f
  2744     051C  0DA9               	rlf	___lwmod@divisor+1,f
  2745     051D  3EFF               	addlw	-1
  2746     051E  1D03               	skipz
  2747     051F  2D1A               	goto	u1985
  2748     0520                     l2010:
  2749     0520  3001               	movlw	1
  2750     0521  00AC               	movwf	??___lwmod
  2751     0522  082C               	movf	??___lwmod,w
  2752     0523  07AD               	addwf	___lwmod@counter,f
  2753     0524                     l2012:
  2754     0524  1FA9               	btfss	___lwmod@divisor+1,7
  2755     0525  2D27               	goto	u1991
  2756     0526  2D28               	goto	u1990
  2757     0527                     u1991:
  2758     0527  2D19               	goto	l2008
  2759     0528                     u1990:
  2760     0528                     l2014:
  2761     0528  0829               	movf	___lwmod@divisor+1,w
  2762     0529  022B               	subwf	___lwmod@dividend+1,w
  2763     052A  1D03               	skipz
  2764     052B  2D2E               	goto	u2005
  2765     052C  0828               	movf	___lwmod@divisor,w
  2766     052D  022A               	subwf	___lwmod@dividend,w
  2767     052E                     u2005:
  2768     052E  1C03               	skipc
  2769     052F  2D31               	goto	u2001
  2770     0530  2D32               	goto	u2000
  2771     0531                     u2001:
  2772     0531  2D38               	goto	l2018
  2773     0532                     u2000:
  2774     0532                     l2016:
  2775     0532  0828               	movf	___lwmod@divisor,w
  2776     0533  02AA               	subwf	___lwmod@dividend,f
  2777     0534  0829               	movf	___lwmod@divisor+1,w
  2778     0535  1C03               	skipc
  2779     0536  03AB               	decf	___lwmod@dividend+1,f
  2780     0537  02AB               	subwf	___lwmod@dividend+1,f
  2781     0538                     l2018:
  2782     0538  3001               	movlw	1
  2783     0539                     u2015:
  2784     0539  1003               	clrc
  2785     053A  0CA9               	rrf	___lwmod@divisor+1,f
  2786     053B  0CA8               	rrf	___lwmod@divisor,f
  2787     053C  3EFF               	addlw	-1
  2788     053D  1D03               	skipz
  2789     053E  2D39               	goto	u2015
  2790     053F                     l2020:
  2791     053F  3001               	movlw	1
  2792     0540  02AD               	subwf	___lwmod@counter,f
  2793     0541  1D03               	btfss	3,2
  2794     0542  2D44               	goto	u2021
  2795     0543  2D45               	goto	u2020
  2796     0544                     u2021:
  2797     0544  2D28               	goto	l2014
  2798     0545                     u2020:
  2799     0545                     l2022:
  2800     0545  082B               	movf	___lwmod@dividend+1,w
  2801     0546  00A9               	movwf	?___lwmod+1
  2802     0547  082A               	movf	___lwmod@dividend,w
  2803     0548  00A8               	movwf	?___lwmod
  2804     0549                     l568:
  2805     0549  0008               	return
  2806     054A                     __end_of___lwmod:
  2807                           
  2808                           	psect	text14
  2809     0403                     __ptext14:	
  2810 ;; *************** function ___lwdiv *****************
  2811 ;; Defined at:
  2812 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  divisor         2    8[BANK0 ] unsigned int 
  2815 ;;  dividend        2   10[BANK0 ] unsigned int 
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  quotient        2   14[BANK0 ] unsigned int 
  2818 ;;  counter         1   13[BANK0 ] unsigned char 
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  2    8[BANK0 ] unsigned int 
  2821 ;; Registers used:
  2822 ;;		wreg, status,2, status,0
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2828 ;;      Params:         0       4       0       0       0
  2829 ;;      Locals:         0       3       0       0       0
  2830 ;;      Temps:          0       1       0       0       0
  2831 ;;      Totals:         0       8       0       0       0
  2832 ;;Total ram usage:        8 bytes
  2833 ;; Hardware stack levels used: 1
  2834 ;; Hardware stack levels required when called: 3
  2835 ;; This function calls:
  2836 ;;		Nothing
  2837 ;; This function is called by:
  2838 ;;		_Lcd_Write_Int
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842     0403                     ___lwdiv:	
  2843                           ;psect for function ___lwdiv
  2844                           
  2845     0403                     l1978:	
  2846                           ;incstack = 0
  2847                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2848                           
  2849     0403  1283               	bcf	3,5	;RP0=0, select bank0
  2850     0404  1303               	bcf	3,6	;RP1=0, select bank0
  2851     0405  01AE               	clrf	___lwdiv@quotient
  2852     0406  01AF               	clrf	___lwdiv@quotient+1
  2853     0407                     l1980:
  2854     0407  0828               	movf	___lwdiv@divisor,w
  2855     0408  0429               	iorwf	___lwdiv@divisor+1,w
  2856     0409  1903               	btfsc	3,2
  2857     040A  2C0C               	goto	u1901
  2858     040B  2C0D               	goto	u1900
  2859     040C                     u1901:
  2860     040C  2C44               	goto	l2000
  2861     040D                     u1900:
  2862     040D                     l1982:
  2863     040D  01AD               	clrf	___lwdiv@counter
  2864     040E  0AAD               	incf	___lwdiv@counter,f
  2865     040F  2C1B               	goto	l1988
  2866     0410                     l1984:
  2867     0410  3001               	movlw	1
  2868     0411                     u1915:
  2869     0411  1003               	clrc
  2870     0412  0DA8               	rlf	___lwdiv@divisor,f
  2871     0413  0DA9               	rlf	___lwdiv@divisor+1,f
  2872     0414  3EFF               	addlw	-1
  2873     0415  1D03               	skipz
  2874     0416  2C11               	goto	u1915
  2875     0417                     l1986:
  2876     0417  3001               	movlw	1
  2877     0418  00AC               	movwf	??___lwdiv
  2878     0419  082C               	movf	??___lwdiv,w
  2879     041A  07AD               	addwf	___lwdiv@counter,f
  2880     041B                     l1988:
  2881     041B  1FA9               	btfss	___lwdiv@divisor+1,7
  2882     041C  2C1E               	goto	u1921
  2883     041D  2C1F               	goto	u1920
  2884     041E                     u1921:
  2885     041E  2C10               	goto	l1984
  2886     041F                     u1920:
  2887     041F                     l1990:
  2888     041F  3001               	movlw	1
  2889     0420                     u1935:
  2890     0420  1003               	clrc
  2891     0421  0DAE               	rlf	___lwdiv@quotient,f
  2892     0422  0DAF               	rlf	___lwdiv@quotient+1,f
  2893     0423  3EFF               	addlw	-1
  2894     0424  1D03               	skipz
  2895     0425  2C20               	goto	u1935
  2896     0426  0829               	movf	___lwdiv@divisor+1,w
  2897     0427  022B               	subwf	___lwdiv@dividend+1,w
  2898     0428  1D03               	skipz
  2899     0429  2C2C               	goto	u1945
  2900     042A  0828               	movf	___lwdiv@divisor,w
  2901     042B  022A               	subwf	___lwdiv@dividend,w
  2902     042C                     u1945:
  2903     042C  1C03               	skipc
  2904     042D  2C2F               	goto	u1941
  2905     042E  2C30               	goto	u1940
  2906     042F                     u1941:
  2907     042F  2C37               	goto	l1996
  2908     0430                     u1940:
  2909     0430                     l1992:
  2910     0430  0828               	movf	___lwdiv@divisor,w
  2911     0431  02AA               	subwf	___lwdiv@dividend,f
  2912     0432  0829               	movf	___lwdiv@divisor+1,w
  2913     0433  1C03               	skipc
  2914     0434  03AB               	decf	___lwdiv@dividend+1,f
  2915     0435  02AB               	subwf	___lwdiv@dividend+1,f
  2916     0436                     l1994:
  2917     0436  142E               	bsf	___lwdiv@quotient,0
  2918     0437                     l1996:
  2919     0437  3001               	movlw	1
  2920     0438                     u1955:
  2921     0438  1003               	clrc
  2922     0439  0CA9               	rrf	___lwdiv@divisor+1,f
  2923     043A  0CA8               	rrf	___lwdiv@divisor,f
  2924     043B  3EFF               	addlw	-1
  2925     043C  1D03               	skipz
  2926     043D  2C38               	goto	u1955
  2927     043E                     l1998:
  2928     043E  3001               	movlw	1
  2929     043F  02AD               	subwf	___lwdiv@counter,f
  2930     0440  1D03               	btfss	3,2
  2931     0441  2C43               	goto	u1961
  2932     0442  2C44               	goto	u1960
  2933     0443                     u1961:
  2934     0443  2C1F               	goto	l1990
  2935     0444                     u1960:
  2936     0444                     l2000:
  2937     0444  082F               	movf	___lwdiv@quotient+1,w
  2938     0445  00A9               	movwf	?___lwdiv+1
  2939     0446  082E               	movf	___lwdiv@quotient,w
  2940     0447  00A8               	movwf	?___lwdiv
  2941     0448                     l558:
  2942     0448  0008               	return
  2943     0449                     __end_of___lwdiv:
  2944                           
  2945                           	psect	text15
  2946     0305                     __ptext15:	
  2947 ;; *************** function ___awdiv *****************
  2948 ;; Defined at:
  2949 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;  divisor         2    8[BANK0 ] int 
  2952 ;;  dividend        2   10[BANK0 ] int 
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  quotient        2   15[BANK0 ] int 
  2955 ;;  sign            1   14[BANK0 ] unsigned char 
  2956 ;;  counter         1   13[BANK0 ] unsigned char 
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  2    8[BANK0 ] int 
  2959 ;; Registers used:
  2960 ;;		wreg, status,2, status,0
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2966 ;;      Params:         0       4       0       0       0
  2967 ;;      Locals:         0       4       0       0       0
  2968 ;;      Temps:          0       1       0       0       0
  2969 ;;      Totals:         0       9       0       0       0
  2970 ;;Total ram usage:        9 bytes
  2971 ;; Hardware stack levels used: 1
  2972 ;; Hardware stack levels required when called: 3
  2973 ;; This function calls:
  2974 ;;		Nothing
  2975 ;; This function is called by:
  2976 ;;		_Lcd_Write_Int
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980     0305                     ___awdiv:	
  2981                           ;psect for function ___awdiv
  2982                           
  2983     0305                     l1934:	
  2984                           ;incstack = 0
  2985                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2986                           
  2987     0305  1283               	bcf	3,5	;RP0=0, select bank0
  2988     0306  1303               	bcf	3,6	;RP1=0, select bank0
  2989     0307  01AE               	clrf	___awdiv@sign
  2990     0308                     l1936:
  2991     0308  1FA9               	btfss	___awdiv@divisor+1,7
  2992     0309  2B0B               	goto	u1801
  2993     030A  2B0C               	goto	u1800
  2994     030B                     u1801:
  2995     030B  2B13               	goto	l1942
  2996     030C                     u1800:
  2997     030C                     l1938:
  2998     030C  09A8               	comf	___awdiv@divisor,f
  2999     030D  09A9               	comf	___awdiv@divisor+1,f
  3000     030E  0AA8               	incf	___awdiv@divisor,f
  3001     030F  1903               	skipnz
  3002     0310  0AA9               	incf	___awdiv@divisor+1,f
  3003     0311                     l1940:
  3004     0311  01AE               	clrf	___awdiv@sign
  3005     0312  0AAE               	incf	___awdiv@sign,f
  3006     0313                     l1942:
  3007     0313  1FAB               	btfss	___awdiv@dividend+1,7
  3008     0314  2B16               	goto	u1811
  3009     0315  2B17               	goto	u1810
  3010     0316                     u1811:
  3011     0316  2B20               	goto	l1948
  3012     0317                     u1810:
  3013     0317                     l1944:
  3014     0317  09AA               	comf	___awdiv@dividend,f
  3015     0318  09AB               	comf	___awdiv@dividend+1,f
  3016     0319  0AAA               	incf	___awdiv@dividend,f
  3017     031A  1903               	skipnz
  3018     031B  0AAB               	incf	___awdiv@dividend+1,f
  3019     031C                     l1946:
  3020     031C  3001               	movlw	1
  3021     031D  00AC               	movwf	??___awdiv
  3022     031E  082C               	movf	??___awdiv,w
  3023     031F  06AE               	xorwf	___awdiv@sign,f
  3024     0320                     l1948:
  3025     0320  01AF               	clrf	___awdiv@quotient
  3026     0321  01B0               	clrf	___awdiv@quotient+1
  3027     0322                     l1950:
  3028     0322  0828               	movf	___awdiv@divisor,w
  3029     0323  0429               	iorwf	___awdiv@divisor+1,w
  3030     0324  1903               	btfsc	3,2
  3031     0325  2B27               	goto	u1821
  3032     0326  2B28               	goto	u1820
  3033     0327                     u1821:
  3034     0327  2B5F               	goto	l1970
  3035     0328                     u1820:
  3036     0328                     l1952:
  3037     0328  01AD               	clrf	___awdiv@counter
  3038     0329  0AAD               	incf	___awdiv@counter,f
  3039     032A  2B36               	goto	l1958
  3040     032B                     l1954:
  3041     032B  3001               	movlw	1
  3042     032C                     u1835:
  3043     032C  1003               	clrc
  3044     032D  0DA8               	rlf	___awdiv@divisor,f
  3045     032E  0DA9               	rlf	___awdiv@divisor+1,f
  3046     032F  3EFF               	addlw	-1
  3047     0330  1D03               	skipz
  3048     0331  2B2C               	goto	u1835
  3049     0332                     l1956:
  3050     0332  3001               	movlw	1
  3051     0333  00AC               	movwf	??___awdiv
  3052     0334  082C               	movf	??___awdiv,w
  3053     0335  07AD               	addwf	___awdiv@counter,f
  3054     0336                     l1958:
  3055     0336  1FA9               	btfss	___awdiv@divisor+1,7
  3056     0337  2B39               	goto	u1841
  3057     0338  2B3A               	goto	u1840
  3058     0339                     u1841:
  3059     0339  2B2B               	goto	l1954
  3060     033A                     u1840:
  3061     033A                     l1960:
  3062     033A  3001               	movlw	1
  3063     033B                     u1855:
  3064     033B  1003               	clrc
  3065     033C  0DAF               	rlf	___awdiv@quotient,f
  3066     033D  0DB0               	rlf	___awdiv@quotient+1,f
  3067     033E  3EFF               	addlw	-1
  3068     033F  1D03               	skipz
  3069     0340  2B3B               	goto	u1855
  3070     0341  0829               	movf	___awdiv@divisor+1,w
  3071     0342  022B               	subwf	___awdiv@dividend+1,w
  3072     0343  1D03               	skipz
  3073     0344  2B47               	goto	u1865
  3074     0345  0828               	movf	___awdiv@divisor,w
  3075     0346  022A               	subwf	___awdiv@dividend,w
  3076     0347                     u1865:
  3077     0347  1C03               	skipc
  3078     0348  2B4A               	goto	u1861
  3079     0349  2B4B               	goto	u1860
  3080     034A                     u1861:
  3081     034A  2B52               	goto	l1966
  3082     034B                     u1860:
  3083     034B                     l1962:
  3084     034B  0828               	movf	___awdiv@divisor,w
  3085     034C  02AA               	subwf	___awdiv@dividend,f
  3086     034D  0829               	movf	___awdiv@divisor+1,w
  3087     034E  1C03               	skipc
  3088     034F  03AB               	decf	___awdiv@dividend+1,f
  3089     0350  02AB               	subwf	___awdiv@dividend+1,f
  3090     0351                     l1964:
  3091     0351  142F               	bsf	___awdiv@quotient,0
  3092     0352                     l1966:
  3093     0352  3001               	movlw	1
  3094     0353                     u1875:
  3095     0353  1003               	clrc
  3096     0354  0CA9               	rrf	___awdiv@divisor+1,f
  3097     0355  0CA8               	rrf	___awdiv@divisor,f
  3098     0356  3EFF               	addlw	-1
  3099     0357  1D03               	skipz
  3100     0358  2B53               	goto	u1875
  3101     0359                     l1968:
  3102     0359  3001               	movlw	1
  3103     035A  02AD               	subwf	___awdiv@counter,f
  3104     035B  1D03               	btfss	3,2
  3105     035C  2B5E               	goto	u1881
  3106     035D  2B5F               	goto	u1880
  3107     035E                     u1881:
  3108     035E  2B3A               	goto	l1960
  3109     035F                     u1880:
  3110     035F                     l1970:
  3111     035F  082E               	movf	___awdiv@sign,w
  3112     0360  1903               	btfsc	3,2
  3113     0361  2B63               	goto	u1891
  3114     0362  2B64               	goto	u1890
  3115     0363                     u1891:
  3116     0363  2B69               	goto	l1974
  3117     0364                     u1890:
  3118     0364                     l1972:
  3119     0364  09AF               	comf	___awdiv@quotient,f
  3120     0365  09B0               	comf	___awdiv@quotient+1,f
  3121     0366  0AAF               	incf	___awdiv@quotient,f
  3122     0367  1903               	skipnz
  3123     0368  0AB0               	incf	___awdiv@quotient+1,f
  3124     0369                     l1974:
  3125     0369  0830               	movf	___awdiv@quotient+1,w
  3126     036A  00A9               	movwf	?___awdiv+1
  3127     036B  082F               	movf	___awdiv@quotient,w
  3128     036C  00A8               	movwf	?___awdiv
  3129     036D                     l439:
  3130     036D  0008               	return
  3131     036E                     __end_of___awdiv:
  3132                           
  3133                           	psect	text16
  3134     0449                     __ptext16:	
  3135 ;; *************** function _Lcd_Write_String *****************
  3136 ;; Defined at:
  3137 ;;		line 105 in file "peripherals/lcd.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;  a               2   13[BANK0 ] PTR unsigned char 
  3140 ;;		 -> STR_2(4), Lcd_Write_Int@buffer(50), 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;  i               2   18[BANK0 ] int 
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      void 
  3145 ;; Registers used:
  3146 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3152 ;;      Params:         0       2       0       0       0
  3153 ;;      Locals:         0       2       0       0       0
  3154 ;;      Temps:          0       3       0       0       0
  3155 ;;      Totals:         0       7       0       0       0
  3156 ;;Total ram usage:        7 bytes
  3157 ;; Hardware stack levels used: 1
  3158 ;; Hardware stack levels required when called: 5
  3159 ;; This function calls:
  3160 ;;		_Lcd_Write_Char
  3161 ;; This function is called by:
  3162 ;;		_Lcd_Write_Int
  3163 ;;		_main
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167     0449                     _Lcd_Write_String:	
  3168                           ;psect for function _Lcd_Write_String
  3169                           
  3170     0449                     l1872:	
  3171                           ;incstack = 0
  3172                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3173                           
  3174                           
  3175                           ;peripherals/lcd.c: 106:     int i;;peripherals/lcd.c: 107:     for (i = 0; a[i] != '\0'
      +                          ; i++)
  3176     0449  1283               	bcf	3,5	;RP0=0, select bank0
  3177     044A  1303               	bcf	3,6	;RP1=0, select bank0
  3178     044B  01B2               	clrf	Lcd_Write_String@i
  3179     044C  01B3               	clrf	Lcd_Write_String@i+1
  3180     044D  2C72               	goto	l1878
  3181     044E                     l1874:
  3182                           
  3183                           ;peripherals/lcd.c: 108:         Lcd_Write_Char(a[i]);
  3184     044E  0832               	movf	Lcd_Write_String@i,w
  3185     044F  072D               	addwf	Lcd_Write_String@a,w
  3186     0450  00B0               	movwf	??_Lcd_Write_String+1
  3187     0451  082E               	movf	Lcd_Write_String@a+1,w
  3188     0452  00AF               	movwf	??_Lcd_Write_String
  3189     0453  1803               	skipnc
  3190     0454  0AAF               	incf	??_Lcd_Write_String,f
  3191     0455  1FB2               	btfss	Lcd_Write_String@i,7
  3192     0456  2C58               	goto	u1650
  3193     0457  03AF               	decf	??_Lcd_Write_String,f
  3194     0458                     u1650:
  3195     0458  1283               	bcf	3,5	;RP0=0, select bank0
  3196     0459  1303               	bcf	3,6	;RP1=0, select bank0
  3197     045A  082F               	movf	??_Lcd_Write_String,w
  3198     045B  00B1               	movwf	??_Lcd_Write_String+2
  3199     045C  0831               	movf	??_Lcd_Write_String+2,w
  3200     045D  00FF               	movwf	btemp+1
  3201     045E  0830               	movf	??_Lcd_Write_String+1,w
  3202     045F  0084               	movwf	4
  3203     0460  120A  118A  2600  120A  118A  	fcall	stringtab
  3204     0465  120A  118A  254A  120A  118A  	fcall	_Lcd_Write_Char
  3205     046A                     l1876:
  3206     046A  3001               	movlw	1
  3207     046B  1283               	bcf	3,5	;RP0=0, select bank0
  3208     046C  1303               	bcf	3,6	;RP1=0, select bank0
  3209     046D  07B2               	addwf	Lcd_Write_String@i,f
  3210     046E  1803               	skipnc
  3211     046F  0AB3               	incf	Lcd_Write_String@i+1,f
  3212     0470  3000               	movlw	0
  3213     0471  07B3               	addwf	Lcd_Write_String@i+1,f
  3214     0472                     l1878:
  3215     0472  0832               	movf	Lcd_Write_String@i,w
  3216     0473  072D               	addwf	Lcd_Write_String@a,w
  3217     0474  00B0               	movwf	??_Lcd_Write_String+1
  3218     0475  082E               	movf	Lcd_Write_String@a+1,w
  3219     0476  00AF               	movwf	??_Lcd_Write_String
  3220     0477  1803               	skipnc
  3221     0478  0AAF               	incf	??_Lcd_Write_String,f
  3222     0479  1FB2               	btfss	Lcd_Write_String@i,7
  3223     047A  2C7C               	goto	u1660
  3224     047B  03AF               	decf	??_Lcd_Write_String,f
  3225     047C                     u1660:
  3226     047C  1283               	bcf	3,5	;RP0=0, select bank0
  3227     047D  1303               	bcf	3,6	;RP1=0, select bank0
  3228     047E  082F               	movf	??_Lcd_Write_String,w
  3229     047F  00B1               	movwf	??_Lcd_Write_String+2
  3230     0480  0831               	movf	??_Lcd_Write_String+2,w
  3231     0481  00FF               	movwf	btemp+1
  3232     0482  0830               	movf	??_Lcd_Write_String+1,w
  3233     0483  0084               	movwf	4
  3234     0484  120A  118A  2600  120A  118A  	fcall	stringtab
  3235     0489  3A00               	xorlw	0
  3236     048A  1D03               	skipz
  3237     048B  2C8D               	goto	u1671
  3238     048C  2C8E               	goto	u1670
  3239     048D                     u1671:
  3240     048D  2C4E               	goto	l1874
  3241     048E                     u1670:
  3242     048E                     l109:
  3243     048E  0008               	return
  3244     048F                     __end_of_Lcd_Write_String:
  3245                           
  3246                           	psect	text17
  3247     054A                     __ptext17:	
  3248 ;; *************** function _Lcd_Write_Char *****************
  3249 ;; Defined at:
  3250 ;;		line 88 in file "peripherals/lcd.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;  a               1    wreg     unsigned char 
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;  a               1   12[BANK0 ] unsigned char 
  3255 ;;  y               1   11[BANK0 ] unsigned char 
  3256 ;;  temp            1   10[BANK0 ] unsigned char 
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  1    wreg      void 
  3259 ;; Registers used:
  3260 ;;		wreg, status,2, status,0, pclath, cstack
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3266 ;;      Params:         0       0       0       0       0
  3267 ;;      Locals:         0       3       0       0       0
  3268 ;;      Temps:          0       1       0       0       0
  3269 ;;      Totals:         0       4       0       0       0
  3270 ;;Total ram usage:        4 bytes
  3271 ;; Hardware stack levels used: 1
  3272 ;; Hardware stack levels required when called: 4
  3273 ;; This function calls:
  3274 ;;		_Lcd_Port
  3275 ;; This function is called by:
  3276 ;;		_Lcd_Write_String
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280     054A                     _Lcd_Write_Char:	
  3281                           ;psect for function _Lcd_Write_Char
  3282                           
  3283                           
  3284                           ;incstack = 0
  3285                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3286                           ;Lcd_Write_Char@a stored from wreg
  3287     054A  1283               	bcf	3,5	;RP0=0, select bank0
  3288     054B  1303               	bcf	3,6	;RP1=0, select bank0
  3289     054C  00AC               	movwf	Lcd_Write_Char@a
  3290     054D                     l1804:
  3291                           
  3292                           ;peripherals/lcd.c: 89:     char temp, y;;peripherals/lcd.c: 90:     temp = a & 0x0F;
  3293     054D  082C               	movf	Lcd_Write_Char@a,w
  3294     054E  390F               	andlw	15
  3295     054F  00AA               	movwf	Lcd_Write_Char@temp
  3296                           
  3297                           ;peripherals/lcd.c: 91:     y = a & 0xF0;
  3298     0550  082C               	movf	Lcd_Write_Char@a,w
  3299     0551  39F0               	andlw	240
  3300     0552  00AB               	movwf	Lcd_Write_Char@y
  3301     0553                     l1806:
  3302                           
  3303                           ;peripherals/lcd.c: 93:     PORTEbits.RE2 = 1;
  3304     0553  1509               	bsf	9,2	;volatile
  3305     0554                     l1808:
  3306                           
  3307                           ;peripherals/lcd.c: 95:     Lcd_Port(y >> 4);
  3308     0554  082B               	movf	Lcd_Write_Char@y,w
  3309     0555  00A9               	movwf	??_Lcd_Write_Char
  3310     0556  3004               	movlw	4
  3311     0557                     u1595:
  3312     0557  1003               	clrc
  3313     0558  0CA9               	rrf	??_Lcd_Write_Char,f
  3314     0559  3EFF               	addlw	-1
  3315     055A  1D03               	skipz
  3316     055B  2D57               	goto	u1595
  3317     055C  0829               	movf	??_Lcd_Write_Char,w
  3318     055D  120A  118A  2675  120A  118A  	fcall	_Lcd_Port
  3319     0562                     l1810:
  3320                           
  3321                           ;peripherals/lcd.c: 96:     PORTEbits.RE1 = 1;
  3322     0562  1283               	bcf	3,5	;RP0=0, select bank0
  3323     0563  1303               	bcf	3,6	;RP1=0, select bank0
  3324     0564  1489               	bsf	9,1	;volatile
  3325     0565                     l1812:
  3326                           
  3327                           ;peripherals/lcd.c: 97:     _delay((unsigned long)((4)*(20000000/4000000.0)));
  3328     0565  3005               	movlw	5
  3329     0566  1283               	bcf	3,5	;RP0=0, select bank0
  3330     0567  1303               	bcf	3,6	;RP1=0, select bank0
  3331     0568  00A9               	movwf	??_Lcd_Write_Char
  3332     0569                     u2237:
  3333     0569  0BA9               	decfsz	??_Lcd_Write_Char,f
  3334     056A  2D69               	goto	u2237
  3335     056B  2D6C               	nop2
  3336     056C                     l1814:
  3337                           
  3338                           ;peripherals/lcd.c: 98:     PORTEbits.RE1 = 0;
  3339     056C  1283               	bcf	3,5	;RP0=0, select bank0
  3340     056D  1303               	bcf	3,6	;RP1=0, select bank0
  3341     056E  1089               	bcf	9,1	;volatile
  3342     056F                     l1816:
  3343                           
  3344                           ;peripherals/lcd.c: 99:     Lcd_Port(temp);
  3345     056F  082A               	movf	Lcd_Write_Char@temp,w
  3346     0570  120A  118A  2675  120A  118A  	fcall	_Lcd_Port
  3347     0575                     l1818:
  3348                           
  3349                           ;peripherals/lcd.c: 100:     PORTEbits.RE1 = 1;
  3350     0575  1283               	bcf	3,5	;RP0=0, select bank0
  3351     0576  1303               	bcf	3,6	;RP1=0, select bank0
  3352     0577  1489               	bsf	9,1	;volatile
  3353     0578                     l1820:
  3354                           
  3355                           ;peripherals/lcd.c: 101:     _delay((unsigned long)((4)*(20000000/4000000.0)));
  3356     0578  3005               	movlw	5
  3357     0579  1283               	bcf	3,5	;RP0=0, select bank0
  3358     057A  1303               	bcf	3,6	;RP1=0, select bank0
  3359     057B  00A9               	movwf	??_Lcd_Write_Char
  3360     057C                     u2247:
  3361     057C  0BA9               	decfsz	??_Lcd_Write_Char,f
  3362     057D  2D7C               	goto	u2247
  3363     057E  2D7F               	nop2
  3364     057F                     l1822:
  3365                           
  3366                           ;peripherals/lcd.c: 102:     PORTEbits.RE1 = 0;
  3367     057F  1283               	bcf	3,5	;RP0=0, select bank0
  3368     0580  1303               	bcf	3,6	;RP1=0, select bank0
  3369     0581  1089               	bcf	9,1	;volatile
  3370     0582                     l103:
  3371     0582  0008               	return
  3372     0583                     __end_of_Lcd_Write_Char:
  3373                           
  3374                           	psect	text18
  3375     0297                     __ptext18:	
  3376 ;; *************** function _Lcd_Init *****************
  3377 ;; Defined at:
  3378 ;;		line 41 in file "peripherals/lcd.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;		None
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;		None
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  1    wreg      void 
  3385 ;; Registers used:
  3386 ;;		wreg, status,2, status,0, pclath, cstack
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3392 ;;      Params:         0       0       0       0       0
  3393 ;;      Locals:         0       0       0       0       0
  3394 ;;      Temps:          0       2       0       0       0
  3395 ;;      Totals:         0       2       0       0       0
  3396 ;;Total ram usage:        2 bytes
  3397 ;; Hardware stack levels used: 1
  3398 ;; Hardware stack levels required when called: 5
  3399 ;; This function calls:
  3400 ;;		_Lcd_Cmd
  3401 ;;		_Lcd_Port
  3402 ;; This function is called by:
  3403 ;;		_main
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407     0297                     _Lcd_Init:	
  3408                           ;psect for function _Lcd_Init
  3409                           
  3410     0297                     l2086:	
  3411                           ;incstack = 0
  3412                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3413                           
  3414                           
  3415                           ;peripherals/lcd.c: 42:     TRISD &= ~0xff;
  3416     0297  1683               	bsf	3,5	;RP0=1, select bank1
  3417     0298  1303               	bcf	3,6	;RP1=0, select bank1
  3418     0299  0188               	clrf	8	;volatile
  3419     029A                     l2088:
  3420                           
  3421                           ;peripherals/lcd.c: 43:     TRISE &= ~0x06;
  3422     029A  30F9               	movlw	249
  3423     029B  1283               	bcf	3,5	;RP0=0, select bank0
  3424     029C  1303               	bcf	3,6	;RP1=0, select bank0
  3425     029D  00AC               	movwf	??_Lcd_Init
  3426     029E  082C               	movf	??_Lcd_Init,w
  3427     029F  1683               	bsf	3,5	;RP0=1, select bank1
  3428     02A0  1303               	bcf	3,6	;RP1=0, select bank1
  3429     02A1  0589               	andwf	9,f	;volatile
  3430     02A2                     l2090:
  3431                           
  3432                           ;peripherals/lcd.c: 44:     Lcd_Port(0x00);
  3433     02A2  3000               	movlw	0
  3434     02A3  120A  118A  2675  120A  118A  	fcall	_Lcd_Port
  3435     02A8                     l2092:
  3436                           
  3437                           ;peripherals/lcd.c: 45:     _delay((unsigned long)((20)*(20000000/4000.0)));
  3438     02A8  3082               	movlw	130
  3439     02A9  1283               	bcf	3,5	;RP0=0, select bank0
  3440     02AA  1303               	bcf	3,6	;RP1=0, select bank0
  3441     02AB  00AD               	movwf	??_Lcd_Init+1
  3442     02AC  30DD               	movlw	221
  3443     02AD  00AC               	movwf	??_Lcd_Init
  3444     02AE                     u2257:
  3445     02AE  0BAC               	decfsz	??_Lcd_Init,f
  3446     02AF  2AAE               	goto	u2257
  3447     02B0  0BAD               	decfsz	??_Lcd_Init+1,f
  3448     02B1  2AAE               	goto	u2257
  3449     02B2                     l2094:
  3450                           
  3451                           ;peripherals/lcd.c: 46:     Lcd_Cmd(0x03);
  3452     02B2  3003               	movlw	3
  3453     02B3  120A  118A  262B  120A  118A  	fcall	_Lcd_Cmd
  3454     02B8                     l2096:
  3455                           
  3456                           ;peripherals/lcd.c: 47:     _delay((unsigned long)((5)*(20000000/4000.0)));
  3457     02B8  3021               	movlw	33
  3458     02B9  1283               	bcf	3,5	;RP0=0, select bank0
  3459     02BA  1303               	bcf	3,6	;RP1=0, select bank0
  3460     02BB  00AD               	movwf	??_Lcd_Init+1
  3461     02BC  3075               	movlw	117
  3462     02BD  00AC               	movwf	??_Lcd_Init
  3463     02BE                     u2267:
  3464     02BE  0BAC               	decfsz	??_Lcd_Init,f
  3465     02BF  2ABE               	goto	u2267
  3466     02C0  0BAD               	decfsz	??_Lcd_Init+1,f
  3467     02C1  2ABE               	goto	u2267
  3468     02C2  2AC3               	nop2
  3469     02C3                     l2098:
  3470                           
  3471                           ;peripherals/lcd.c: 48:     Lcd_Cmd(0x03);
  3472     02C3  3003               	movlw	3
  3473     02C4  120A  118A  262B  120A  118A  	fcall	_Lcd_Cmd
  3474     02C9                     l2100:
  3475                           
  3476                           ;peripherals/lcd.c: 49:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3477     02C9  3041               	movlw	65
  3478     02CA  1283               	bcf	3,5	;RP0=0, select bank0
  3479     02CB  1303               	bcf	3,6	;RP1=0, select bank0
  3480     02CC  00AD               	movwf	??_Lcd_Init+1
  3481     02CD  30ED               	movlw	237
  3482     02CE  00AC               	movwf	??_Lcd_Init
  3483     02CF                     u2277:
  3484     02CF  0BAC               	decfsz	??_Lcd_Init,f
  3485     02D0  2ACF               	goto	u2277
  3486     02D1  0BAD               	decfsz	??_Lcd_Init+1,f
  3487     02D2  2ACF               	goto	u2277
  3488     02D3  2AD4               	nop2
  3489     02D4                     l2102:
  3490                           
  3491                           ;peripherals/lcd.c: 50:     Lcd_Cmd(0x03);
  3492     02D4  3003               	movlw	3
  3493     02D5  120A  118A  262B  120A  118A  	fcall	_Lcd_Cmd
  3494     02DA                     l2104:
  3495                           
  3496                           ;peripherals/lcd.c: 52:     Lcd_Cmd(0x02);
  3497     02DA  3002               	movlw	2
  3498     02DB  120A  118A  262B  120A  118A  	fcall	_Lcd_Cmd
  3499     02E0                     l2106:
  3500                           
  3501                           ;peripherals/lcd.c: 54:     Lcd_Cmd(0x02);
  3502     02E0  3002               	movlw	2
  3503     02E1  120A  118A  262B  120A  118A  	fcall	_Lcd_Cmd
  3504     02E6                     l2108:
  3505                           
  3506                           ;peripherals/lcd.c: 55:     Lcd_Cmd(0x08);
  3507     02E6  3008               	movlw	8
  3508     02E7  120A  118A  262B  120A  118A  	fcall	_Lcd_Cmd
  3509     02EC                     l2110:
  3510                           
  3511                           ;peripherals/lcd.c: 57:     Lcd_Cmd(0x00);
  3512     02EC  3000               	movlw	0
  3513     02ED  120A  118A  262B  120A  118A  	fcall	_Lcd_Cmd
  3514     02F2                     l2112:
  3515                           
  3516                           ;peripherals/lcd.c: 58:     Lcd_Cmd(0x0C);
  3517     02F2  300C               	movlw	12
  3518     02F3  120A  118A  262B  120A  118A  	fcall	_Lcd_Cmd
  3519     02F8                     l2114:
  3520                           
  3521                           ;peripherals/lcd.c: 60:     Lcd_Cmd(0x00);
  3522     02F8  3000               	movlw	0
  3523     02F9  120A  118A  262B  120A  118A  	fcall	_Lcd_Cmd
  3524     02FE                     l2116:
  3525                           
  3526                           ;peripherals/lcd.c: 61:     Lcd_Cmd(0x06);
  3527     02FE  3006               	movlw	6
  3528     02FF  120A  118A  262B  120A  118A  	fcall	_Lcd_Cmd
  3529     0304                     l91:
  3530     0304  0008               	return
  3531     0305                     __end_of_Lcd_Init:
  3532                           
  3533                           	psect	text19
  3534     070A                     __ptext19:	
  3535 ;; *************** function _Lcd_Clear *****************
  3536 ;; Defined at:
  3537 ;;		line 64 in file "peripherals/lcd.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;		None
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;		None
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  1    wreg      void 
  3544 ;; Registers used:
  3545 ;;		wreg, status,2, status,0, pclath, cstack
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3551 ;;      Params:         0       0       0       0       0
  3552 ;;      Locals:         0       0       0       0       0
  3553 ;;      Temps:          0       0       0       0       0
  3554 ;;      Totals:         0       0       0       0       0
  3555 ;;Total ram usage:        0 bytes
  3556 ;; Hardware stack levels used: 1
  3557 ;; Hardware stack levels required when called: 5
  3558 ;; This function calls:
  3559 ;;		_Lcd_Cmd
  3560 ;; This function is called by:
  3561 ;;		_main
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565     070A                     _Lcd_Clear:	
  3566                           ;psect for function _Lcd_Clear
  3567                           
  3568     070A                     l2118:	
  3569                           ;incstack = 0
  3570                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3571                           
  3572                           
  3573                           ;peripherals/lcd.c: 66:     Lcd_Cmd(0);
  3574     070A  3000               	movlw	0
  3575     070B  120A  118A  262B  120A  118A  	fcall	_Lcd_Cmd
  3576                           
  3577                           ;peripherals/lcd.c: 67:     Lcd_Cmd(1);
  3578     0710  3001               	movlw	1
  3579     0711  120A  118A  262B  120A  118A  	fcall	_Lcd_Cmd
  3580     0716                     l94:
  3581     0716  0008               	return
  3582     0717                     __end_of_Lcd_Clear:
  3583                           
  3584                           	psect	text20
  3585     062B                     __ptext20:	
  3586 ;; *************** function _Lcd_Cmd *****************
  3587 ;; Defined at:
  3588 ;;		line 29 in file "peripherals/lcd.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;  a               1    wreg     unsigned char 
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;  a               1   11[BANK0 ] unsigned char 
  3593 ;; Return value:  Size  Location     Type
  3594 ;;                  1    wreg      void 
  3595 ;; Registers used:
  3596 ;;		wreg, status,2, status,0, pclath, cstack
  3597 ;; Tracked objects:
  3598 ;;		On entry : 0/0
  3599 ;;		On exit  : 0/0
  3600 ;;		Unchanged: 0/0
  3601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3602 ;;      Params:         0       0       0       0       0
  3603 ;;      Locals:         0       1       0       0       0
  3604 ;;      Temps:          0       2       0       0       0
  3605 ;;      Totals:         0       3       0       0       0
  3606 ;;Total ram usage:        3 bytes
  3607 ;; Hardware stack levels used: 1
  3608 ;; Hardware stack levels required when called: 4
  3609 ;; This function calls:
  3610 ;;		_Lcd_Port
  3611 ;; This function is called by:
  3612 ;;		_Lcd_Init
  3613 ;;		_Lcd_Clear
  3614 ;;		_Lcd_Set_Cursor
  3615 ;;		_Lcd_Shift_Right
  3616 ;;		_Lcd_Shift_Left
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620     062B                     _Lcd_Cmd:	
  3621                           ;psect for function _Lcd_Cmd
  3622                           
  3623                           
  3624                           ;incstack = 0
  3625                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3626                           ;Lcd_Cmd@a stored from wreg
  3627     062B  1283               	bcf	3,5	;RP0=0, select bank0
  3628     062C  1303               	bcf	3,6	;RP1=0, select bank0
  3629     062D  00AB               	movwf	Lcd_Cmd@a
  3630     062E                     l1858:
  3631                           
  3632                           ;peripherals/lcd.c: 30:     TRISD &= ~0xff;
  3633     062E  1683               	bsf	3,5	;RP0=1, select bank1
  3634     062F  1303               	bcf	3,6	;RP1=0, select bank1
  3635     0630  0188               	clrf	8	;volatile
  3636     0631                     l1860:
  3637                           
  3638                           ;peripherals/lcd.c: 31:     TRISE &= ~0x06;
  3639     0631  30F9               	movlw	249
  3640     0632  1283               	bcf	3,5	;RP0=0, select bank0
  3641     0633  1303               	bcf	3,6	;RP1=0, select bank0
  3642     0634  00A9               	movwf	??_Lcd_Cmd
  3643     0635  0829               	movf	??_Lcd_Cmd,w
  3644     0636  1683               	bsf	3,5	;RP0=1, select bank1
  3645     0637  1303               	bcf	3,6	;RP1=0, select bank1
  3646     0638  0589               	andwf	9,f	;volatile
  3647     0639                     l1862:
  3648                           
  3649                           ;peripherals/lcd.c: 34:     PORTEbits.RE2 = 0;
  3650     0639  1283               	bcf	3,5	;RP0=0, select bank0
  3651     063A  1303               	bcf	3,6	;RP1=0, select bank0
  3652     063B  1109               	bcf	9,2	;volatile
  3653     063C                     l1864:
  3654                           
  3655                           ;peripherals/lcd.c: 35:     Lcd_Port(a);
  3656     063C  082B               	movf	Lcd_Cmd@a,w
  3657     063D  120A  118A  2675  120A  118A  	fcall	_Lcd_Port
  3658     0642                     l1866:
  3659                           
  3660                           ;peripherals/lcd.c: 36:     PORTEbits.RE1 = 1;
  3661     0642  1283               	bcf	3,5	;RP0=0, select bank0
  3662     0643  1303               	bcf	3,6	;RP1=0, select bank0
  3663     0644  1489               	bsf	9,1	;volatile
  3664     0645                     l1868:
  3665                           
  3666                           ;peripherals/lcd.c: 37:     _delay((unsigned long)((4)*(20000000/4000.0)));
  3667     0645  301A               	movlw	26
  3668     0646  1283               	bcf	3,5	;RP0=0, select bank0
  3669     0647  1303               	bcf	3,6	;RP1=0, select bank0
  3670     0648  00AA               	movwf	??_Lcd_Cmd+1
  3671     0649  30F7               	movlw	247
  3672     064A  00A9               	movwf	??_Lcd_Cmd
  3673     064B                     u2287:
  3674     064B  0BA9               	decfsz	??_Lcd_Cmd,f
  3675     064C  2E4B               	goto	u2287
  3676     064D  0BAA               	decfsz	??_Lcd_Cmd+1,f
  3677     064E  2E4B               	goto	u2287
  3678     064F  2E50               	nop2
  3679     0650                     l1870:
  3680                           
  3681                           ;peripherals/lcd.c: 38:     PORTEbits.RE1 = 0;
  3682     0650  1283               	bcf	3,5	;RP0=0, select bank0
  3683     0651  1303               	bcf	3,6	;RP1=0, select bank0
  3684     0652  1089               	bcf	9,1	;volatile
  3685     0653                     l88:
  3686     0653  0008               	return
  3687     0654                     __end_of_Lcd_Cmd:
  3688                           
  3689                           	psect	text21
  3690     0675                     __ptext21:	
  3691 ;; *************** function _Lcd_Port *****************
  3692 ;; Defined at:
  3693 ;;		line 14 in file "peripherals/lcd.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;  a               1    wreg     unsigned char 
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;  a               1    8[BANK0 ] unsigned char 
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  1    wreg      void 
  3700 ;; Registers used:
  3701 ;;		wreg
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3707 ;;      Params:         0       0       0       0       0
  3708 ;;      Locals:         0       1       0       0       0
  3709 ;;      Temps:          0       0       0       0       0
  3710 ;;      Totals:         0       1       0       0       0
  3711 ;;Total ram usage:        1 bytes
  3712 ;; Hardware stack levels used: 1
  3713 ;; Hardware stack levels required when called: 3
  3714 ;; This function calls:
  3715 ;;		Nothing
  3716 ;; This function is called by:
  3717 ;;		_Lcd_Cmd
  3718 ;;		_Lcd_Init
  3719 ;;		_Lcd_Write_Char
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723     0675                     _Lcd_Port:	
  3724                           ;psect for function _Lcd_Port
  3725                           
  3726                           
  3727                           ;incstack = 0
  3728                           ; Regs used in _Lcd_Port: [wreg]
  3729                           ;Lcd_Port@a stored from wreg
  3730     0675  1283               	bcf	3,5	;RP0=0, select bank0
  3731     0676  1303               	bcf	3,6	;RP1=0, select bank0
  3732     0677  00A8               	movwf	Lcd_Port@a
  3733     0678                     l1794:
  3734                           
  3735                           ;peripherals/lcd.c: 16:     if (a & 1) PORTDbits.RD4 = 1;
  3736     0678  1C28               	btfss	Lcd_Port@a,0
  3737     0679  2E7B               	goto	u1551
  3738     067A  2E7C               	goto	u1550
  3739     067B                     u1551:
  3740     067B  2E7E               	goto	l77
  3741     067C                     u1550:
  3742     067C                     l1796:
  3743     067C  1608               	bsf	8,4	;volatile
  3744     067D  2E7F               	goto	l78
  3745     067E                     l77:	
  3746                           ;peripherals/lcd.c: 17:     else PORTDbits.RD4 = 0;
  3747                           
  3748     067E  1208               	bcf	8,4	;volatile
  3749     067F                     l78:
  3750                           
  3751                           ;peripherals/lcd.c: 19:     if (a & 2) PORTDbits.RD5 = 1;
  3752     067F  1CA8               	btfss	Lcd_Port@a,1
  3753     0680  2E82               	goto	u1561
  3754     0681  2E83               	goto	u1560
  3755     0682                     u1561:
  3756     0682  2E85               	goto	l79
  3757     0683                     u1560:
  3758     0683                     l1798:
  3759     0683  1688               	bsf	8,5	;volatile
  3760     0684  2E86               	goto	l80
  3761     0685                     l79:	
  3762                           ;peripherals/lcd.c: 20:     else PORTDbits.RD5 = 0;
  3763                           
  3764     0685  1288               	bcf	8,5	;volatile
  3765     0686                     l80:
  3766                           
  3767                           ;peripherals/lcd.c: 22:     if (a & 4) PORTDbits.RD6 = 1;
  3768     0686  1D28               	btfss	Lcd_Port@a,2
  3769     0687  2E89               	goto	u1571
  3770     0688  2E8A               	goto	u1570
  3771     0689                     u1571:
  3772     0689  2E8C               	goto	l81
  3773     068A                     u1570:
  3774     068A                     l1800:
  3775     068A  1708               	bsf	8,6	;volatile
  3776     068B  2E8D               	goto	l82
  3777     068C                     l81:	
  3778                           ;peripherals/lcd.c: 23:     else PORTDbits.RD6 = 0;
  3779                           
  3780     068C  1308               	bcf	8,6	;volatile
  3781     068D                     l82:
  3782                           
  3783                           ;peripherals/lcd.c: 25:     if (a & 8) PORTDbits.RD7 = 1;
  3784     068D  1DA8               	btfss	Lcd_Port@a,3
  3785     068E  2E90               	goto	u1581
  3786     068F  2E91               	goto	u1580
  3787     0690                     u1581:
  3788     0690  2E93               	goto	l83
  3789     0691                     u1580:
  3790     0691                     l1802:
  3791     0691  1788               	bsf	8,7	;volatile
  3792     0692  2E94               	goto	l85
  3793     0693                     l83:	
  3794                           ;peripherals/lcd.c: 26:     else PORTDbits.RD7 = 0;
  3795                           
  3796     0693  1388               	bcf	8,7	;volatile
  3797     0694                     l85:
  3798     0694  0008               	return
  3799     0695                     __end_of_Lcd_Port:
  3800                           
  3801                           	psect	text22
  3802     06E0                     __ptext22:	
  3803 ;; *************** function _ISR *****************
  3804 ;; Defined at:
  3805 ;;		line 52 in file "main.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;		None
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;		None
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  1    wreg      void 
  3812 ;; Registers used:
  3813 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3819 ;;      Params:         0       0       0       0       0
  3820 ;;      Locals:         0       0       0       0       0
  3821 ;;      Temps:          0       3       0       0       0
  3822 ;;      Totals:         0       3       0       0       0
  3823 ;;Total ram usage:        3 bytes
  3824 ;; Hardware stack levels used: 1
  3825 ;; Hardware stack levels required when called: 2
  3826 ;; This function calls:
  3827 ;;		_UART_data_received
  3828 ;; This function is called by:
  3829 ;;		Interrupt level 1
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833     06E0                     _ISR:	
  3834                           ;psect for function _ISR
  3835                           
  3836     06E0                     i1l2224:
  3837                           
  3838                           ;main.c: 53:     if (RCIF) {
  3839     06E0  1E8C               	btfss	12,5	;volatile
  3840     06E1  2EE3               	goto	u222_21
  3841     06E2  2EE4               	goto	u222_20
  3842     06E3                     u222_21:
  3843     06E3  2EEC               	goto	i1l175
  3844     06E4                     u222_20:
  3845     06E4                     i1l2226:
  3846                           
  3847                           ;main.c: 54:         UART_data_received();
  3848     06E4  120A  118A  23B9  120A  118A  	fcall	_UART_data_received
  3849     06E9                     i1l2228:
  3850                           
  3851                           ;main.c: 55:         RCIF = 0;
  3852     06E9  1283               	bcf	3,5	;RP0=0, select bank0
  3853     06EA  1303               	bcf	3,6	;RP1=0, select bank0
  3854     06EB  128C               	bcf	12,5	;volatile
  3855     06EC                     i1l175:
  3856     06EC  0827               	movf	??_ISR+2,w
  3857     06ED  008A               	movwf	10
  3858     06EE  0826               	movf	??_ISR+1,w
  3859     06EF  0084               	movwf	4
  3860     06F0  0E25               	swapf	??_ISR,w
  3861     06F1  0083               	movwf	3
  3862     06F2  0EFE               	swapf	btemp,f
  3863     06F3  0E7E               	swapf	btemp,w
  3864     06F4  0009               	retfie
  3865     06F5                     __end_of_ISR:
  3866                           
  3867                           	psect	intentry
  3868     0004                     __pintentry:	
  3869                           ;incstack = 0
  3870                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3871                           
  3872     0004                     interrupt_function:
  3873     007E                     saved_w	set	btemp
  3874     0004  00FE               	movwf	btemp
  3875     0005  0E03               	swapf	3,w
  3876     0006  1283               	bcf	3,5	;RP0=0, select bank0
  3877     0007  1303               	bcf	3,6	;RP1=0, select bank0
  3878     0008  00A5               	movwf	??_ISR
  3879     0009  0804               	movf	4,w
  3880     000A  00A6               	movwf	??_ISR+1
  3881     000B  080A               	movf	10,w
  3882     000C  00A7               	movwf	??_ISR+2
  3883     000D  120A  118A  2EE0   	ljmp	_ISR
  3884                           
  3885                           	psect	text23
  3886     03B9                     __ptext23:	
  3887 ;; *************** function _UART_data_received *****************
  3888 ;; Defined at:
  3889 ;;		line 48 in file "communication/communication.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;		None
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;  data            1   11[COMMON] unsigned char 
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  1    wreg      void 
  3896 ;; Registers used:
  3897 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3903 ;;      Params:         0       0       0       0       0
  3904 ;;      Locals:         1       0       0       0       0
  3905 ;;      Temps:          1       0       0       0       0
  3906 ;;      Totals:         2       0       0       0       0
  3907 ;;Total ram usage:        2 bytes
  3908 ;; Hardware stack levels used: 1
  3909 ;; Hardware stack levels required when called: 1
  3910 ;; This function calls:
  3911 ;;		i1___bmul
  3912 ;;		i1_memcpy
  3913 ;; This function is called by:
  3914 ;;		_ISR
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918     03B9                     _UART_data_received:	
  3919                           ;psect for function _UART_data_received
  3920                           
  3921     03B9                     i1l2066:	
  3922                           ;incstack = 0
  3923                           ; Regs used in _UART_data_received: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3924                           
  3925                           
  3926                           ;communication/communication.c: 50:     static char buffer[sizeof(shared_packet_t)];;com
      +                          munication/communication.c: 51:     static int index;;communication/communication.c: 53:
      +                               char data = RCREG;
  3927     03B9  1283               	bcf	3,5	;RP0=0, select bank0
  3928     03BA  1303               	bcf	3,6	;RP1=0, select bank0
  3929     03BB  081A               	movf	26,w	;volatile
  3930     03BC  00FB               	movwf	UART_data_received@data
  3931                           
  3932                           ;communication/communication.c: 54:         if (index < sizeof(shared_packet_t)) {
  3933     03BD  3000               	movlw	0
  3934     03BE  024A               	subwf	UART_data_received@index+1,w
  3935     03BF  300E               	movlw	14
  3936     03C0  1903               	skipnz
  3937     03C1  0249               	subwf	UART_data_received@index,w
  3938     03C2  1803               	skipnc
  3939     03C3  2BC5               	goto	u206_21
  3940     03C4  2BC6               	goto	u206_20
  3941     03C5                     u206_21:
  3942     03C5  2C02               	goto	i1l52
  3943     03C6                     u206_20:
  3944     03C6                     i1l2068:
  3945                           
  3946                           ;communication/communication.c: 55:             buffer[index++] = data;
  3947     03C6  0849               	movf	UART_data_received@index,w
  3948     03C7  3EDB               	addlw	(low (UART_data_received@buffer| 0))& (0+255)
  3949     03C8  0084               	movwf	4
  3950     03C9  087B               	movf	UART_data_received@data,w
  3951     03CA  1383               	bcf	3,7	;select IRP bank1
  3952     03CB  0080               	movwf	0
  3953     03CC                     i1l2070:
  3954     03CC  3001               	movlw	1
  3955     03CD  07C9               	addwf	UART_data_received@index,f
  3956     03CE  1803               	skipnc
  3957     03CF  0ACA               	incf	UART_data_received@index+1,f
  3958     03D0  3000               	movlw	0
  3959     03D1  07CA               	addwf	UART_data_received@index+1,f
  3960     03D2                     i1l2072:
  3961                           
  3962                           ;communication/communication.c: 57:             if (index >= sizeof(shared_packet_t)) {
  3963     03D2  3000               	movlw	0
  3964     03D3  024A               	subwf	UART_data_received@index+1,w
  3965     03D4  300E               	movlw	14
  3966     03D5  1903               	skipnz
  3967     03D6  0249               	subwf	UART_data_received@index,w
  3968     03D7  1C03               	skipc
  3969     03D8  2BDA               	goto	u207_21
  3970     03D9  2BDB               	goto	u207_20
  3971     03DA                     u207_21:
  3972     03DA  2C02               	goto	i1l52
  3973     03DB                     u207_20:
  3974     03DB                     i1l2074:
  3975                           
  3976                           ;communication/communication.c: 58:                 if(receive_queue_elements < 3)
  3977     03DB  3003               	movlw	3
  3978     03DC  024C               	subwf	_receive_queue_elements,w
  3979     03DD  1803               	skipnc
  3980     03DE  2BE0               	goto	u208_21
  3981     03DF  2BE1               	goto	u208_20
  3982     03E0                     u208_21:
  3983     03E0  2BFE               	goto	i1l2078
  3984     03E1                     u208_20:
  3985     03E1                     i1l2076:
  3986                           
  3987                           ;communication/communication.c: 59:                 {;communication/communication.c: 60:
      +                                               memcpy(&receive_queue[++receive_queue_elements], buffer, sizeof(sha
      +                          red_packet_t));
  3988     03E1  300E               	movlw	14
  3989     03E2  00F0               	movwf	i1___bmul@multiplicand
  3990     03E3  3001               	movlw	1
  3991     03E4  00FA               	movwf	??_UART_data_received
  3992     03E5  087A               	movf	??_UART_data_received,w
  3993     03E6  07CC               	addwf	_receive_queue_elements,f
  3994     03E7  084C               	movf	_receive_queue_elements,w
  3995     03E8  120A  118A  26F5  120A  118A  	fcall	i1___bmul
  3996     03ED  3E90               	addlw	(low (_receive_queue| (0+256)))& (0+255)
  3997     03EE  00F4               	movwf	i1memcpy@d1
  3998     03EF  3001               	movlw	1
  3999     03F0  00F5               	movwf	i1memcpy@d1+1
  4000     03F1  30DB               	movlw	(low (UART_data_received@buffer| 0))& (0+255)
  4001     03F2  00F6               	movwf	i1memcpy@s1
  4002     03F3  3000               	movlw	0
  4003     03F4  00F7               	movwf	i1memcpy@s1+1
  4004     03F5  300E               	movlw	14
  4005     03F6  00F8               	movwf	i1memcpy@n
  4006     03F7  3000               	movlw	0
  4007     03F8  00F9               	movwf	i1memcpy@n+1
  4008     03F9  120A  118A  25B7  120A  118A  	fcall	i1_memcpy
  4009     03FE                     i1l2078:	
  4010                           ;communication/communication.c: 61:                 }
  4011                           
  4012                           
  4013                           ;communication/communication.c: 66:                 index = 0;
  4014     03FE  1283               	bcf	3,5	;RP0=0, select bank0
  4015     03FF  1303               	bcf	3,6	;RP1=0, select bank0
  4016     0400  01C9               	clrf	UART_data_received@index
  4017     0401  01CA               	clrf	UART_data_received@index+1
  4018     0402                     i1l52:
  4019     0402  0008               	return
  4020     0403                     __end_of_UART_data_received:
  4021                           
  4022                           	psect	text24
  4023     05B7                     __ptext24:	
  4024 ;; *************** function i1_memcpy *****************
  4025 ;; Defined at:
  4026 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\memcpy.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;  d1              2    4[COMMON] PTR void 
  4029 ;;		 -> main@packet(14), receive_queue(42), UART_send_packet@buffer(15), 
  4030 ;;  s1              2    6[COMMON] PTR const void 
  4031 ;;		 -> main@send_packet(14), receive_queue(42), UART_data_received@buffer(15), 
  4032 ;;  n               2    8[COMMON] unsigned int 
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;  s               2    3[BANK0 ] PTR const unsigned char 
  4035 ;;		 -> main@send_packet(14), receive_queue(42), UART_data_received@buffer(15), 
  4036 ;;  d               2    1[BANK0 ] PTR unsigned char 
  4037 ;;		 -> main@packet(14), receive_queue(42), UART_send_packet@buffer(15), 
  4038 ;;  tmp             1    0[BANK0 ] unsigned char 
  4039 ;; Return value:  Size  Location     Type
  4040 ;;                  1    wreg      PTR void 
  4041 ;; Registers used:
  4042 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4043 ;; Tracked objects:
  4044 ;;		On entry : 0/0
  4045 ;;		On exit  : 0/0
  4046 ;;		Unchanged: 0/0
  4047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4048 ;;      Params:         6       0       0       0       0
  4049 ;;      Locals:         0       5       0       0       0
  4050 ;;      Temps:          0       0       0       0       0
  4051 ;;      Totals:         6       5       0       0       0
  4052 ;;Total ram usage:       11 bytes
  4053 ;; Hardware stack levels used: 1
  4054 ;; This function calls:
  4055 ;;		Nothing
  4056 ;; This function is called by:
  4057 ;;		_UART_data_received
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061     05B7                     i1_memcpy:	
  4062                           ;psect for function i1_memcpy
  4063                           
  4064     05B7                     i1l2026:	
  4065                           ;incstack = 0
  4066                           ; Regs used in i1_memcpy: [wreg-fsr0h+status,2+status,0]
  4067                           
  4068     05B7  0876               	movf	i1memcpy@s1,w
  4069     05B8  1283               	bcf	3,5	;RP0=0, select bank0
  4070     05B9  1303               	bcf	3,6	;RP1=0, select bank0
  4071     05BA  00A3               	movwf	i1memcpy@s
  4072     05BB  0877               	movf	i1memcpy@s1+1,w
  4073     05BC  00A4               	movwf	i1memcpy@s+1
  4074     05BD  0874               	movf	i1memcpy@d1,w
  4075     05BE  00A1               	movwf	i1memcpy@d
  4076     05BF  0875               	movf	i1memcpy@d1+1,w
  4077     05C0  00A2               	movwf	i1memcpy@d+1
  4078     05C1  2DDC               	goto	i1l2034
  4079     05C2                     i1l2028:
  4080     05C2  0823               	movf	i1memcpy@s,w
  4081     05C3  0084               	movwf	4
  4082     05C4  1783               	bsf	3,7
  4083     05C5  1C24               	btfss	i1memcpy@s+1,0
  4084     05C6  1383               	bcf	3,7
  4085     05C7  0800               	movf	0,w
  4086     05C8  00A0               	movwf	i1memcpy@tmp
  4087     05C9                     i1l2030:
  4088     05C9  3001               	movlw	1
  4089     05CA  07A3               	addwf	i1memcpy@s,f
  4090     05CB  1803               	skipnc
  4091     05CC  0AA4               	incf	i1memcpy@s+1,f
  4092     05CD  3000               	movlw	0
  4093     05CE  07A4               	addwf	i1memcpy@s+1,f
  4094     05CF                     i1l2032:
  4095     05CF  0821               	movf	i1memcpy@d,w
  4096     05D0  0084               	movwf	4
  4097     05D1  1783               	bsf	3,7
  4098     05D2  1C22               	btfss	i1memcpy@d+1,0
  4099     05D3  1383               	bcf	3,7
  4100     05D4  0820               	movf	i1memcpy@tmp,w
  4101     05D5  0080               	movwf	0
  4102     05D6  3001               	movlw	1
  4103     05D7  07A1               	addwf	i1memcpy@d,f
  4104     05D8  1803               	skipnc
  4105     05D9  0AA2               	incf	i1memcpy@d+1,f
  4106     05DA  3000               	movlw	0
  4107     05DB  07A2               	addwf	i1memcpy@d+1,f
  4108     05DC                     i1l2034:
  4109     05DC  3001               	movlw	1
  4110     05DD  02F8               	subwf	i1memcpy@n,f
  4111     05DE  3000               	movlw	0
  4112     05DF  1C03               	skipc
  4113     05E0  03F9               	decf	i1memcpy@n+1,f
  4114     05E1  02F9               	subwf	i1memcpy@n+1,f
  4115     05E2  0A78               	incf	i1memcpy@n,w
  4116     05E3  1D03               	skipz
  4117     05E4  2DE9               	goto	u203_21
  4118     05E5  0A79               	incf	i1memcpy@n+1,w
  4119     05E6  1D03               	btfss	3,2
  4120     05E7  2DE9               	goto	u203_21
  4121     05E8  2DEA               	goto	u203_20
  4122     05E9                     u203_21:
  4123     05E9  2DC2               	goto	i1l2028
  4124     05EA                     u203_20:
  4125     05EA                     i1l740:
  4126     05EA  0008               	return
  4127     05EB                     __end_ofi1_memcpy:
  4128                           
  4129                           	psect	text25
  4130     06F5                     __ptext25:	
  4131 ;; *************** function i1___bmul *****************
  4132 ;; Defined at:
  4133 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;  multiplier      1    wreg     unsigned char 
  4136 ;;  multiplicand    1    0[COMMON] unsigned char 
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;  multiplier      1    3[COMMON] unsigned char 
  4139 ;;  product         1    2[COMMON] unsigned char 
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      unsigned char 
  4142 ;; Registers used:
  4143 ;;		wreg, status,2, status,0
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4149 ;;      Params:         1       0       0       0       0
  4150 ;;      Locals:         2       0       0       0       0
  4151 ;;      Temps:          1       0       0       0       0
  4152 ;;      Totals:         4       0       0       0       0
  4153 ;;Total ram usage:        4 bytes
  4154 ;; Hardware stack levels used: 1
  4155 ;; This function calls:
  4156 ;;		Nothing
  4157 ;; This function is called by:
  4158 ;;		_UART_data_received
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162     06F5                     i1___bmul:	
  4163                           ;psect for function i1___bmul
  4164                           
  4165                           
  4166                           ;incstack = 0
  4167                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  4168                           ;i1___bmul@multiplier stored from wreg
  4169     06F5  00F3               	movwf	i1___bmul@multiplier
  4170     06F6                     i1l1548:
  4171     06F6  01F2               	clrf	i1___bmul@product
  4172     06F7                     i1l1550:
  4173     06F7  1C73               	btfss	i1___bmul@multiplier,0
  4174     06F8  2EFA               	goto	u127_21
  4175     06F9  2EFB               	goto	u127_20
  4176     06FA                     u127_21:
  4177     06FA  2EFF               	goto	i1l1554
  4178     06FB                     u127_20:
  4179     06FB                     i1l1552:
  4180     06FB  0870               	movf	i1___bmul@multiplicand,w
  4181     06FC  00F1               	movwf	??i1___bmul
  4182     06FD  0871               	movf	??i1___bmul,w
  4183     06FE  07F2               	addwf	i1___bmul@product,f
  4184     06FF                     i1l1554:
  4185     06FF  1003               	clrc
  4186     0700  0DF0               	rlf	i1___bmul@multiplicand,f
  4187     0701                     i1l1556:
  4188     0701  1003               	clrc
  4189     0702  0CF3               	rrf	i1___bmul@multiplier,f
  4190     0703  0873               	movf	i1___bmul@multiplier,w
  4191     0704  1D03               	btfss	3,2
  4192     0705  2F07               	goto	u128_21
  4193     0706  2F08               	goto	u128_20
  4194     0707                     u128_21:
  4195     0707  2EF7               	goto	i1l1550
  4196     0708                     u128_20:
  4197     0708                     i1l1558:
  4198     0708  0872               	movf	i1___bmul@product,w
  4199     0709                     i1l312:
  4200     0709  0008               	return
  4201     070A                     __end_ofi1___bmul:
  4202     007E                     btemp	set	126	;btemp
  4203     007E                     wtemp0	set	126
  4204                           
  4205                           	psect	idloc
  4206                           
  4207                           ;Config register IDLOC0 @ 0x2000
  4208                           ;	unspecified, using default values
  4209     2000                     	org	8192
  4210     2000  3FFF               	dw	16383
  4211                           
  4212                           ;Config register IDLOC1 @ 0x2001
  4213                           ;	unspecified, using default values
  4214     2001                     	org	8193
  4215     2001  3FFF               	dw	16383
  4216                           
  4217                           ;Config register IDLOC2 @ 0x2002
  4218                           ;	unspecified, using default values
  4219     2002                     	org	8194
  4220     2002  3FFF               	dw	16383
  4221                           
  4222                           ;Config register IDLOC3 @ 0x2003
  4223                           ;	unspecified, using default values
  4224     2003                     	org	8195
  4225     2003  3FFF               	dw	16383
  4226                           
  4227                           	psect	config
  4228                           
  4229                           ;Config register CONFIG @ 0x2007
  4230                           ;	Oscillator Selection bits
  4231                           ;	FOSC = HS, HS oscillator
  4232                           ;	Watchdog Timer Enable bit
  4233                           ;	WDTE = OFF, WDT disabled
  4234                           ;	Power-up Timer Enable bit
  4235                           ;	PWRTE = ON, PWRT enabled
  4236                           ;	Brown-out Reset Enable bit
  4237                           ;	BOREN = ON, BOR enabled
  4238                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4239                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  4240                           ;	Data EEPROM Memory Code Protection bit
  4241                           ;	CPD = OFF, Data EEPROM code protection off
  4242                           ;	Flash Program Memory Write Enable bits
  4243                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4244                           ;	In-Circuit Debugger Mode bit
  4245                           ;	DEBUG = 0x1, unprogrammed default
  4246                           ;	Flash Program Memory Code Protection bit
  4247                           ;	CP = OFF, Code protection off
  4248     2007                     	org	8199
  4249     2007  3FF2               	dw	16370

Data Sizes:
    Strings     15
    Constant    12
    Data        0
    BSS         62
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     41      46
    BANK1            80     59      74
    BANK3            96     30      72
    BANK2            96      0       0

Pointer List with Targets:

    strncpy@from	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_3(CODE[6]), STR_1(CODE[5]), 

    strncpy@to	PTR unsigned char  size(1) Largest target is 14
		 -> main@send_packet(BANK3[14]), 

    strncpy@cp	PTR unsigned char  size(1) Largest target is 14
		 -> main@send_packet(BANK3[14]), 

    memset@p1	PTR void  size(1) Largest target is 14
		 -> main@send_packet(BANK3[14]), 

    memset@p	PTR unsigned char  size(1) Largest target is 14
		 -> main@send_packet(BANK3[14]), 

    memcpy@d1	PTR void  size(2) Largest target is 42
		 -> main@packet(BANK3[14]), receive_queue(BANK3[42]), UART_send_packet@buffer(BANK0[15]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 42
		 -> main@packet(BANK3[14]), receive_queue(BANK3[42]), UART_send_packet@buffer(BANK0[15]), 

    memcpy@s1	PTR const void  size(2) Largest target is 42
		 -> main@send_packet(BANK3[14]), receive_queue(BANK3[42]), UART_data_received@buffer(BANK1[15]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 42
		 -> main@send_packet(BANK3[14]), receive_queue(BANK3[42]), UART_data_received@buffer(BANK1[15]), 

    sp__memset	PTR void  size(1) Largest target is 14
		 -> main@send_packet(BANK3[14]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 50
		 -> STR_2(CODE[4]), Lcd_Write_Int@buffer(BANK1[50]), 

    received_queue_get_packet@packet	PTR struct . size(1) Largest target is 14
		 -> main@packet(BANK3[14]), 

    sp__memcpy	PTR void  size(2) Largest target is 42
		 -> main@packet(BANK3[14]), receive_queue(BANK3[42]), UART_send_packet@buffer(BANK0[15]), 

    sp__strncpy	PTR unsigned char  size(1) Largest target is 14
		 -> main@send_packet(BANK3[14]), 

    UART_send_packet@packet_to_send	PTR struct . size(1) Largest target is 14
		 -> main@send_packet(BANK3[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_UART_data_received
    _UART_data_received->i1_memcpy
    i1_memcpy->i1___bmul

Critical Paths under _main in BANK0

    _main->_UART_send_packet
    _received_queue_get_packet->_memcpy
    _communication_init->___aldiv
    _UART_send_packet->_memcpy
    _memcpy->___bmul
    _Lcd_Write_Int->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in BANK0

    _UART_data_received->i1_memcpy

Critical Paths under _main in BANK1

    _main->_Lcd_Write_Int

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0    9636
                                              0 BANK3     30    30      0
                          _Lcd_Clear
                           _Lcd_Init
                      _Lcd_Write_Int
                   _Lcd_Write_String
                   _UART_send_packet
                 _communication_init
                 _communication_task
                             _memset
          _received_queue_get_packet
      _received_queue_thereispending
                            _strncpy
 ---------------------------------------------------------------------------------
 (1) _received_queue_thereispending                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _received_queue_get_packet                            1     1      0    1136
                                             23 BANK0      1     1      0
                             ___bmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     179
                                              8 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _memset                                               7     3      4     384
                                              8 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _communication_task                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _communication_init                                   8     4      4     788
                                             23 BANK0      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     653
                                              8 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _UART_send_packet                                    18    18      0    1922
                                             23 BANK0     18    18      0
                        _UART_TxByte
                             _memcpy
                            _strncpy
 ---------------------------------------------------------------------------------
 (1) _strncpy                                              6     3      3     696
                                              8 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6     887
                                             12 BANK0     11     5      6
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _UART_TxByte                                          2     2      0      31
                                              8 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Int                                       64    62      2    3413
                                             20 BANK0      5     3      2
                                              0 BANK1     59    59      0
                   _Lcd_Write_String
                            ___awdiv
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     440
                                              8 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     449
                                              8 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     653
                                              8 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     592
                                             13 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              9 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                             12 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              9 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0     403
                                              5 BANK0      3     3      0
                 _UART_data_received
 ---------------------------------------------------------------------------------
 (6) _UART_data_received                                   2     2      0     403
                                             10 COMMON     2     2      0
                           i1___bmul
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (7) i1_memcpy                                            11     5      6     282
                                              4 COMMON     6     0      6
                                              0 BANK0      5     5      0
                           i1___bmul (ARG)
 ---------------------------------------------------------------------------------
 (7) i1___bmul                                             4     3      1      87
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Write_Int
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___awdiv
     ___lwdiv
     ___lwmod
   _Lcd_Write_String
   _UART_send_packet
     _UART_TxByte
     _memcpy
       ___bmul (ARG)
     _strncpy
   _communication_init
     ___aldiv
   _communication_task
   _memset
   _received_queue_get_packet
     ___bmul
     _memcpy
   _received_queue_thereispending
   _strncpy

 _ISR (ROOT)
   _UART_data_received
     i1___bmul
     i1_memcpy
       i1___bmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      CC       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     29      2E       5       57.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     3B      4A       7       92.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60     1E      48       9       75.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      CC      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon May 08 23:12:26 2023

                                    pc 0002                         ___bmul@product 002A  
                                   l41 0723                                     l35 03B8  
                                   l61 06D4                                     l38 050D  
                                   l55 0722                                     l80 0686  
                                   l64 06DF                                     l81 068C  
                                   l82 068D                                     l58 0674  
                                   l83 0693                                     l91 0304  
                                   l85 0694                                     l77 067E  
                                   l78 067F                                     l94 0716  
                                   l79 0685                                     l88 0653  
                         ___awdiv@sign 002E                                     fsr 0004  
                  ?_UART_data_received 0070                                    l103 0582  
                                  l130 0174                                    l109 048E  
                                  l312 06C9                                    l351 0189  
                                  l361 0211                                    l439 036D  
                                  l740 05B6                                    l558 0448  
                                  l568 0549                                    l746 06B2  
                                  l756 04D0                                    _ISR 06E0  
                                  fsr0 0004                                    indf 0000  
                                 ?_ISR 0070                                   l2000 0444  
                                 l2010 0520                                   l2100 02C9  
                                 l2020 053F                                   l2012 0524  
                                 l2004 050E                                   l2110 02EC  
                                 l2102 02D4                                   l2014 0528  
                                 l2006 0516                                   l2022 0545  
                                 l2112 02F2                                   l2104 02DA  
                                 l2016 0532                                   l2008 0519  
                                 l2120 0030                                   l2040 0386  
                                 l2200 0231                                   l2114 02F8  
                                 l2106 02E0                                   l2018 0538  
                                 l2130 004F                                   l2122 003C  
                                 l2050 03A7                                   l2042 0399  
                                 l2210 024F                                   l2202 0234  
                                 l2116 02FE                                   l2108 02E6  
                                 l2140 00B8                                   l2132 0067  
                                 l2124 003E                                   l2052 03AF  
                                 l2036 0371                                   l2060 050A  
                                 l2220 0277                                   l2212 025D  
                                 l2204 0237                                   l2118 070A  
                                 l2150 00D1                                   l2142 00BD  
                                 l2134 0087                                   l2126 0045  
                                 l2038 0379                                   l2062 050B  
                                 l2054 04D1                                   l2222 027C  
                                 l2214 0261                                   l2206 023C  
                                 l2160 0168                                   l2152 012B  
                                 l2144 00C3                                   l2136 008F  
                                 l2128 004A                                   l2048 039D  
                                 l2064 050C                                   l2056 04D9  
                                 l2080 071F                                   l2216 0267  
                                 l2208 024B                                   l2090 02A2  
                                 l2162 0169                                   l2154 0133  
                                 l2146 00C9                                   l2138 00B2  
                                 l2058 04DD                                   l2170 06A4  
                                 l2218 0271                                   l2092 02A8  
                                 l2156 015E                                   l2148 00CE  
                                 l2164 0698                                   l2084 0657  
                                 l2094 02B2                                   l2086 0297  
                                 l2158 0166                                   l2166 069B  
                                 l1800 068A                                   l2096 02B8  
                                 l2088 029A                                   l2168 06A0  
                                 l1802 0691                                   l2098 02C3  
                                 l1810 0562                                   l1820 0578  
                                 l1812 0565                                   l1804 054D  
                                 l1900 018D                                   l2196 0212  
                                 l1822 057F                                   l1814 056C  
                                 l1806 0553                                   l1910 01AF  
                                 l1902 0198                                   l2198 0226  
                                 l1816 056F                                   l1808 0554  
                                 l1840 0583                                   l1832 04B3  
                                 l1824 0492                                   l1920 01E9  
                                 l1912 01BC                                   l1904 019C  
                                 l1818 0575                                   l1850 06CD  
                                 l1842 058E                                   l1834 04BA  
                                 l1826 0495                                   l1930 0209  
                                 l1922 01EA                                   l1914 01C0  
                                 l1906 01A4                                   l1860 0631  
                                 l1940 0311                                   l1852 06D3  
                                 l1844 0595                                   l1836 04BE  
                                 l1828 049B                                   l1924 01F3  
                                 l1916 01C9                                   l1908 01AC  
                                 l1870 0650                                   l1862 0639  
                                 l1950 0322                                   l1942 0313  
                                 l1934 0305                                   l1854 06D9  
                                 l1846 059B                                   l1838 04C2  
                                 l1918 01DB                                   l1926 01F9  
                                 l1864 063C                                   l1872 0449  
                                 l1960 033A                                   l1952 0328  
                                 l1944 0317                                   l1936 0308  
                                 l1856 06DD                                   l1848 05A8  
                                 l1928 01FE                                   l1880 06B6  
                                 l1794 0678                                   l1866 0642  
                                 l1858 062E                                   l1874 044E  
                                 l1962 034B                                   l1954 032B  
                                 l1970 035F                                   l1946 031C  
                                 l1938 030C                                   l1890 06C8  
                                 l1882 06B7                                   l1796 067C  
                                 l1868 0645                                   l1876 046A  
                                 l1972 0364                                   l1964 0351  
                                 l1956 0332                                   l1948 0320  
                                 l1980 0407                                   l1884 06BB  
                                 l1798 0683                                   l1878 0472  
                                 l1974 0369                                   l1966 0352  
                                 l1958 0336                                   l1990 041F  
                                 l1982 040D                                   l1894 0175  
                                 l1886 06BF                                   l1968 0359  
                                 l1992 0430                                   l1984 0410  
                                 l1896 0178                                   l1888 06C1  
                                 l1994 0436                                   l1986 0417  
                                 l1978 0403                                   l1898 017C  
                                 l1996 0437                                   l1988 041B  
                                 l1998 043E                                   STR_1 0622  
                                 STR_2 0627                                   STR_3 061C  
                                 u2000 0532                                   u2001 0531  
                                 u2020 0545                                   u2100 0044  
                                 u2021 0544                                   u2005 052E  
                                 u2110 004A                                   u2015 0539  
                                 u2111 0049                                   u2120 00B8  
                                 u2040 03B8                                   u2121 00B7  
                                 u2041 03B7                                   u2130 00BD  
                                 u2050 04EB                                   u2210 0271  
                                 u2131 00BC                                   u2211 0270  
                                 u2140 015E                                   u2141 015D  
                                 u2150 0166                                   u2151 0165  
                                 u2055 04E6                                   u1600 04B2  
                                 u2160 06B2                                   u2145 015A  
                                 u1601 04B1                                   u2161 06B1  
                                 u2090 0043                                   u1610 04B9  
                                 u2091 0041                                   u1611 04B8  
                                 u1620 04D0                                   u1700 017C  
                                 u2237 0569                                   u1621 04CF  
                                 u1701 017B                                   u1550 067C  
                                 u1630 05B6                                   u1710 018D  
                                 u1551 067B                                   u2247 057C  
                                 u1631 05B5                                   u1711 018C  
                                 u1560 0683                                   u1800 030C  
                                 u1640 06D9                                   u1720 01AC  
                                 u1561 0682                                   u2257 02AE  
                                 u1801 030B                                   u1641 06D8  
                                 u1721 01AB                                   u1570 068A  
                                 u1650 0458                                   u1810 0317  
                                 u1571 0689                                   u2267 02BE  
                                 u1811 0316                                   u1580 0691  
                                 u1660 047C                                   u1820 0328  
                                 u1900 040D                                   u1740 01C0  
                                 u1581 0690                                   u2277 02CF  
                                 u1821 0327                                   u1901 040C  
                                 u1741 01BF                                   u1670 048E  
                                 u2287 064B                                   u1671 048D  
                                 u1735 01B1                                   _PIE1 008C  
                                 u1840 033A                                   u1920 041F  
                                 u1760 01DB                                   u1680 06BB  
                                 u1841 0339                                   u1921 041E  
                                 u1761 01DA                                   u1681 06BA  
                                 u1690 06C8                                   u1595 0557  
                                 u1835 032C                                   u1915 0411  
                                 u1755 01C2                                   u1691 06C7  
                                 u1860 034B                                   u1940 0430  
                                 u1780 01F9                                   u1861 034A  
                                 u1941 042F                                   u1781 01F8  
                                 u1765 01D7                                   u1790 01FE  
                                 u1855 033B                                   u1935 0420  
                                 u1791 01FD                                   u1775 01EB  
                                 u1880 035F                                   u1960 0444  
                                 u1881 035E                                   u1865 0347  
                                 u1961 0443                                   u1945 042C  
                                 u1890 0364                                   u1970 0516  
                                 u1891 0363                                   u1875 0353  
                                 u1955 0438                                   u1971 0515  
                                 u1990 0528                                   u1991 0527  
                                 u1985 051A                                   i1l52 0402  
                                 _RCIF 0065                                   _PIR1 000C  
                 ??_UART_data_received 007A        received_queue_get_packet@packet 0037  
                    ?_Lcd_Write_String 002D                                   _main 0212  
                                 btemp 007E                                   start 0010  
                   ??_Lcd_Write_String 002F                        __end_of_Lcd_Cmd 0654  
                    ___bmul@multiplier 002B                                  ??_ISR 0025  
            _received_queue_get_packet 0654                        __end_of___aldiv 0212  
                                ?_main 0070                        __end_of___awdiv 036E  
                      ___awdiv@divisor 0028                        __end_of___lwdiv 0449  
                                i1l312 0709                                  i1l175 06EC  
                      __end_of___lwmod 054A                             i1memcpy@d1 0074  
                                i1l740 05EA                             i1memcpy@s1 0076  
                      ___awdiv@counter 002D                                  _RCREG 001A  
                                _RCSTA 0018                                  _SPBRG 0099  
                                _PORTB 0006                                  _PORTD 0008  
                                _TRISB 0086                                  _TRISC 0087  
                                _TRISD 0088                                  _TRISE 0089  
                                _TXREG 0019                                  _TXSTA 0098  
      ??_received_queue_thereispending 0028                       __end_ofi1___bmul 070A  
             UART_data_received@buffer 00DB                                  pclath 000A  
                                status 0003                                  wtemp0 007E  
                     __end_ofi1_memcpy 05EB                        __end_of_strncpy 04D1  
                     __end_of_Lcd_Init 0305                       __end_of_Lcd_Port 0695  
                      __initialization 0013                           __end_of_main 0297  
                               ??_main 0049                       ___awdiv@dividend 002A  
                               i1l2030 05C9                                 i1l2032 05CF  
                               i1l2034 05DC                                 i1l2026 05B7  
                               i1l2028 05C2                                 i1l2070 03CC  
                               i1l2072 03D2                                 i1l2224 06E0  
                               i1l2074 03DB                                 i1l2066 03B9  
                               i1l2226 06E4                                 i1l2076 03E1  
                               i1l2068 03C6                                 i1l2228 06E9  
                               i1l1550 06F7                                 i1l2078 03FE  
                               i1l1552 06FB                                 i1l1554 06FF  
                               i1l1556 0701                                 i1l1548 06F6  
                               i1l1558 0708                                 u203_20 05EA  
                               u203_21 05E9                                 u206_20 03C6  
                               u222_20 06E4                                 u206_21 03C5  
                               u222_21 06E3                                 u127_20 06FB  
                               u207_20 03DB                                 u127_21 06FA  
                               u207_21 03DA                                 u128_20 0708  
                               u208_20 03E1                                 u128_21 0707  
                               u208_21 03E0                                 _INTCON 000B  
                            ??_Lcd_Cmd 0029                            i1memcpy@tmp 0020  
                         ?_UART_TxByte 0070                                 ___bmul 06B3  
                            ??___aldiv 0030                              ??___awdiv 002C  
                            ??___lwdiv 002C                              ??___lwmod 002C  
                               _memcpy 0583                                 _keypad 0610  
                               _memset 0695                       ___awdiv@quotient 002F  
                __end_of_Lcd_Write_Int 0175                                 saved_w 007E  
                     Lcd_Write_Int@val 0034                              ??_strncpy 002B  
__end_of_received_queue_thereispending 0723          _received_queue_thereispending 071F  
              __end_of__initialization 002C                      __end_of_Lcd_Clear 0717  
                  ___bmul@multiplicand 0028                       _UART_send_packet 036E  
                       __pcstackCOMMON 0070                 UART_data_received@data 007B  
                            ?i1___bmul 0070                     _communication_init 04D1  
                   _communication_task 0723                              ?i1_memcpy 0074  
                            ?_Lcd_Init 0070                              ?_Lcd_Port 0070  
                     i1___bmul@product 0072                    ?_communication_init 0037  
                  ?_communication_task 0070                         Lcd_Write_Int@i 00D9  
                       Lcd_Write_Int@n 00D5                         Lcd_Write_Int@t 00D7  
                           __pbssBANK0 0049                             __pbssBANK1 00DB  
                           __pbssBANK3 0190                             __pmaintext 0212  
                              ?___bmul 0028                   ??_communication_init 003B  
                 ??_communication_task 0028                             __pintentry 0004  
                   main@received_count 01BA                                ?_memcpy 002C  
                              ?_memset 0028                             ??i1___bmul 0071  
                           ??i1_memcpy 007A      __end_of_received_queue_get_packet 0675  
                           ??_Lcd_Init 002C                             ??_Lcd_Port 0028  
                           __stringtab 0600                         _Lcd_Write_Char 054A  
                              _Lcd_Cmd 062B             communication_init@baudrate 0037  
                    UART_send_packet@i 0047         ?_received_queue_thereispending 0070  
                              ___aldiv 0175                                ___awdiv 0305  
               UART_send_packet@buffer 0037                                ___lwdiv 0403  
                              ___lwmod 050E         UART_send_packet@packet_to_send 0046  
                              __ptext1 071F                                __ptext2 0654  
                              __ptext3 06B3                                __ptext4 0695  
                              __ptext5 0723                                __ptext6 04D1  
                              __ptext7 0175                                __ptext8 036E  
                              __ptext9 048F                       ___aldiv@dividend 002C  
                  i1___bmul@multiplier 0073                   Numpad_Read@oldKeyVal 004B  
                              clrloop0 0718                 __end_of_Lcd_Write_Char 0583  
                              _strncpy 048F                   end_of_initialization 002C  
                        _receive_queue 0190                                memcpy@d 0033  
                              memcpy@n 0030                                memcpy@s 0035  
                              memset@c 0028                                memset@n 002A  
                              memset@p 002E                       ___aldiv@quotient 0033  
                            Lcd_Port@a 0028                              _PORTDbits 0008  
                            _PORTEbits 0009                 _receive_queue_elements 004C  
             __end_of_UART_send_packet 03B9                        ?_Lcd_Write_Char 0070  
                    Lcd_Write_String@a 002D                      Lcd_Write_String@i 0032  
                           main@packet 01BC                              _Lcd_Clear 070A  
                       __end_of___bmul 06CA                              i1memcpy@d 0021  
                            i1memcpy@n 0078                              i1memcpy@s 0023  
                     _Lcd_Write_String 0449                         __end_of_memcpy 05B7  
                       __end_of_keypad 061C                         __end_of_memset 06B3  
              UART_data_received@index 0049                    start_initialization 0013  
                          __end_of_ISR 06F5                             ?_Lcd_Clear 0070  
                             ??___bmul 0029                               ??_memcpy 0032  
                      Lcd_Write_Char@a 002C                               ??_memset 002C  
                      Lcd_Write_Char@y 002B                        Lcd_Write_Int@n1 00D3  
                            ___latbits 0002                          __pcstackBANK0 0020  
                        __pcstackBANK1 00A0                          __pcstackBANK3 01BA  
                         _is_line_busy 004D                               ?_Lcd_Cmd 0070  
                     ___lwdiv@dividend 002A                               ?___aldiv 0028  
                             ?___awdiv 0028                               ?___lwdiv 0028  
                             ?___lwmod 0028                              __pstrings 0600  
                        _Lcd_Write_Int 0030                       ___lwdiv@quotient 002E  
           __end_of_UART_data_received 0403             ?_received_queue_get_packet 0070  
                             ?_strncpy 0028                        ___aldiv@divisor 0028  
                    interrupt_function 0004                        ___aldiv@counter 0031  
                            clear_ram0 0717                            strncpy@from 0028  
                          strncpy@size 0029                          ??_UART_TxByte 0028  
                i1___bmul@multiplicand 0070                               Lcd_Cmd@a 002B  
                          ??_Lcd_Clear 002C                               i1___bmul 06F5  
                          __stringbase 060F                         ?_Lcd_Write_Int 0034  
                             i1_memcpy 05B7                       ??_Lcd_Write_Char 0029  
                             _Lcd_Init 0297                      ?_UART_send_packet 0070  
                             _Lcd_Port 0675                     ??_UART_send_packet 0037  
             __end_of_Lcd_Write_String 048F                              memcpy@tmp 0032  
                  __end_of_UART_TxByte 06E0                     __end_of__stringtab 0610  
                      ___lwdiv@divisor 0028                        ___lwdiv@counter 002D  
                             __ptext10 0583                               __ptext11 06CA  
                             __ptext20 062B                               __ptext12 0030  
                             __ptext21 0675                               __ptext13 050E  
                             __ptext22 06E0                               __ptext14 0403  
                             __ptext23 03B9                               __ptext15 0305  
                             __ptext24 05B7                               __ptext16 0449  
                             __ptext25 06F5                               __ptext17 054A  
                             __ptext18 0297                               __ptext19 070A  
                      main@send_packet 01CA                        UART_TxByte@byte 0029  
                      ??_Lcd_Write_Int 0036                               memcpy@d1 002C  
                             memcpy@s1 002E                    Lcd_Write_Int@buffer 00A0  
                             memset@p1 002D                     Lcd_Write_Char@temp 002A  
                             intlevel1 0000                       ___lwmod@dividend 002A  
                            stringcode 060A                            _UART_TxByte 06CA  
                            strncpy@cp 002D                              strncpy@to 002C  
                   Lcd_Write_Int@isNeg 00D2                        ___lwmod@divisor 0028  
                      ___lwmod@counter 002D                               stringdir 060A  
                             stringtab 0600                           ___aldiv@sign 0032  
          ??_received_queue_get_packet 0037             __end_of_communication_init 050E  
           __end_of_communication_task 0724                     _UART_data_received 03B9  
